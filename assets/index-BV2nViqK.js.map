{"version":3,"mappings":"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","names":["pb","PocketBase","fetchPocketbaseDocument","__name","collection","id","fetchAllPocketbaseDocuments","collectionName","record","createPocketbaseDocument","data","updatePocketbaseDocument","deletePocketbaseDocument","authProvider","email","password","response","_a","_b","_c","token","useImageStore","create","set","image","useCurrency","currencies","useQuery","CurrencyContext","createContext","CurrencyProvider","children","currency","setCurrency","useState","rate","setRate","displayCurrency","useMemo","useEffect","selected","c","convert","useCallback","value","jsx","useCurrencyContext","context","useContext","formatCurrency","locale","hasFraction","roundedValue","ProductList","useMediaQuery","theme","List","ListActions","jsxs","Box","ProductFilters","ProductGrid","isLoading","useListContext","useTheme","Grid","_","index","Card","CardContent","Typography","RecordContextProvider","ProductCard","useRecordContext","CardMedia","e","CardActions","IconButton","VisibilityIcon","EditIcon","useTranslate","dataProvider","useDataProvider","notify","useNotify","setFilters","filterValues","categories","setCategories","React.useState","loadingCategories","setLoadingCategories","searchValue","setSearchValue","React.useEffect","handleCategoryToggle","categoryId","newCategoryId","handleSearchChange","event","MuiTextField","InputAdornment","SearchIcon","MuiList","category","ListItem","ListItemButton","ListItemIcon","CheckIcon","ListItemText","TopToolbar","SortButton","CreateButton","ExportButton","CLOUDINARY_NAME","CLOUDINARY_UPLOAD_PRESET","CLOUDINARY_URL","uploadImageToCloudinary","file","formData","ImageUploadField","props","source","label","field","useInput","handleImageUpload","url","error","TextInput","ImageInput","ImageField","RichTextInput","React.lazy","module","ProductTitle","appTitle","useDefaultTitle","defaultTitle","useEditContext","Fragment","ProductEdit","Edit","SimpleForm","required","Divider","NumberInput","ReferenceInput","SelectInput","ArrayInput","SimpleFormIterator","input","rte","img","sel","range","React.Suspense","useCreateContext","ProductCreate","Create","useShowContext","ProductImage","validImageUrls","ImageList","imageUrl","ImageListItem","ProductShow","Show","TextField","AttachMoney","NumberField","Category","ReferenceField","Chip","RichTextField","Paper","CalendarToday","DateField","Inventory","products","ProductIcon","LinkToRelatedProducts","translate","Button","Link","queryString","CategoriesTitle","title","CategoryListActions","CategoryList","CategoryGrid","isPending","redirect","useRedirect","refresh","useRefresh","CardActionArea","EditButton","Img","styled","ThumbnailField","Column","DataTable","ColumnNumber","ImageUrlField","Avatar","CategoryEdit","selectImage","setSelectImage","location","useLocation","CategoryTitle","Labeled","ReferenceManyField","CategoryCreate","Title","CategoryIcon","OrderPendingList","CardHeader","formatDate","dateString","format","parseISO","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","order","RevenueFilter","onFilterChange","isOpen","setIsOpen","isMonthChecked","setIsMonthChecked","isYearChecked","setIsYearChecked","startDate","setStartDate","dayjs","endDate","setEndDate","handleMonthCheck","checked","handleYearCheck","handleDateChange","React","LocalizationProvider","AdapterDayjs","Close","FilterList","Collapse","FormControlLabel","Checkbox","DatePicker","newValue","SellRevenueChart","loading","chartData","item","date","day","month","amount","totalLAK","sum","totalUSD","totalTHB","CircularProgress","ResponsiveContainer","LineChart","CartesianGrid","XAxis","YAxis","Line","ModernStatusCard","icon","StatusCountCards","sellRevenue","orderStatusCount","customerCount","AttachMoneyIcon","PersonAddRoundedIcon","ShoppingCartIcon","CheckCircleIcon","CancelIcon","useStaticDashboardData","setData","prev","statusCountResponse","orderListResponse","useRevenueData","filterParams","sellRevenueParams","sellRevenueUrl","sellRevenueResponse","styles","Dashboard","isXSmall","isSmall","setFilterParams","statusCount","orderList","staticLoading","staticError","revenueLoading","revenueError","handleFilterChange","params","Alert","sumSellRevenue","acc","DashboardComponent","API_BASE_URL","ordersApiDataProvider","resource","page","perPage","status","queryParams","blogService","sort","filter","options","result","ids","deletedIds","blogsDataProvider","filterString","filters","rest","dataToUpdate","transformCustomer","customer","customersDataProvider","q","filterParts","key","target","productsDataProvider","pagination","filterStr","filterConditions","stockFilters","salesFilters","sortStr","COLLECTION_NAME","productCategoriesDataProvider","records","cloudinaryData","usersDataProvider","passwordConfirm","avatar","avatarUrl","dataToCreate","oldPassword","currentUser","restProvider","simpleRestProvider","addressesDataProvider","dataProviderFactory","type","dataProviderPromise","getDataProvider","defaultDataProvider","name","__vitePreload","provider","customEnglishMessages","englishMessages","AvatarField","size","sx","FullNameField","FullNameField$1","memo","AddressField","TableCellRight","Basket","productIds","useGetMany","productsById","product","InvoiceShow","CustomerField","listFilters","DateInput","FilterButton","ColumnsButton","InvoicesTitle","InvoiceList","invoices","InvoiceIcon","CustomArrowDropDownIcon","color","ArrowDropDownIcon","CustomArrowDropUpIcon","ArrowDropUpIcon","CurrencySelector","showLabel","variant","minWidth","open","setOpen","handleCurrencyChange","filteredCurrencies","IconComponent","FormControl","Select","MenuItem","AppBarToolbar","LocalesMenuButton","LoadingIndicator","CustomAppBar","isLargeEnough","AppBar","TitlePortal","lazy","n","m","BlogCreate","BlogEditActions","ShowButton","DeleteButton","BlogEdit","FormDataConsumer","DescriptionField","plainText","html","tmp","truncatedText","blogFilters","SearchInput","BlogListActions","BlogBulkActions","BulkDeleteButton","BlogList","BlogShowActions","BlogShow","SimpleShowLayout","UrlField","blogs","DescriptionIcon","customerFilters","CustomerListActions","handleExportExcel","exportData","worksheet","XLSX.utils","workbook","XLSX.writeFile","Download","CustomerTitle","CustomerList","EmailField","address","province","district","isInternational","addressRows","row","CustomerShowLayout","transformedRecord","_e","_d","_i","_h","_g","_f","CustomerShow","customers","People","OrderListFilter","setSearchTerm","searchTerm","setSearchTermState","handleSearch","OrderList","TabbedDatagrid","tabs","activeTab","setActiveTab","orderCounts","setOrderCounts","counts","tab","handleChange","tabsContainer","downloadExcel","searchFilter","totals","total","ws","wb","Tabs","choice","Tab","OrdersTable","OrderDetail","details","onToggle","currencyType","getCurrentTotal","ExpandLess","ExpandMore","Loading","Receipt","Person","LocationOn","price","React.memo","orders","setOrders","setLoading","setError","openOrderId","setOpenOrderId","detailsCache","setDetailsCache","fetchOrderDetails","orderId","o","err","provinceName","districtName","productPromises","productId","productData","productResults","handleToggle","newOpenOrderId","newDetailsCache","orderItems","Totals","OrderEdit","OrderTitle","OrderForm","CustomerDetails","RaLink","CustomerAddress","Spacer","Form","PrevNextButtons","BooleanInput","Toolbar","OrderIcon","Menu","dense","state","setState","useSidebarState","clsx","DashboardMenuItem","MenuItemLink","Layout","LoginPage","setEmail","setPassword","login","useLogin","handleSubmit","Login","Container","ReviewItem","createPath","useCreatePath","ListItemAvatar","FunctionField","ReviewListMobile","review","ProductReferenceField","CustomerReferenceField","StarRatingField","i","Icon","rowSx","selectedRow","style","green","orange","red","noSelection","BulkAcceptButton","selectedIds","unselectAll","useUnselectAll","updateMany","useUpdateMany","ThumbUp","BulkRejectButton","ThumbDown","ReviewsBulkActionButtons","ReviewListDesktop","navigate","useNavigate","colorMap","reviewFilters","AutocompleteInput","AcceptButton","redirectTo","approve","useUpdate","RejectButton","reject","ReviewEditToolbar","SaveButton","ReviewTitle","ReviewEdit","onCancel","EditBase","Stack","CloseIcon","ReviewListActions","ReviewsTitle","ReviewList","handleClose","match","matchPath","Drawer","StarRatingInput","StyledRating","Rating","ReviewCreate","onSuccess","getRecordFromLocation","reviews","ReviewIcon","segments","segment","VisitorIcon","LinkToRelatedCustomers","visitors","Segments","getResourceLabel","useGetResourceLabel","pageTitle","softDarkTheme","defaultTheme","softLightTheme","chiptuneTheme","createTheme","lightTheme","lighten","darkTheme","cssVariablesTheme","BW_SIDEBAR_OVERRIDE","themes","defaultLightTheme","defaultDarkTheme","bwLightTheme","bwDarkTheme","nanoLightTheme","nanoDarkTheme","radiantLightTheme","radiantDarkTheme","houseLightTheme","houseDarkTheme","MuiProvider","emotionCache","createCache","CacheProvider","ThemeProvider","CssBaseline","userFilters","UserListActions","user","UserTitle","UserList","UserCreate","validateForm","values","errors","PasswordInput","UserEdit","AvatarDisplay","UserShowActions","UserShow","users","i18nProvider","polyglotI18nProvider","messages","store","localStorageStore","App","themeName","useStore","singleTheme","Admin","CustomRoutes","Route","Resource","queryClient","QueryClient","AppWrapper","StoreContextProvider","QueryClientProvider","container","root","createRoot"],"ignoreList":[],"sources":["../../src/api/pocketbase.ts","../../src/authProvider.ts","../../src/store/imageStore.ts","../../src/hooks/useCurrency.ts","../../src/components/CurrencySelector/CurrencyProvider.tsx","../../src/utils/format.ts","../../src/products/ProductList.tsx","../../src/utils/cloudinaryKey.ts","../../src/utils/cloudinaryUpload.ts","../../src/components/ImageUploadField.tsx","../../src/products/ProductEdit.tsx","../../src/products/ProductCreate.tsx","../../src/products/ProductShow.tsx","../../src/products/index.tsx","../../src/categories/LinkToRelatedProducts.tsx","../../src/categories/CategoryList.tsx","../../src/products/ThumbnailField.tsx","../../src/categories/CategoryEdit.tsx","../../src/categories/CategoryCreate.tsx","../../src/categories/index.ts","../../src/dashboard/OrderPendingList.tsx","../../src/dashboard/RevenueFilter.tsx","../../src/dashboard/SellRevenueChart.tsx","../../src/dashboard/StatusCountCards.tsx","../../src/dashboard/useDashboardData.ts","../../src/dashboard/Dashboard.tsx","../../src/dashboard/index.ts","../../src/dataProvider/ordersApi.ts","../../src/api/blogsService.ts","../../src/dataProvider/blogsDataProvider.ts","../../src/dataProvider/customersDataProvider.ts","../../src/dataProvider/productsDataProvider.ts","../../src/dataProvider/productCategoriesDataProvider.ts","../../src/dataProvider/usersDataProvider.ts","../../src/dataProvider/addressesDataProvider.ts","../../src/dataProvider/index.ts","../../src/i18n/en.ts","../../src/visitors/AvatarField.tsx","../../src/visitors/FullNameField.tsx","../../src/visitors/AddressField.tsx","../../src/orders/TableCellRight.tsx","../../src/orders/Basket.tsx","../../src/invoices/InvoiceShow.tsx","../../src/invoices/InvoiceList.tsx","../../src/invoices/index.ts","../../src/components/CurrencySelector/CurrencySelector.tsx","../../src/layout/AppBarToolbar.tsx","../../src/layout/AppBar.tsx","../../src/blogs/BlogCreate.tsx","../../src/blogs/BlogEdit.tsx","../../src/blogs/BlogList.tsx","../../src/blogs/BlogShow.tsx","../../src/blogs/index.ts","../../src/customers/CustomerList.tsx","../../src/customers/CustomerShow.tsx","../../src/customers/index.ts","../../src/orders/OrderList.tsx","../../src/orders/Totals.tsx","../../src/orders/OrderEdit.tsx","../../src/orders/index.ts","../../src/layout/Menu.tsx","../../src/layout/Layout.tsx","../../src/layout/Login.tsx","../../src/reviews/ReviewItem.tsx","../../src/reviews/ReviewListMobile.tsx","../../src/products/ProductReferenceField.tsx","../../src/visitors/CustomerReferenceField.tsx","../../src/reviews/StarRatingField.tsx","../../src/reviews/rowSx.tsx","../../src/reviews/BulkAcceptButton.tsx","../../src/reviews/BulkRejectButton.tsx","../../src/reviews/ReviewListDesktop.tsx","../../src/reviews/reviewFilters.tsx","../../src/reviews/AcceptButton.tsx","../../src/reviews/RejectButton.tsx","../../src/reviews/ReviewEditToolbar.tsx","../../src/reviews/ReviewEdit.tsx","../../src/reviews/ReviewList.tsx","../../src/reviews/StarRatingInput.tsx","../../src/reviews/ReviewCreate.tsx","../../src/reviews/index.ts","../../src/segments/data.ts","../../src/visitors/SegmentsField.tsx","../../src/visitors/VisitorList.tsx","../../src/visitors/index.ts","../../src/segments/LinkToRelatedCustomers.tsx","../../src/segments/Segments.tsx","../../src/themes/softTheme.ts","../../src/themes/chiptuneTheme.ts","../../src/themes/cssVariablesTheme.ts","../../src/themes/themes.tsx","../../src/styles/theme.ts","../../src/styles/ThemeProvider.tsx","../../src/users/UserList.tsx","../../src/users/UserCreate.tsx","../../src/users/UserEdit.tsx","../../src/users/UserShow.tsx","../../src/users/index.ts","../../src/App.tsx","../../src/index.tsx"],"sourcesContent":["import PocketBase from \"pocketbase\";\n\n// const pb = new PocketBase(\"http://localhost:8080\"); // Replace with your PocketBase URL\nconst pb = new PocketBase(\"https://sensornode.shop\"); // Replace with your PocketBase URL\npb.autoCancellation(false);\n\nexport default pb;\n\n// Generic function to fetch a single document from the collection\nexport const fetchPocketbaseDocument = async <T extends Record<string, any>>(\n  collection: string,\n  id: string | any,\n): Promise<T> => {\n  const record = await pb.collection(collection).getOne<T>(id);\n  return record;\n};\n\n// Generic function to fetch all documents from the collection\nexport async function fetchAllPocketbaseDocuments<\n  T extends Record<string, any>,\n>(collectionName: string): Promise<T[]> {\n  const records = await pb.collection(collectionName).getFullList();\n  return records.map((record) => record as unknown as T);\n}\n\n// Generic function to create a document in the collection\nexport async function createPocketbaseDocument<T extends Record<string, any>>(\n  collectionName: string,\n  data: T,\n): Promise<string> {\n  const record = await pb.collection(collectionName).create(data);\n  return record.id;\n}\n\n// Generic function to update a document in the collection\nexport async function updatePocketbaseDocument<T extends Record<string, any>>(\n  collectionName: string,\n  id: string,\n  data: Partial<T>,\n): Promise<void> {\n  await pb.collection(collectionName).update(id, data);\n}\n\n// Generic function to delete a document from the collection\nexport async function deletePocketbaseDocument(\n  collectionName: string,\n  id: string,\n): Promise<void> {\n  await pb.collection(collectionName).delete(id);\n}\n","import { AuthProvider } from 'react-admin';\nimport pb from './api/pocketbase'; // Import PocketBase instance\n\nconst authProvider: AuthProvider = {\n  login: async ({\n    email,\n    password,\n  }: {\n    email: string;\n    password: string;\n  }): Promise<void> => {\n    try {\n      const response = await pb\n        .collection('users')\n        .authWithPassword(email, password);\n\n      localStorage.setItem('username', response?.record?.username);\n      localStorage.setItem('avatar', response?.record?.avatar);\n      localStorage.setItem('id', response?.record?.id);\n\n      const token = response.token;\n\n      if (token) {\n        pb.authStore.save(token); // Save token in PocketBase's auth store\n      }\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject();\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('username');\n    return Promise.resolve();\n  },\n  checkError: () => Promise.resolve(),\n  checkAuth: () =>\n    localStorage.getItem('username') ? Promise.resolve() : Promise.reject(),\n  getPermissions: () => Promise.resolve(),\n  getIdentity: () =>\n    Promise.resolve({\n      id: localStorage.getItem('id') || '',\n      fullName: localStorage.getItem('username') || '',\n      avatar: localStorage.getItem('avatar') || '',\n    }),\n};\n\nexport default authProvider;\n","import { create } from 'zustand';\n\ninterface ImageStore {\n  selectImage: string | null;\n  setSelectImage: (image: string | null) => void;\n}\n\nexport const useImageStore = create<ImageStore>((set) => ({\n  selectImage: null,\n  setSelectImage: (image) => set({ selectImage: image }),\n}));\n","import { useQuery } from '@tanstack/react-query';\nimport { fetchAllPocketbaseDocuments } from '../api/pocketbase';\nimport { CurrencyItem } from '../model/currency';\n\nexport const useCurrency = () => {\n  const { data: currencies } = useQuery({\n    queryKey: ['currencies'],\n    queryFn: async () => {\n      return await fetchAllPocketbaseDocuments<CurrencyItem>('currency');\n    },\n  });\n\n  return {\n    currencies,\n  };\n};\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useCurrency } from '../../hooks/useCurrency';\n\ninterface CurrencyContextType {\n  displayCurrency: string;\n  currency: string;\n  rate: number;\n  convert: (value: number) => number;\n  setCurrency: (ccy: string) => void;\n}\n\nconst CurrencyContext = createContext<CurrencyContextType | undefined>(\n  undefined\n);\n\nexport const CurrencyProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const { currencies } = useCurrency();\n  const [currency, setCurrency] = useState<string>('USD');\n  const [rate, setRate] = useState<number>(1);\n  const displayCurrency = useMemo(() => {\n    switch (currency) {\n      case 'THB':\n        return '฿';\n      case 'USD':\n        return '$';\n      case 'LAK':\n        return 'LAK';\n      default:\n        return currency;\n    }\n  }, [currency]);\n\n  useEffect(() => {\n    const selected = currencies?.find(\n      (c) => c?.ccy === currency && c?.type === 'SELL'\n    );\n    if (selected) {\n      setRate(Number(selected.rate));\n    }\n  }, [currency, currencies]);\n\n  const convert = useCallback(\n    (value: number) => {\n      return value / rate;\n    },\n    [rate]\n  );\n\n  return (\n    <CurrencyContext.Provider\n      value={{ currency, displayCurrency, rate, convert, setCurrency }}\n    >\n      {children}\n    </CurrencyContext.Provider>\n  );\n};\n\nexport const useCurrencyContext = () => {\n  const context = useContext(CurrencyContext);\n  if (!context) {\n    throw new Error(\n      'useCurrencyContext must be used within a CurrencyProvider'\n    );\n  }\n  return context;\n};\n\nexport const formatCurrency = (value: number, locale = 'en-US') => {\n  const hasFraction = value % 1 !== 0;\n  return new Intl.NumberFormat(locale, {\n    style: 'decimal',\n    minimumFractionDigits: hasFraction ? 2 : 0,\n    maximumFractionDigits: 2,\n  }).format(value);\n};\n","import { localStorageData } from \"./cache\";\n\nexport const formatCurrency = (value: number, locale = 'en-US') => {\n  const roundedValue = value % 1 >= 0.5 ? Math.ceil(value) : Math.floor(value);\n  return new Intl.NumberFormat(locale, {\n    style: 'decimal',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  }).format(roundedValue);\n};\nexport const formattedDate = (date: string) => {\n  const options: Intl.DateTimeFormatOptions = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  };\n  return new Date(date).toLocaleDateString('en-GB', options);\n};\n\nexport function formatDateDMY(dateStr: string | Date): string {\n  const date = new Date(dateStr);\n  const day = date.getDate();\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${day}-${month}-${year}`;\n}\n\nexport const viewAvatar = (avatar?: string) => {\n  const avatarUrl = avatar?.startsWith('http')\n    ? avatar\n    : `${process.env.BASE_URL}/api/files/_pb_users_auth_/${localStorageData('customer_id').getLocalStrage()}/${avatar}?token=${localStorageData('token').getLocalStrage()}`;\n  return avatarUrl;\n};\n\nexport const cleanedDescription = (description: string, maxLines = 5) => {\n  const cleaned = description\n    ?.replace(/\\r\\n/g, '<div style=\"height: 7px\"></div>')\n    ?.replace(/<h1>/g, '<h1 style=\"font-weight: bold;\">')\n    ?.replace(/<\\/h1>/g, '</h1>')\n    ?.replace(/<h2>/g, '<h1 style=\"font-weight: bold;\">');\n\n  // Create a temporary DOM element to parse the HTML and extract text content\n  const tempDiv = document.createElement('div');\n  tempDiv.innerHTML = cleaned || '';\n  const textContent = tempDiv.textContent || '';\n\n  const lines = textContent.split('\\n').slice(0, maxLines).join('\\n');\n  return `<div style=\"display: -webkit-box; -webkit-line-clamp: ${maxLines}; -webkit-box-orient: vertical; overflow: hidden; text-overflow: ellipsis; padding: 0; margin: 0;\">${lines}</div>`;\n};\n","import {\n  Check as CheckIcon,\n  Edit as EditIcon,\n  Search as SearchIcon,\n  Visibility as VisibilityIcon,\n} from '@mui/icons-material';\nimport {\n  Box,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  List as MuiList,\n  TextField as MuiTextField,\n  Theme,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from '@mui/material';\nimport * as React from 'react';\nimport {\n  CreateButton,\n  ExportButton,\n  InputProps,\n  List,\n  RecordContextProvider,\n  SortButton,\n  Title,\n  TopToolbar,\n  useDataProvider,\n  useDefaultTitle,\n  useListContext,\n  useNotify,\n  useRecordContext,\n  useTranslate,\n} from 'react-admin';\nimport { useCurrencyContext } from '../components/CurrencySelector/CurrencyProvider';\nimport { formatCurrency } from '../utils/format';\n\nconst ProductList = () => {\n  const isSmall = useMediaQuery<Theme>((theme) => theme.breakpoints.down('md'));\n\n  return (\n    <List\n      perPage={24}\n      sort={{ field: 'name', order: 'ASC' }}\n      actions={<ListActions />}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: { xs: 'column', md: 'row' },\n        }}\n      >\n        <ProductFilters />\n        <Box sx={{ flex: 1 }}>\n          <ProductGrid />\n        </Box>\n      </Box>\n    </List>\n  );\n};\n\nconst ProductGrid = () => {\n  const { data, isLoading } = useListContext();\n  const theme = useTheme();\n\n  if (isLoading) {\n    return (\n      <Grid container spacing={2} sx={{ px: { xs: 1, sm: 2 } }}>\n        {Array.from({ length: 12 }).map((_, index) => (\n          <Grid\n            key={index}\n            size={{\n              xs: 12,\n              sm: 6,\n              md: 4,\n              lg: 3,\n            }}\n          >\n            <Card\n              sx={{\n                minWidth: '200px',\n                height: 300,\n                display: 'flex',\n                flexDirection: 'column',\n              }}\n            >\n              <Box sx={{ height: 200, bgcolor: 'grey.200' }} />\n              <CardContent sx={{ flex: 1 }}>\n                <Box sx={{ height: 20, bgcolor: 'grey.200', mb: 1 }} />\n                <Box sx={{ height: 16, bgcolor: 'grey.200', width: '60%' }} />\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <Box sx={{ textAlign: 'center', py: 4 }}>\n        <Typography variant='h6' color='textSecondary'>\n          No products found\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Grid container spacing={2} sx={{ px: { xs: 1, sm: 2 } }}>\n      {data.map((record: any) => (\n        <Grid\n          key={record.id}\n          size={{\n            xs: 12,\n            sm: 6,\n            md: 4,\n            lg: 3,\n          }}\n        >\n          <RecordContextProvider value={record}>\n            <ProductCard />\n          </RecordContextProvider>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nconst ProductCard = () => {\n  const record = useRecordContext();\n  const theme = useTheme();\n\n  const { displayCurrency, convert } = useCurrencyContext();\n\n  if (!record) return null;\n\n  return (\n    <Card\n      sx={{\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        gap: 1,\n        transition: 'transform 0.2s, box-shadow 0.2s',\n        '&:hover': {\n          transform: 'translateY(-2px)',\n          boxShadow: theme.shadows[4],\n        },\n        cursor: 'pointer',\n        p: { xs: 1, sm: 1 },\n      }}\n      // go to edit product\n      onClick={() => {\n        window.location.href = `#/products/${record.id}`;\n      }}\n    >\n      <CardMedia\n        component='img'\n        image={\n          Array.isArray(record.image_url)\n            ? record.image_url.length > 0\n              ? record.image_url[0]\n              : '/placeholder-product.svg'\n            : record.image_url || '/placeholder-product.svg'\n        }\n        alt={record.name}\n        sx={{\n          objectFit: 'cover',\n          bgcolor: 'grey.100',\n          height: 200,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          p: 1,\n        }}\n        onError={(e: any) => {\n          e.target.src = '/placeholder-product.svg';\n        }}\n      />\n      <CardContent\n        sx={{\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 0.5,\n          pb: 1,\n        }}\n      >\n        <Typography\n          variant='h6'\n          component='h3'\n          gutterBottom\n          sx={{\n            fontSize: '1rem',\n            fontWeight: 600,\n            lineHeight: 1.2,\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            display: '-webkit-box',\n            WebkitLineClamp: 2,\n            WebkitBoxOrient: 'vertical',\n          }}\n        >\n          {record.name}\n        </Typography>\n\n        <Typography\n          variant='h6'\n          color='primary'\n          sx={{\n            fontWeight: 600,\n            fontSize: '1.1rem',\n            wordBreak: 'break-word',\n          }}\n        >\n          {formatCurrency(convert(record.price))} {displayCurrency}\n        </Typography>\n      </CardContent>\n      <CardActions sx={{ pt: 0, justifyContent: 'space-between' }}>\n        <Box>\n          <IconButton\n            size='small'\n            component='a'\n            href={`#/products/${record.id}/show`}\n            sx={{ color: 'info.main' }}\n          >\n            <VisibilityIcon fontSize='small' />\n          </IconButton>\n          <IconButton\n            size='small'\n            component='a'\n            href={`#/products/${record.id}`}\n            sx={{ color: 'primary.main' }}\n          >\n            <EditIcon fontSize='small' />\n          </IconButton>\n        </Box>\n        <Typography variant='caption' color='textSecondary'>\n          {new Date(record.created).toLocaleDateString()}\n        </Typography>\n      </CardActions>\n    </Card>\n  );\n};\n\nconst ProductTitle = () => {\n  const appTitle = useDefaultTitle();\n  const { defaultTitle } = useListContext();\n\n  return (\n    <>\n      <title>{`${appTitle} - ${defaultTitle}`}</title>\n      <Title defaultTitle={defaultTitle} />\n    </>\n  );\n};\n\nconst QuickFilter = ({ label }: InputProps) => {\n  const translate = useTranslate();\n  return <Chip sx={{ mb: 1 }} label={translate(label as string)} />;\n};\n\nconst ProductFilters = () => {\n  const translate = useTranslate();\n  const dataProvider = useDataProvider();\n  const notify = useNotify();\n  const { setFilters, filterValues } = useListContext();\n  const [categories, setCategories] = React.useState<any[]>([]);\n  const [loadingCategories, setLoadingCategories] = React.useState(true);\n  const [searchValue, setSearchValue] = React.useState('');\n\n  React.useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const { data } = await dataProvider.getList('categories', {\n          pagination: { page: 1, perPage: 100 },\n          sort: { field: 'name', order: 'ASC' },\n          filter: {},\n        });\n        setCategories(data);\n      } catch (error) {\n        notify('Error loading categories', { type: 'warning' });\n      } finally {\n        setLoadingCategories(false);\n      }\n    };\n\n    fetchCategories();\n  }, [dataProvider, notify]);\n\n  const handleCategoryToggle = (categoryId: string) => {\n    const currentCategoryId = filterValues.category_id;\n    const newCategoryId =\n      currentCategoryId === categoryId ? undefined : categoryId;\n    setFilters({ ...filterValues, category_id: newCategoryId }, null);\n  };\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setSearchValue(value);\n    setFilters({ ...filterValues, q: value }, null);\n  };\n\n  const handleSalesFilter = (filterType: string, value: boolean) => {\n    setFilters({ ...filterValues, [filterType]: value }, null);\n  };\n\n  const handleStockFilter = (filterType: string, value: boolean) => {\n    setFilters({ ...filterValues, [filterType]: value }, null);\n  };\n\n  return (\n    <Card\n      sx={{\n        order: -1,\n        mr: { xs: 0, md: 2 },\n        mb: { xs: 2, md: 0 },\n        width: { xs: '100%', md: '16em' },\n      }}\n    >\n      <CardContent>\n        <Typography variant='h6' gutterBottom>\n          Filters\n        </Typography>\n\n        <MuiTextField\n          fullWidth\n          placeholder='Search products...'\n          value={searchValue}\n          onChange={handleSearchChange}\n          size='small'\n          sx={{ mb: 3 }}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position='start'>\n                <SearchIcon sx={{ color: 'text.secondary' }} />\n              </InputAdornment>\n            ),\n          }}\n        />\n\n        {/* <Typography\n          variant='subtitle2'\n          sx={{ mt: 2, mb: 1, display: 'flex', alignItems: 'center' }}\n        >\n          💰 SALES\n        </Typography>\n        <MuiList dense sx={{ py: 0 }}>\n          <ListItem disablePadding>\n            <ListItemButton\n              onClick={() =>\n                handleSalesFilter('sales_best', !filterValues.sales_best)\n              }\n              sx={{ py: 0.5 }}\n            >\n              <ListItemIcon sx={{ minWidth: 32 }}>\n                {filterValues.sales_best && (\n                  <CheckIcon fontSize='small' color='primary' />\n                )}\n              </ListItemIcon>\n              <ListItemText\n                primary='Best sellers'\n                primaryTypographyProps={{ variant: 'body2' }}\n              />\n            </ListItemButton>\n          </ListItem>\n          <ListItem disablePadding>\n            <ListItemButton\n              onClick={() =>\n                handleSalesFilter('sales_average', !filterValues.sales_average)\n              }\n              sx={{ py: 0.5 }}\n            >\n              <ListItemIcon sx={{ minWidth: 32 }}>\n                {filterValues.sales_average && (\n                  <CheckIcon fontSize='small' color='primary' />\n                )}\n              </ListItemIcon>\n              <ListItemText\n                primary='Average'\n                primaryTypographyProps={{ variant: 'body2' }}\n              />\n            </ListItemButton>\n          </ListItem>\n          <ListItem disablePadding>\n            <ListItemButton\n              onClick={() =>\n                handleSalesFilter('sales_low', !filterValues.sales_low)\n              }\n              sx={{ py: 0.5 }}\n            >\n              <ListItemIcon sx={{ minWidth: 32 }}>\n                {filterValues.sales_low && (\n                  <CheckIcon fontSize='small' color='primary' />\n                )}\n              </ListItemIcon>\n              <ListItemText\n                primary='Low'\n                primaryTypographyProps={{ variant: 'body2' }}\n              />\n            </ListItemButton>\n          </ListItem>\n          <ListItem disablePadding>\n            <ListItemButton\n              onClick={() =>\n                handleSalesFilter('sales_never', !filterValues.sales_never)\n              }\n              sx={{ py: 0.5 }}\n            >\n              <ListItemIcon sx={{ minWidth: 32 }}>\n                {filterValues.sales_never && (\n                  <CheckIcon fontSize='small' color='primary' />\n                )}\n              </ListItemIcon>\n              <ListItemText\n                primary='Never sold'\n                primaryTypographyProps={{ variant: 'body2' }}\n              />\n            </ListItemButton>\n          </ListItem>\n        </MuiList>\n\n        <Typography\n          variant='subtitle2'\n          sx={{ mt: 2, mb: 1, display: 'flex', alignItems: 'center' }}\n        >\n          📊 STOCK\n        </Typography>\n        <MuiList dense sx={{ py: 0 }}>\n          <ListItem disablePadding>\n            <ListItemButton\n              onClick={() =>\n                handleStockFilter('stock_out', !filterValues.stock_out)\n              }\n              sx={{ py: 0.5 }}\n            >\n              <ListItemIcon sx={{ minWidth: 32 }}>\n                {filterValues.stock_out && (\n                  <CheckIcon fontSize='small' color='primary' />\n                )}\n              </ListItemIcon>\n              <ListItemText\n                primary='Out of stock'\n                primaryTypographyProps={{ variant: 'body2' }}\n              />\n            </ListItemButton>\n          </ListItem>\n          <ListItem disablePadding>\n            <ListItemButton\n              onClick={() =>\n                handleStockFilter('stock_low', !filterValues.stock_low)\n              }\n              sx={{ py: 0.5 }}\n            >\n              <ListItemIcon sx={{ minWidth: 32 }}>\n                {filterValues.stock_low && (\n                  <CheckIcon fontSize='small' color='primary' />\n                )}\n              </ListItemIcon>\n              <ListItemText\n                primary='1-9 items'\n                primaryTypographyProps={{ variant: 'body2' }}\n              />\n            </ListItemButton>\n          </ListItem>\n          <ListItem disablePadding>\n            <ListItemButton\n              onClick={() =>\n                handleStockFilter('stock_medium', !filterValues.stock_medium)\n              }\n              sx={{ py: 0.5 }}\n            >\n              <ListItemIcon sx={{ minWidth: 32 }}>\n                {filterValues.stock_medium && (\n                  <CheckIcon fontSize='small' color='primary' />\n                )}\n              </ListItemIcon>\n              <ListItemText\n                primary='10-49 items'\n                primaryTypographyProps={{ variant: 'body2' }}\n              />\n            </ListItemButton>\n          </ListItem>\n          <ListItem disablePadding>\n            <ListItemButton\n              onClick={() =>\n                handleStockFilter('stock_high', !filterValues.stock_high)\n              }\n              sx={{ py: 0.5 }}\n            >\n              <ListItemIcon sx={{ minWidth: 32 }}>\n                {filterValues.stock_high && (\n                  <CheckIcon fontSize='small' color='primary' />\n                )}\n              </ListItemIcon>\n              <ListItemText\n                primary='50 items and more'\n                primaryTypographyProps={{ variant: 'body2' }}\n              />\n            </ListItemButton>\n          </ListItem>\n        </MuiList> */}\n\n        <Typography\n          variant='subtitle2'\n          sx={{ mt: 2, mb: 1, display: 'flex', alignItems: 'center' }}\n        >\n          🏷️ CATEGORIES\n        </Typography>\n        {loadingCategories ? (\n          <Typography variant='body2' color='textSecondary'>\n            Loading categories...\n          </Typography>\n        ) : (\n          <MuiList dense sx={{ py: 0 }}>\n            {categories.map((category) => (\n              <ListItem key={category.id} disablePadding>\n                <ListItemButton\n                  onClick={() => handleCategoryToggle(category.id)}\n                  sx={{ py: 0.5 }}\n                >\n                  <ListItemIcon sx={{ minWidth: 32 }}>\n                    {filterValues.category_id === category.id && (\n                      <CheckIcon fontSize='small' color='primary' />\n                    )}\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={category.name}\n                    primaryTypographyProps={{ variant: 'body2' }}\n                  />\n                </ListItemButton>\n              </ListItem>\n            ))}\n          </MuiList>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nconst ListActions = () => {\n  const isSmall = useMediaQuery<Theme>((theme) => theme.breakpoints.down('md'));\n\n  return (\n    <TopToolbar>\n      {/* {isSmall && <FilterButton />} */}\n\n      <SortButton fields={['name', 'price', 'created', 'updated']} />\n      <CreateButton />\n      <ExportButton />\n    </TopToolbar>\n  );\n};\n\nexport default ProductList;\n","export const CLOUDINARY_NAME = 'db84fdke0';\nexport const CLOUDINARY_API_KEY = '516693115766466';\nexport const CLOUDINARY_API_SECRET = 'QS3EDexkKKafylQeA3b67boOL1Y';\nexport const CLOUDINARY_UPLOAD_PRESET = 'images';\nexport const CLOUDINARY_URL = `https://api.cloudinary.com/v1_1/${CLOUDINARY_NAME}/upload`;\n","import { CLOUDINARY_UPLOAD_PRESET, CLOUDINARY_URL } from './cloudinaryKey';\n\nexport const uploadImageToCloudinary = async (file: File): Promise<string> => {\n  const formData = new FormData();\n  formData.append('file', file);\n  formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET);\n\n  const response = await fetch(CLOUDINARY_URL, {\n    method: 'POST',\n    body: formData,\n  });\n\n  if (!response.ok) {\n    throw new Error('Failed to upload image to Cloudinary');\n  }\n\n  const data = await response.json();\n  return data.secure_url;\n};\n","import * as React from 'react';\nimport {\n  ImageInput,\n  ImageField,\n  TextInput,\n  useInput,\n  useRecordContext,\n} from 'react-admin';\nimport { Box } from '@mui/material';\nimport { uploadImageToCloudinary } from '../utils/cloudinaryUpload';\n\ninterface ImageUploadFieldProps {\n  source: string;\n  label?: string;\n}\n\nconst ImageUploadField = (props: ImageUploadFieldProps) => {\n  const { source, label } = props;\n  const record = useRecordContext(props);\n  const { field } = useInput({\n    source,\n  });\n\n  const handleImageUpload = async (file: File) => {\n    try {\n      const url = await uploadImageToCloudinary(file);\n      field.onChange(url);\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        gap: 2,\n        mb: 2,\n        width: '100%',\n      }}\n    >\n      <Box sx={{ flex: 2 }}>\n        <TextInput\n          source={source}\n          label={label || 'Image URL'}\n          fullWidth\n          value={field.value || ''}\n          onChange={field.onChange}\n        />\n      </Box>\n      <Box sx={{ flex: 1, minWidth: 180 }}>\n        <ImageInput\n          source={`_image_upload_${source}`}\n          label='Upload Image'\n          onChange={(file) => {\n            if (file) {\n              handleImageUpload(file);\n            }\n          }}\n        >\n          <ImageField source='src' title='title' />\n        </ImageInput>\n      </Box>\n      <Box\n        sx={{\n          width: 100,\n          height: 100,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          border: '1px solid #eee',\n          borderRadius: 1,\n          background: '#fafafa',\n        }}\n      >\n        {field.value && typeof field.value === 'string' && (\n          <img\n            src={field.value}\n            alt='Preview'\n            style={{ maxWidth: '100%', maxHeight: '100%', objectFit: 'contain' }}\n          />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default ImageUploadField;\n","import * as React from 'react';\nimport {\n  ArrayInput,\n  Edit,\n  NumberInput,\n  ReferenceInput,\n  SelectInput,\n  SimpleForm,\n  SimpleFormIterator,\n  TextInput,\n  required,\n  useDefaultTitle,\n  useEditContext,\n} from 'react-admin';\nimport Divider from '@mui/material/Divider';\nimport ImageUploadField from '../components/ImageUploadField';\nimport { uploadImageToCloudinary } from '../utils/cloudinaryUpload';\n\nconst RichTextInput = React.lazy(() =>\n  import('ra-input-rich-text').then((module) => ({\n    default: module.RichTextInput,\n  }))\n);\n\nconst ProductTitle = () => {\n  const appTitle = useDefaultTitle();\n  const { defaultTitle } = useEditContext();\n  return (\n    <>\n      <title>{`${appTitle} - ${defaultTitle}`}</title>\n      <span>{defaultTitle}</span>\n    </>\n  );\n};\n\nconst ProductEdit = () => (\n  <Edit title={<ProductTitle />}>\n    <SimpleForm sx={{ maxWidth: '40em' }}>\n      <TextInput source='name' validate={required()} fullWidth />\n\n      <TextInput source='name_la' label='Name (Lao)' fullWidth />\n\n      <Divider sx={{ my: 0.2 }} />\n\n      <NumberInput\n        source='price'\n        validate={required()}\n        min={0}\n        step={0.01}\n        fullWidth\n      />\n\n      <Divider sx={{ my: 0.2 }} />\n\n      <ReferenceInput source='category_id' reference='categories'>\n        <SelectInput source='name' fullWidth validate={required()} />\n      </ReferenceInput>\n\n      <Divider sx={{ my: 0.2 }} />\n\n      <ArrayInput source='image_url' label='Image URLs'>\n        <SimpleFormIterator inline>\n          <ImageUploadField source='' />\n        </SimpleFormIterator>\n      </ArrayInput>\n\n      <Divider sx={{ my: 0.2 }} />\n\n      <div style={{ alignItems: 'center', gap: 8 }}>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            gap: 8,\n          }}\n        >\n          <button\n            type='button'\n            onClick={async (e) => {\n              e.preventDefault();\n              const input = document.createElement('input');\n              input.type = 'file';\n              input.accept = 'image/*';\n              input.onchange = async () => {\n                if (input.files && input.files[0]) {\n                  try {\n                    const url = await uploadImageToCloudinary(input.files[0]);\n                    await navigator.clipboard.writeText(url);\n                    alert('Image link copied to clipboard!');\n                    const rte = document.querySelector(\n                      '[contenteditable=\"true\"][role=\"textbox\"]'\n                    );\n                    if (rte) {\n                      const img = document.createElement('img');\n                      img.src = url;\n                      img.alt = 'uploaded image';\n                      const sel = window.getSelection();\n                      if (sel && sel.rangeCount > 0) {\n                        const range = sel.getRangeAt(0);\n                        range.collapse(false);\n                        range.insertNode(img);\n                        range.setStartAfter(img);\n                        range.setEndAfter(img);\n                        sel.removeAllRanges();\n                        sel.addRange(range);\n                      } else {\n                        rte.appendChild(img);\n                      }\n                      rte.dispatchEvent(new Event('input', { bubbles: true }));\n                    }\n                  } catch (err) {\n                    alert('Failed to upload image');\n                  }\n                }\n              };\n              input.click();\n            }}\n            style={{\n              marginRight: 8,\n              cursor: 'pointer',\n              padding: '8px 16px',\n              backgroundColor: '#3f51b5',\n              color: '#fff',\n              border: 'none',\n              borderRadius: '4px',\n            }}\n          >\n            Upload Image\n          </button>\n        </div>\n        <React.Suspense fallback={<div>Loading...</div>}>\n          <RichTextInput source='description' validate={required()} fullWidth />\n        </React.Suspense>\n      </div>\n\n      <Divider sx={{ my: 0.2 }} />\n\n      <React.Suspense fallback={<div>Loading...</div>}>\n        <RichTextInput\n          source='description_la'\n          label='Description (Lao)'\n          fullWidth\n        />\n      </React.Suspense>\n\n      <Divider sx={{ my: 0.2 }} />\n\n      <React.Suspense fallback={<div>Loading...</div>}>\n        <RichTextInput source='details' fullWidth />\n      </React.Suspense>\n    </SimpleForm>\n  </Edit>\n);\n\nexport default ProductEdit;\n","import * as React from 'react';\nimport {\n  Create,\n  SimpleForm,\n  TextInput,\n  NumberInput,\n  ReferenceInput,\n  SelectInput,\n  required,\n  useCreateContext,\n  useDefaultTitle,\n  ArrayInput,\n  SimpleFormIterator,\n} from 'react-admin';\nimport ImageUploadField from '../components/ImageUploadField';\nimport { Divider } from '@mui/material';\nimport { uploadImageToCloudinary } from '../utils/cloudinaryUpload';\n\nconst RichTextInput = React.lazy(() =>\n  import('ra-input-rich-text').then((module) => ({\n    default: module.RichTextInput,\n  }))\n);\n\nconst ProductTitle = () => {\n  const appTitle = useDefaultTitle();\n  const { defaultTitle } = useCreateContext();\n\n  return (\n    <>\n      <title>{`${appTitle} - ${defaultTitle}`}</title>\n      <span>{defaultTitle}</span>\n    </>\n  );\n};\n\nconst ProductCreate = () => (\n  <Create title={<ProductTitle />}>\n    <SimpleForm sx={{ maxWidth: '40em' }}>\n      <TextInput autoFocus source='name' validate={required()} fullWidth />\n      <TextInput source='name_la' label='Name (Lao)' fullWidth />\n\n      <Divider sx={{ my: 0.2 }} />\n\n      <NumberInput\n        source='price'\n        validate={required()}\n        min={0}\n        step={0.01}\n        fullWidth\n      />\n\n      <Divider sx={{ my: 0.2 }} />\n\n      <ReferenceInput source='category_id' reference='categories'>\n        <SelectInput source='name' fullWidth validate={required()} />\n      </ReferenceInput>\n\n      <Divider sx={{ my: 0.2 }} />\n\n      <ArrayInput source='image_url' label='Image URLs'>\n        <SimpleFormIterator inline>\n          <ImageUploadField source='' />\n        </SimpleFormIterator>\n      </ArrayInput>\n\n      <Divider sx={{ my: 0.2 }} />\n\n      <div style={{ alignItems: 'center', gap: 8 }}>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            gap: 8,\n          }}\n        >\n          <button\n            type='button'\n            onClick={async (e) => {\n              e.preventDefault();\n              const input = document.createElement('input');\n              input.type = 'file';\n              input.accept = 'image/*';\n              input.onchange = async () => {\n                if (input.files && input.files[0]) {\n                  try {\n                    const url = await uploadImageToCloudinary(input.files[0]);\n                    await navigator.clipboard.writeText(url);\n                    alert('Image link copied to clipboard!');\n                    const rte = document.querySelector(\n                      '[contenteditable=\"true\"][role=\"textbox\"]'\n                    );\n                    if (rte) {\n                      const img = document.createElement('img');\n                      img.src = url;\n                      img.alt = 'uploaded image';\n                      const sel = window.getSelection();\n                      if (sel && sel.rangeCount > 0) {\n                        const range = sel.getRangeAt(0);\n                        range.collapse(false);\n                        range.insertNode(img);\n                        range.setStartAfter(img);\n                        range.setEndAfter(img);\n                        sel.removeAllRanges();\n                        sel.addRange(range);\n                      } else {\n                        rte.appendChild(img);\n                      }\n                      rte.dispatchEvent(new Event('input', { bubbles: true }));\n                    }\n                  } catch (err) {\n                    alert('Failed to upload image');\n                  }\n                }\n              };\n              input.click();\n            }}\n            style={{\n              marginRight: 8,\n              cursor: 'pointer',\n              padding: '8px 16px',\n              backgroundColor: '#3f51b5',\n              color: '#fff',\n              border: 'none',\n              borderRadius: '4px',\n            }}\n          >\n            Upload Image\n          </button>\n        </div>\n        <React.Suspense fallback={<div>Loading...</div>}>\n          <RichTextInput source='description' validate={required()} fullWidth />\n        </React.Suspense>\n      </div>\n\n      <Divider sx={{ my: 0.2 }} />\n\n      <React.Suspense fallback={<div>Loading...</div>}>\n        <RichTextInput\n          source='description_la'\n          label='Description (Lao)'\n          fullWidth\n        />\n      </React.Suspense>\n\n      <Divider sx={{ my: 0.2 }} />\n\n      <React.Suspense fallback={<div>Loading...</div>}>\n        <RichTextInput source='details' fullWidth />\n      </React.Suspense>\n    </SimpleForm>\n  </Create>\n);\n\nexport default ProductCreate;\n","import {\n  AttachMoney,\n  CalendarToday,\n  Category,\n  Inventory,\n} from '@mui/icons-material';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardMedia,\n  Chip,\n  Divider,\n  Grid,\n  ImageList,\n  ImageListItem,\n  Paper,\n  Typography,\n} from '@mui/material';\nimport {\n  DateField,\n  NumberField,\n  ReferenceField,\n  RichTextField,\n  Show,\n  TextField,\n  useDefaultTitle,\n  useRecordContext,\n  useShowContext,\n} from 'react-admin';\n\nconst ProductTitle = () => {\n  const appTitle = useDefaultTitle();\n  const { defaultTitle } = useShowContext();\n  return (\n    <>\n      <title>{`${appTitle} - ${defaultTitle}`}</title>\n      <span>{defaultTitle}</span>\n    </>\n  );\n};\n\nconst ProductImage = () => {\n  const record = useRecordContext();\n\n  if (!record) return null;\n\n  const imageUrls = Array.isArray(record.image_url)\n    ? record.image_url\n    : [record.image_url];\n  const validImageUrls = imageUrls.filter((url) => url && url.trim() !== '');\n\n  if (validImageUrls.length === 0) {\n    return (\n      <CardMedia\n        component='img'\n        image='/placeholder-product.svg'\n        alt={record.name || 'Product image'}\n        sx={{\n          width: '100%',\n          height: 'auto',\n          borderRadius: 2,\n          maxHeight: 400,\n          objectFit: 'cover',\n          bgcolor: 'grey.100',\n        }}\n      />\n    );\n  }\n\n  if (validImageUrls.length === 1) {\n    return (\n      <CardMedia\n        component='img'\n        image={validImageUrls[0]}\n        alt={record.name || 'Product image'}\n        sx={{\n          width: '100%',\n          height: 'auto',\n          borderRadius: 2,\n          maxHeight: 400,\n          objectFit: 'cover',\n          bgcolor: 'grey.100',\n        }}\n        onError={(e: any) => {\n          e.target.src = '/placeholder-product.svg';\n        }}\n      />\n    );\n  }\n\n  return (\n    <ImageList variant='masonry' cols={2} gap={8}>\n      {validImageUrls.map((imageUrl, index) => (\n        <ImageListItem key={index}>\n          <CardMedia\n            component='img'\n            image={imageUrl}\n            alt={`${record.name || 'Product'} image ${index + 1}`}\n            sx={{\n              width: '100%',\n              height: 'auto',\n              borderRadius: 2,\n              objectFit: 'cover',\n              bgcolor: 'grey.100',\n            }}\n            onError={(e: any) => {\n              e.target.src = '/placeholder-product.svg';\n            }}\n          />\n        </ImageListItem>\n      ))}\n    </ImageList>\n  );\n};\n\nconst ProductShow = () => (\n  <Show title={<ProductTitle />}>\n    <Box sx={{ p: 2 }}>\n      <Grid container spacing={3}>\n        <Grid size={{ xs: 12, md: 5 }}>\n          <Card sx={{ height: 'fit-content' }}>\n            <CardContent>\n              <ProductImage />\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid size={{ xs: 12, md: 7 }}>\n          <Card>\n            <CardContent>\n              <Box sx={{ mb: 3 }}>\n                <TextField\n                  source='name'\n                  sx={{\n                    '& .RaTextField-text': {\n                      fontSize: '2rem',\n                      fontWeight: 600,\n                      color: 'primary.main',\n                      mb: 1,\n                    },\n                  }}\n                />\n                <TextField\n                  source='name_la'\n                  label=''\n                  sx={{\n                    '& .RaTextField-text': {\n                      fontSize: '1.2rem',\n                      color: 'text.secondary',\n                      fontStyle: 'italic',\n                    },\n                  }}\n                />\n              </Box>\n\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <AttachMoney color='success' sx={{ mr: 1 }} />\n                <NumberField\n                  source='price'\n                  sx={{\n                    '& .RaNumberField-text': {\n                      fontSize: '1.5rem',\n                      fontWeight: 600,\n                      color: 'success.main',\n                    },\n                  }}\n                />\n              </Box>\n\n              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                <Category color='primary' sx={{ mr: 1 }} />\n                <ReferenceField source='category_id' reference='categories'>\n                  <Chip\n                    label={<TextField source='name' />}\n                    color='primary'\n                    variant='outlined'\n                  />\n                </ReferenceField>\n              </Box>\n\n              <Divider sx={{ my: 2 }} />\n\n              <Box sx={{ mb: 2 }}>\n                <Typography variant='h6' sx={{ mb: 1, color: 'text.primary' }}>\n                  Description\n                </Typography>\n                <RichTextField\n                  source='description'\n                  sx={{\n                    '& .RaTextField-text': {\n                      lineHeight: 1.6,\n                      color: 'text.secondary',\n                    },\n                  }}\n                />\n                <Box sx={{ mt: 1 }}>\n                  <RichTextField\n                    source='description_la'\n                    label=''\n                    sx={{\n                      '& .RaTextField-text': {\n                        lineHeight: 1.6,\n                        color: 'text.secondary',\n                        fontStyle: 'italic',\n                      },\n                    }}\n                  />\n                </Box>\n              </Box>\n\n              {/* Additional Details Section */}\n              <Paper sx={{ p: 2, backgroundColor: 'grey.50' }}>\n                <Typography variant='h6' sx={{ mb: 2, color: 'text.primary' }}>\n                  Product Details\n                </Typography>\n                <RichTextField\n                  source='details'\n                  sx={{\n                    '& .RaRichTextField-root': {\n                      lineHeight: 1.6,\n                    },\n                  }}\n                />\n              </Paper>\n\n              <Divider sx={{ my: 2 }} />\n\n              <Grid container spacing={2}>\n                <Grid size={{ xs: 6 }}>\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                    <CalendarToday\n                      fontSize='small'\n                      sx={{ mr: 1, color: 'text.secondary' }}\n                    />\n                    <Box>\n                      <Typography\n                        variant='caption'\n                        display='block'\n                        color='text.secondary'\n                      >\n                        Created\n                      </Typography>\n                      <DateField source='created' />\n                    </Box>\n                  </Box>\n                </Grid>\n                <Grid size={{ xs: 6 }}>\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                    <Inventory\n                      fontSize='small'\n                      sx={{ mr: 1, color: 'text.secondary' }}\n                    />\n                    <Box>\n                      <Typography\n                        variant='caption'\n                        display='block'\n                        color='text.secondary'\n                      >\n                        Updated\n                      </Typography>\n                      <DateField source='updated' />\n                    </Box>\n                  </Box>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Box>\n  </Show>\n);\n\nexport default ProductShow;\n","import ProductIcon from '@mui/icons-material/Collections';\nimport ProductList from './ProductList';\nimport ProductEdit from './ProductEdit';\nimport ProductCreate from './ProductCreate';\nimport ProductShow from './ProductShow';\n\nexport default {\n    list: ProductList,\n    create: ProductCreate,\n    edit: ProductEdit,\n    show: ProductShow,\n    icon: ProductIcon,\n    recordRepresentation: (record: any) => record.name || `Product ${record.id}`,\n};\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport { Link } from 'react-router-dom';\nimport { useTranslate, useRecordContext } from 'react-admin';\nimport queryString from 'query-string';\n\nimport products from '../products';\nimport { Category } from '../types';\n\nconst LinkToRelatedProducts = () => {\n    const record = useRecordContext<Category>();\n    const translate = useTranslate();\n    if (!record) return null;\n    return (\n        <Button\n            size=\"small\"\n            color=\"primary\"\n            component={Link}\n            to={{\n                pathname: '/products',\n                search: queryString.stringify({\n                    filter: JSON.stringify({ category_id: record.id }),\n                }),\n            }}\n            sx={{ display: 'inline-flex', alignItems: 'center' }}\n        >\n            <products.icon sx={{ paddingRight: '0.5em' }} />\n            {translate('resources.categories.fields.products')}\n        </Button>\n    );\n};\n\nexport default LinkToRelatedProducts;\n","import {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Grid,\n  Typography,\n} from '@mui/material';\nimport { humanize } from 'inflection';\nimport {\n  CreateButton,\n  Edit,\n  EditButton,\n  List,\n  RecordContextProvider,\n  SimpleForm,\n  TextInput,\n  TopToolbar,\n  useDefaultTitle,\n  useListContext,\n  useRedirect,\n  useRefresh, // Import TopToolbar for common action bar layout\n} from 'react-admin';\n\nimport { useImageStore } from '../store/imageStore';\nimport LinkToRelatedProducts from './LinkToRelatedProducts';\n\nexport interface Category {\n  collectionId: string;\n  collectionName: string;\n  id: string;\n  name: string;\n  name_la: string;\n  image_url: string;\n  created: string;\n  updated: string;\n}\n\nconst CategoriesTitle = () => {\n  const title = useDefaultTitle();\n  const { defaultTitle } = useListContext();\n  return (\n    <>\n      <title>{`${title} - ${defaultTitle}`}</title>\n      <span>{defaultTitle}</span>\n    </>\n  );\n};\n\n// Custom actions component for flexible alignment\nconst CategoryListActions = () => (\n  <TopToolbar>\n    <CreateButton />\n  </TopToolbar>\n);\n\nconst CategoryList = () => (\n  <List\n    sort={{ field: 'name', order: 'ASC' }}\n    perPage={20}\n    pagination={false}\n    component='div'\n    actions={<CategoryListActions />} // Use the custom actions component\n    title={<CategoriesTitle />}\n  >\n    <CategoryGrid />\n  </List>\n);\n\nconst CategoryGrid = () => {\n  const { data, error, isPending } = useListContext<Category>();\n  const redirect = useRedirect();\n  const refresh = useRefresh();\n\n  if (isPending) {\n    return null;\n  }\n  if (error) {\n    return null;\n  }\n  return (\n    <Grid container spacing={2} sx={{ mt: 0 }}>\n      {data.map((record) => (\n        <RecordContextProvider key={record.id} value={record}>\n          <Grid\n            key={record.id}\n            size={{\n              xs: 12,\n              sm: 6,\n              md: 4,\n              lg: 3,\n              xl: 2,\n            }}\n          >\n            <Card>\n              <CardActionArea\n                onClick={() => {\n                  redirect(`/categories/${record.id}`);\n                  // Clear the image state after successful upload\n                  useImageStore.getState().setSelectImage(null);\n                  refresh();\n                }}\n              >\n                <CardMedia\n                  image={`${record?.image_url}`}\n                  sx={{ height: 140 }}\n                />\n                <CardContent sx={{ paddingBottom: '0.5em' }}>\n                  <Typography variant='h5' component='h2' align='center'>\n                    {humanize(record.name)}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n              <CardActions\n                sx={{\n                  '.MuiCardActions-spacing': {\n                    display: 'flex',\n                    justifyContent: 'space-around',\n                  },\n                }}\n              >\n                <LinkToRelatedProducts />\n                <EditButton />\n              </CardActions>\n            </Card>\n          </Grid>\n        </RecordContextProvider>\n      ))}\n    </Grid>\n  );\n};\n\nexport const CategoryEdit = () => (\n  <Edit>\n    <SimpleForm>\n      <TextInput source='name' fullWidth />\n      <TextInput source='image_url' fullWidth />\n    </SimpleForm>\n  </Edit>\n);\n\nexport default CategoryList;\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useRecordContext } from 'react-admin';\nimport { Product } from '../types';\n\nconst Img = styled('img')({\n    width: 25,\n    maxWidth: 25,\n    maxHeight: 25,\n    verticalAlign: 'middle',\n});\n\nconst ThumbnailField = (_: { source: string; label?: string }) => {\n    const record = useRecordContext<Product>();\n    if (!record) return null;\n    return <Img src={record.thumbnail} alt=\"\" />;\n};\n\nexport default ThumbnailField;\n","import {\n  DataTable,\n  Edit,\n  EditButton,\n  ImageField,\n  ImageInput,\n  Labeled,\n  ReferenceManyField,\n  SimpleForm,\n  TextInput,\n  useDefaultTitle,\n  useEditContext,\n  useRefresh,\n} from 'react-admin';\n\nimport { Avatar, Box, Typography } from '@mui/material';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  formatCurrency,\n  useCurrencyContext,\n} from '../components/CurrencySelector/CurrencyProvider';\nimport ThumbnailField from '../products/ThumbnailField';\nimport { useImageStore } from '../store/imageStore'; // Import the store\nimport { type Product } from '../types';\n\nexport interface ProductCategory {\n  collectionId: string;\n  collectionName: string;\n  id: string;\n  name: string;\n  name_la: string;\n  image_url: string;\n  created: string;\n  updated: string;\n}\n\nconst Column = DataTable.Col<Product>;\nconst ColumnNumber = DataTable.NumberCol<Product>;\n\nconst ImageUrlField = (record: ProductCategory | any) => {\n  if (!record?.image_url) return null;\n\n  return (\n    <Avatar\n      src={record.image_url}\n      alt={record.name}\n      sx={{ width: 32, height: 32 }}\n    />\n  );\n};\n\nconst CategoryEdit = () => {\n  const { displayCurrency, convert } = useCurrencyContext();\n  const { selectImage, setSelectImage } = useImageStore(); // Use the store\n  const refresh = useRefresh();\n\n  // Clear selectImage when route changes\n  const location = useLocation();\n  useEffect(() => {\n    setSelectImage(null);\n    refresh();\n  }, [location.pathname, setSelectImage]);\n\n  return (\n    <Edit title={<CategoryTitle />}>\n      <SimpleForm>\n        <Box\n          display='flex'\n          flexDirection='column'\n          gap={2}\n          width='100%'\n          maxWidth={600}\n        >\n          <Typography variant='h6' gutterBottom>\n            Edit Category Information\n          </Typography>\n\n          <TextInput source='name' label='Category Name' />\n          <TextInput source='name_la' label='Lao Name' />\n          <ImageInput\n            source='image'\n            label='Category Image'\n            onChange={(e) => {\n              setSelectImage(e);\n            }}\n          >\n            <ImageField source='src' title='title' />\n          </ImageInput>\n\n          <ImageField\n            source='image_url'\n            label='Current Image'\n            sx={{\n              display: selectImage !== null ? 'none' : 'block',\n            }}\n          />\n\n          <Labeled label='resources.categories.fields.products' fullWidth>\n            <ReferenceManyField\n              reference='products'\n              target='category_id'\n              perPage={20}\n            >\n              <DataTable\n                sx={{ maxWidth: 800, marginLeft: 0, marginRight: 'auto' }}\n              >\n                <Column\n                  sx={{ width: 25, padding: 0 }}\n                  field={ThumbnailField}\n                  label={false}\n                />\n                <Column source='image_url' render={ImageUrlField} />\n                <ColumnNumber\n                  source='name'\n                  options={{ minimumFractionDigits: 2 }}\n                />\n                <Column\n                  label='Price'\n                  render={(record: Product) =>\n                    `$${formatCurrency(\n                      convert(record.price || 0)\n                    )} ${displayCurrency}`\n                  }\n                />\n\n                <Column align='right'>\n                  <EditButton />\n                </Column>\n              </DataTable>\n            </ReferenceManyField>\n          </Labeled>\n        </Box>\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nconst CategoryTitle = () => {\n  const appTitle = useDefaultTitle();\n  const { defaultTitle } = useEditContext();\n  return (\n    <>\n      <title>{`${appTitle} - ${defaultTitle}`}</title>\n      <span>{defaultTitle}</span>\n    </>\n  );\n};\n\nexport default CategoryEdit;\n","import * as React from 'react';\nimport {\n  Create,\n  SimpleForm,\n  TextInput,\n  required,\n  Title,\n  ImageInput,\n  ImageField,\n} from 'react-admin';\nimport { Box, Typography } from '@mui/material';\n\nconst CategoryCreate = () => (\n  <Create title={<Title title='Create New Category' />}>\n    <SimpleForm>\n      <Box\n        display='flex'\n        flexDirection='column'\n        gap={2}\n        width='100%'\n        maxWidth={600}\n      >\n        <Typography variant='h6' gutterBottom>\n          New Category Information\n        </Typography>\n\n        <TextInput\n          source='name'\n          label='Category Name'\n          validate={[required()]}\n          fullWidth\n        />\n\n        <TextInput\n          source='name_la'\n          label='Lao Name'\n          validate={[required()]}\n          fullWidth\n        />\n\n        <ImageInput source='image' label='Category Image'>\n          <ImageField source='src' title='title' />\n        </ImageInput>\n      </Box>\n    </SimpleForm>\n  </Create>\n);\n\nexport default CategoryCreate;\n","import CategoryIcon from '@mui/icons-material/Bookmark';\n\nimport CategoryList from './CategoryList';\nimport CategoryEdit from './CategoryEdit';\nimport CategoryCreate from './CategoryCreate';\n\nexport default {\n  list: CategoryList,\n  edit: CategoryEdit,\n  create: CategoryCreate,\n  icon: CategoryIcon,\n};\n","import * as React from 'react';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Chip,\n  Typography,\n  Box,\n} from '@mui/material';\nimport { format, parseISO } from 'date-fns';\nimport { useCurrencyContext } from '../components/CurrencySelector/CurrencyProvider';\nimport { formatCurrency } from '../utils/format';\n\ninterface OrderItem {\n  id: string;\n  referenceID: string;\n  customerID: string;\n  customerName: string;\n  phoneNumber: string;\n  address: string;\n  status: string;\n  quantity: number;\n  amountLAK: string;\n  amountTHB: string;\n  amountUSD: string;\n  created: string;\n  updated: string;\n}\n\ninterface OrderListData {\n  items: OrderItem[];\n  page: number;\n  perPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\ninterface Props {\n  data: OrderListData;\n}\n\nconst OrderPendingList: React.FC<Props> = ({ data }) => {\n  if (!data || !data.items || data.items.length === 0) {\n    return (\n      <Card elevation={3} sx={{ borderRadius: 3, p: 2 }}>\n        <CardHeader\n          title='Pending Orders'\n          titleTypographyProps={{ fontWeight: 'bold', fontSize: 18 }}\n        />\n        <CardContent>\n          <Typography variant='body2' color='text.secondary'>\n            No pending orders\n          </Typography>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const formatDate = (dateString: string) => {\n    try {\n      return format(parseISO(dateString), 'MMM dd, yyyy HH:mm');\n    } catch {\n      return dateString;\n    }\n  };\n\n  const { currency } = useCurrencyContext();\n\n  return (\n    <Card sx={{ borderRadius: '10px', p: 2 }}>\n      <CardHeader\n        sx={{ mt: -1 }}\n        title={`Pending Orders (${data.totalItems})`}\n        subheader={`Showing ${data.items.length} of ${data.totalItems} orders`}\n        titleTypographyProps={{ fontWeight: 'bold', fontSize: 18 }}\n        subheaderTypographyProps={{ color: 'text.secondary' }}\n      />\n      <CardContent sx={{ padding: 0 }}>\n        <Box sx={{ overflowX: 'auto', maxWidth: 630, mx: 'auto' }}>\n          <TableContainer>\n            <Table size='small' sx={{ minWidth: '800px' }}>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Reference ID</TableCell>\n                  <TableCell>Customer</TableCell>\n                  <TableCell>Quantity</TableCell>\n                  <TableCell>Amount</TableCell>\n                  <TableCell>Status</TableCell>\n                  <TableCell>Created</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {data.items.map((order, index) => (\n                  <TableRow\n                    key={order.id}\n                    hover\n                    sx={{\n                      backgroundColor: index % 2 === 0 ? '#fafafa' : 'inherit',\n                    }}\n                  >\n                    <TableCell>\n                      <Box>\n                        <Typography variant='body2' fontWeight='medium'>\n                          {order.referenceID}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      <Box display='flex' flexDirection='column'>\n                        <Typography variant='body2' fontWeight='medium'>\n                          {order.customerName}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      <Typography variant='body2'>{order.quantity}</Typography>\n                    </TableCell>\n                    <TableCell>\n                      <Box>\n                        <Typography variant='body2' fontWeight='medium'>\n                          {currency === 'USD' &&\n                            order?.amountUSD &&\n                            `${formatCurrency(Number(order?.amountUSD))} $`}\n                          {currency === 'THB' &&\n                            order?.amountTHB &&\n                            `${formatCurrency(Number(order?.amountTHB))} ฿`}\n                          {currency === 'LAK' &&\n                            order?.amountLAK &&\n                            `${formatCurrency(Number(order?.amountLAK))} ₭`}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      <Chip\n                        label={order.status}\n                        color={\n                          order.status === 'pending'\n                            ? 'warning'\n                            : order.status === 'completed'\n                            ? 'success'\n                            : 'default'\n                        }\n                        size='small'\n                        variant='filled'\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Typography variant='caption' color='text.secondary'>\n                        {formatDate(order.created)}\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default OrderPendingList;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  FormControlLabel,\n  Checkbox,\n  TextField,\n  IconButton,\n  Collapse,\n  Typography,\n} from '@mui/material';\nimport { FilterList, Close } from '@mui/icons-material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport dayjs, { Dayjs } from 'dayjs';\n\ninterface FilterParams {\n  isYear: boolean;\n  startDate?: string;\n  endDate?: string;\n}\n\ninterface Props {\n  onFilterChange: (params: FilterParams) => void;\n}\n\nconst RevenueFilter: React.FC<Props> = ({ onFilterChange }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isMonthChecked, setIsMonthChecked] = useState(false);\n  const [isYearChecked, setIsYearChecked] = useState(false);\n  const [startDate, setStartDate] = useState<Dayjs | null>(dayjs().subtract(30, 'day'));\n  const [endDate, setEndDate] = useState<Dayjs | null>(dayjs());\n\n  const handleMonthCheck = (checked: boolean) => {\n    setIsMonthChecked(checked);\n    if (checked) {\n      setIsYearChecked(false);\n    }\n    onFilterChange({\n      isYear: checked ? false : isYearChecked,\n      ...(checked ? {} : {\n        startDate: startDate?.format('YYYY-MM-DD'),\n        endDate: endDate?.format('YYYY-MM-DD'),\n      })\n    });\n  };\n\n  const handleYearCheck = (checked: boolean) => {\n    setIsYearChecked(checked);\n    if (checked) {\n      setIsMonthChecked(false);\n    }\n    onFilterChange({\n      isYear: checked ? true : false,\n      ...(checked ? {} : {\n        startDate: startDate?.format('YYYY-MM-DD'),\n        endDate: endDate?.format('YYYY-MM-DD'),\n      })\n    });\n  };\n\n  const handleDateChange = () => {\n    if (startDate && endDate) {\n      onFilterChange({\n        isYear: isYearChecked,\n        ...(!isMonthChecked && !isYearChecked ? {\n          startDate: startDate.format('YYYY-MM-DD'),\n          endDate: endDate.format('YYYY-MM-DD'),\n        } : {})\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    handleDateChange();\n  }, [startDate, endDate, isYearChecked, isMonthChecked]);\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <Box sx={{ position: 'relative' }}>\n        <IconButton\n          onClick={() => setIsOpen(!isOpen)}\n          sx={{ \n            color: '#666',\n            border: '1px solid #e0e0e0',\n            borderRadius: 1,\n            p: 1,\n          }}\n        >\n          {isOpen ? <Close /> : <FilterList />}\n        </IconButton>\n\n        <Collapse in={isOpen}>\n          <Box\n            sx={{\n              position: 'absolute',\n              top: '100%',\n              right: 0,\n              mt: 1,\n              p: 2,\n              bgcolor: 'white',\n              border: '1px solid #e0e0e0',\n              borderRadius: 2,\n              boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n              minWidth: 320,\n              zIndex: 1000,\n            }}\n          >\n            <Typography variant=\"subtitle2\" sx={{ mb: 2, fontWeight: 600 }}>\n              Filter Options\n            </Typography>\n\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={isMonthChecked}\n                    onChange={(e) => handleMonthCheck(e.target.checked)}\n                  />\n                }\n                label=\"Month\"\n              />\n              \n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={isYearChecked}\n                    onChange={(e) => handleYearCheck(e.target.checked)}\n                  />\n                }\n                label=\"Year\"\n              />\n\n              <Typography variant=\"subtitle2\" sx={{ mt: 2, mb: 1, fontWeight: 600 }}>\n                Date Range\n              </Typography>\n              \n              <DatePicker\n                label=\"Start Date\"\n                value={startDate}\n                onChange={(newValue) => setStartDate(newValue)}\n                slotProps={{ textField: { size: 'small' } }}\n              />\n              \n              <DatePicker\n                label=\"End Date\"\n                value={endDate}\n                onChange={(newValue) => setEndDate(newValue)}\n                slotProps={{ textField: { size: 'small' } }}\n              />\n            </Box>\n          </Box>\n        </Collapse>\n      </Box>\n    </LocalizationProvider>\n  );\n};\n\nexport default RevenueFilter;","import {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  CircularProgress,\n  Grid,\n  Typography,\n} from '@mui/material';\nimport React from 'react';\nimport {\n  CartesianGrid,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport { useCurrencyContext } from '../components/CurrencySelector/CurrencyProvider';\nimport RevenueFilter from './RevenueFilter';\n\ninterface SellRevenueData {\n  period: string;\n  amountLAK: string;\n  amountUSD: string;\n  amountTHB: string;\n}\n\ninterface FilterParams {\n  isYear: boolean;\n  startDate?: string;\n  endDate?: string;\n  month?: number;\n  year?: number;\n}\n\ninterface Props {\n  data: SellRevenueData[];\n  onFilterChange?: (params: FilterParams) => void;\n  loading?: boolean;\n}\n\nconst SellRevenueChart: React.FC<Props> = ({\n  data,\n  onFilterChange,\n  loading,\n}) => {\n  const { currency, displayCurrency } = useCurrencyContext();\n\n  const chartData = React.useMemo(() => {\n    if (!data || data.length === 0) {\n      return [];\n    }\n\n    return data.map((item) => {\n      const date = new Date(item.period);\n      const day = date.toLocaleDateString('en-US', { day: '2-digit' });\n      const month = date.toLocaleDateString('en-US', { month: 'short' });\n\n      let amount = 0;\n      switch (currency) {\n        case 'USD':\n          amount = Number.parseFloat(item.amountUSD);\n          break;\n        case 'THB':\n          amount = Number.parseFloat(item.amountTHB);\n          break;\n        case 'LAK':\n          amount = Number.parseFloat(item.amountLAK);\n          break;\n        default:\n          break;\n      }\n\n      return {\n        date: `${day} ${month}`,\n        amount,\n      };\n    });\n  }, [data, currency]);\n\n  const totalLAK = React.useMemo(\n    () =>\n      data.reduce((sum, item) => sum + Number.parseFloat(item.amountLAK), 0),\n    [data]\n  );\n  const totalUSD = React.useMemo(\n    () =>\n      data.reduce((sum, item) => sum + Number.parseFloat(item.amountUSD), 0),\n    [data]\n  );\n  const totalTHB = React.useMemo(\n    () =>\n      data.reduce((sum, item) => sum + Number.parseFloat(item.amountTHB), 0),\n    [data]\n  );\n\n  return (\n    <Card className='w-full'>\n      <CardHeader\n        title={\n          <Typography\n            variant='h6'\n            sx={{ fontWeight: 'bold', textAlign: 'start' }}\n          >\n            30 Day Revenue History\n          </Typography>\n        }\n        action={\n          onFilterChange && <RevenueFilter onFilterChange={onFilterChange} />\n        }\n      />\n      <CardContent>\n        <Box sx={{ height: 320, width: '100%', position: 'relative' }}>\n          {loading && (\n            <Box\n              sx={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                backgroundColor: 'rgba(255, 255, 255, 0.8)',\n                zIndex: 1,\n              }}\n            >\n              <CircularProgress />\n            </Box>\n          )}\n          <ResponsiveContainer width='100%' height='100%'>\n            <LineChart\n              data={chartData}\n              margin={{\n                top: 0,\n                right: 0,\n                left: -10,\n                bottom: 10,\n              }}\n            >\n              <CartesianGrid\n                strokeDasharray='3 3'\n                stroke='#f0f0f0'\n                horizontal={true}\n                vertical={false}\n              />\n              <XAxis\n                dataKey='date'\n                axisLine={false}\n                tickLine={false}\n                tick={{ fontSize: 12, fill: '#666' }}\n                interval='preserveStartEnd'\n              />\n              <YAxis\n                axisLine={false}\n                tickLine={false}\n                tick={{ fontSize: 12, fill: '#666' }}\n                tickFormatter={(value) => `${displayCurrency}${value}`}\n              />\n              <Line\n                type='monotone'\n                dataKey='amount'\n                stroke='#D4A574'\n                strokeWidth={3}\n                dot={false}\n                activeDot={{ r: 4, fill: '#D4A574' }}\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </Box>\n\n        {/* Revenue Summary Cards */}\n        <Grid container spacing={2} mt={1}>\n          <Grid\n            size={{\n              xs: 12,\n              md: 4\n            }}>\n            <Box\n              sx={{\n                textAlign: 'center',\n                p: 2,\n                backgroundColor: '#f9fafb',\n                borderRadius: 2,\n              }}\n            >\n              <Typography variant='body2' color='text.secondary' mb={1}>\n                LAK\n              </Typography>\n              <Typography variant='h6' color='#a67c00'>\n                {totalLAK.toLocaleString()} ₭\n              </Typography>\n            </Box>\n          </Grid>\n          <Grid\n            size={{\n              xs: 12,\n              md: 4\n            }}>\n            <Box\n              sx={{\n                textAlign: 'center',\n                p: 2,\n                backgroundColor: '#f9fafb',\n                borderRadius: 2,\n              }}\n            >\n              <Typography variant='body2' color='text.secondary' mb={1}>\n                USD\n              </Typography>\n              <Typography variant='h6' color='#a67c00'>\n                ${totalUSD.toFixed(2)}\n              </Typography>\n            </Box>\n          </Grid>\n          <Grid\n            size={{\n              xs: 12,\n              md: 4\n            }}>\n            <Box\n              sx={{\n                textAlign: 'center',\n                p: 2,\n                backgroundColor: '#f9fafb',\n                borderRadius: 2,\n              }}\n            >\n              <Typography variant='body2' color='text.secondary' mb={1}>\n                THB\n              </Typography>\n              <Typography variant='h6' color='#a67c00'>\n                ฿{totalTHB.toFixed(2)}\n              </Typography>\n            </Box>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SellRevenueChart;\n","import {\n  Cancel as CancelIcon,\n  AttachMoney as MoneyIcon,\n} from '@mui/icons-material';\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport PersonAddRoundedIcon from '@mui/icons-material/PersonAddRounded';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport { Box, Card, CardContent, Grid, Typography } from '@mui/material';\nimport * as React from 'react';\nimport { SellRevenue } from '../model/dashboard';\nimport { useCurrencyContext } from '../components/CurrencySelector/CurrencyProvider';\nimport { formatCurrency } from '../utils/format';\n\ninterface OrderStatusCount {\n  pending: number;\n  accepted: number;\n  delivering: number;\n  completed: number;\n  cancel: number;\n}\n\ninterface SellAmount {\n  amountLAK: string;\n  amountUSD: string;\n  amountTHB: string;\n}\n\ninterface Props {\n  sellRevenue: SellRevenue;\n  orderStatusCount: OrderStatusCount;\n  customerCount: number;\n  sellAmount: SellAmount;\n}\n\nconst ModernStatusCard: React.FC<{\n  title: string;\n  value: number | string;\n  icon: React.ReactNode;\n  color: string;\n  bgColor: string;\n}> = ({ title, value, icon }) => (\n  <Card\n    sx={{\n      height: '100%',\n      borderRadius: 2,\n      backgroundColor: '#fff',\n      border: '1px solid #ece7df',\n      boxShadow: 'none',\n      px: 3,\n      py: 3,\n      position: 'relative',\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center',\n    }}\n  >\n    {/* Background shape */}\n    <Box\n      sx={{\n        position: 'absolute',\n        left: -60,\n        top: 0,\n        bottom: 0,\n        width: 170,\n        backgroundColor: '#fef1dc',\n        borderTopRightRadius: 100,\n        borderBottomRightRadius: 180,\n      }}\n    />\n    {/* Icon */}\n    <Box\n      sx={{\n        position: 'relative',\n        width: 48,\n        height: 48,\n        minWidth: 48,\n        borderRadius: '50%',\n        backgroundColor: '#fef1dc',\n        color: '#D4AF37',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: 22,\n        zIndex: 1,\n        ml: -1,\n        mr: 3,\n        mt: 1,\n      }}\n    >\n      {icon}\n    </Box>\n    {/* Text */}\n    <Box\n      sx={{\n        ml: 5,\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-end',\n      }}\n    >\n      <Typography\n        variant='body2'\n        sx={{ fontSize: '0.9rem', color: '#7b7462', fontWeight: 500 }}\n      >\n        {title}\n      </Typography>\n      <Typography\n        variant='h6'\n        sx={{ fontSize: '1.5rem', color: '#000', fontWeight: 700 }}\n      >\n        {value}\n      </Typography>\n    </Box>\n  </Card>\n);\n\nconst StatusCountCards: React.FC<Props> = ({\n  sellRevenue,\n  orderStatusCount,\n  customerCount,\n}) => {\n  const { currency } = useCurrencyContext();\n\n  return (\n    <Grid container spacing={3}>\n      <Grid\n        size={{\n          xs: 12,\n          sm: 6,\n          lg: 4\n        }}>\n        <ModernStatusCard\n          title='Monthly Revenue'\n          value={\n            currency === 'USD' && sellRevenue?.amountUSD\n              ? `${formatCurrency(Number(sellRevenue?.amountUSD))} $`\n              : currency === 'THB' && sellRevenue?.amountTHB\n              ? `${formatCurrency(Number(sellRevenue?.amountTHB))} ฿`\n              : currency === 'LAK' && sellRevenue?.amountLAK\n              ? `${formatCurrency(Number(sellRevenue?.amountLAK))} ₭`\n              : ''\n          }\n          icon={\n            <Box>\n              <AttachMoneyIcon sx={{ fontSize: 35 }} />\n            </Box>\n          }\n          color='#607d8b'\n          bgColor='#607d8b'\n        />\n      </Grid>\n      <Grid\n        size={{\n          xs: 12,\n          sm: 6,\n          lg: 4\n        }}>\n        <ModernStatusCard\n          title='Total Customers'\n          value={customerCount}\n          icon={\n            <Box>\n              <PersonAddRoundedIcon sx={{ fontSize: 35 }} />\n            </Box>\n          }\n          color='#607d8b'\n          bgColor='#607d8b'\n        />\n      </Grid>\n      <Grid\n        size={{\n          xs: 12,\n          sm: 6,\n          lg: 4\n        }}>\n        <ModernStatusCard\n          title='Pending Orders'\n          value={orderStatusCount.pending}\n          icon={\n            <Box>\n              <ShoppingCartIcon sx={{ fontSize: 35 }} />\n            </Box>\n          }\n          color='#090909'\n          bgColor='#ff9800'\n        />\n      </Grid>\n      <Grid\n        size={{\n          xs: 12,\n          sm: 6,\n          lg: 3\n        }}>\n        <ModernStatusCard\n          title='Accepted Orders'\n          value={orderStatusCount.accepted}\n          icon={\n            <Box sx={{ fontSize: 35 }}>\n              <svg\n                xmlns='http://www.w3.org/2000/svg'\n                width='1em'\n                height='1em'\n                viewBox='0 0 24 24'\n              >\n                <g fill='currentColor'>\n                  <path d='m16.414 10.979l-1.436-1.393l-2.88 2.97l-1.062-1.118l-1.45 1.377l2.498 2.63z' />\n                  <path\n                    fillRule='evenodd'\n                    d='M6 4a2 2 0 0 1 2-2h8.107l2.146 2.342L21 7.638V17a2 2 0 0 1-2 2H8a2 2 0 0 1-2-2zm8.667 0H8v13h11V9h-2.333a2 2 0 0 1-2-2zm2 1.57l.08.088L17.865 7h-1.198z'\n                    clipRule='evenodd'\n                  />\n                  <path d='M5 5.5v1H3v-1zM16.5 22h-9c-1.026 0-2.13-.454-2.975-1.201C3.662 20.035 3 18.9 3 17.5v-11h2v11c0 .731.338 1.347.85 1.8c.53.47 1.176.7 1.65.7h9zm0-2h1v2h-1z' />\n                </g>\n              </svg>\n            </Box>\n          }\n          color='#2196f3'\n          bgColor='#2196f3'\n        />\n      </Grid>\n      <Grid\n        size={{\n          xs: 12,\n          sm: 6,\n          lg: 3\n        }}>\n        <ModernStatusCard\n          title='Orders Delivering'\n          value={orderStatusCount.delivering}\n          icon={\n            <Box sx={{ fontSize: 35 }}>\n              <svg\n                xmlns='http://www.w3.org/2000/svg'\n                width='1em'\n                height='1em'\n                viewBox='0 0 24 24'\n              >\n                <path\n                  fill='currentColor'\n                  d='M21.5 2h-14v7.842a5 5 0 0 1 .94-.092h4.685a4.375 4.375 0 0 1 4.093 2.83l1.964-.452a4.06 4.06 0 0 1 2.318.088zm-9 2h4v4l-2-1.5l-2 1.5z'\n                />\n                <path\n                  fill='currentColor'\n                  d='m19.54 13.585l-3.553.817a2.87 2.87 0 0 0-.83-2.31a2.88 2.88 0 0 0-2.032-.842H8.439a3.25 3.25 0 0 0-2.301.948L4.086 14.25H0v7.25h11.373l6.197-1.55l3.74-1.594l.026-.014a2.555 2.555 0 0 0-1.797-4.757m-11.584-.24a1.3 1.3 0 0 1 .479-.095h4.69a.875.875 0 1 1 0 1.75H10v2h3.614l6.412-1.475l.02-.005a.556.556 0 0 1 .416 1.022L16.93 18.05l-5.803 1.45H5.5v-3.836l2.05-2.05a1.3 1.3 0 0 1 .406-.27M2 16.25h1.5v3.25H2z'\n                />\n              </svg>\n            </Box>\n          }\n          color='#9c27b0'\n          bgColor='#9c27b0'\n        />\n      </Grid>\n      <Grid\n        size={{\n          xs: 12,\n          sm: 6,\n          lg: 3\n        }}>\n        <ModernStatusCard\n          title='Completed Orders'\n          value={orderStatusCount.completed}\n          icon={\n            <Box sx={{ fontSize: 35 }}>\n              <CheckCircleIcon fontSize='inherit' />\n            </Box>\n          }\n          color='#4caf50'\n          bgColor='#4caf50'\n        />\n      </Grid>\n      <Grid\n        size={{\n          xs: 12,\n          sm: 6,\n          lg: 3\n        }}>\n        <ModernStatusCard\n          title='Cancelled Orders'\n          value={orderStatusCount.cancel}\n          icon={\n            <Box sx={{ fontSize: 35 }}>\n              <CancelIcon fontSize='inherit' />\n            </Box>\n          }\n          color='#f44336'\n          bgColor='#f44336'\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default StatusCountCards;\n","import { useState, useEffect } from 'react';\nimport pb from '../api/pocketbase';\n\ninterface SellRevenueData {\n  period: string;\n  amountLAK: string;\n  amountTHB: string;\n  amountUSD: string;\n}\n\ninterface OrderItem {\n  id: string;\n  referenceID: string;\n  customerID: string;\n  customerName: string;\n  phoneNumber: string;\n  address: string;\n  status: string;\n  quantity: number;\n  amountLAK: string;\n  amountTHB: string;\n  amountUSD: string;\n  created: string;\n  updated: string;\n}\n\ninterface OrderStatusCount {\n  pending: number;\n  accepted: number;\n  delivering: number;\n  completed: number;\n  cancel: number;\n}\n\ninterface SellAmount {\n  amountLAK: string;\n  amountUSD: string;\n  amountTHB: string;\n}\n\ninterface StatusCountData {\n  orderStatusCount: OrderStatusCount;\n  customerCount: number;\n  sellAmount: SellAmount;\n}\n\ninterface OrderListData {\n  items: OrderItem[];\n  page: number;\n  perPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\ninterface DashboardData {\n  sellRevenue: SellRevenueData[] | null;\n  statusCount: StatusCountData | null;\n  orderList: OrderListData | null;\n  loading: boolean;\n  error: string | null;\n}\n\ninterface FilterParams {\n  isYear?: boolean;\n  startDate?: string;\n  endDate?: string;\n}\n\n// Hook for static dashboard data (status count and order list)\nexport const useStaticDashboardData = () => {\n  const [data, setData] = useState<Omit<DashboardData, 'sellRevenue'>>({\n    statusCount: null,\n    orderList: null,\n    loading: true,\n    error: null,\n  });\n\n  useEffect(() => {\n    const fetchStaticDashboardData = async () => {\n      try {\n        setData((prev) => ({ ...prev, loading: true, error: null }));\n\n        const [statusCountResponse, orderListResponse] = await Promise.all([\n          pb.send('/dashboard/status-count', {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${pb.authStore.token}`,\n            },\n          }),\n          pb.send('/order-list?page=1&perPage=10&status=pending', {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${pb.authStore.token}`,\n            },\n          }),\n        ]);\n\n        setData({\n          statusCount: statusCountResponse,\n          orderList: orderListResponse,\n          loading: false,\n          error: null,\n        });\n      } catch (error) {\n        console.error('Error fetching static dashboard data:', error);\n        setData((prev) => ({\n          ...prev,\n          loading: false,\n          error:\n            error instanceof Error\n              ? error.message\n              : 'Failed to fetch static dashboard data',\n        }));\n      }\n    };\n\n    fetchStaticDashboardData();\n  }, []);\n\n  return data;\n};\n\n// Hook for revenue data with filter parameters\nexport const useRevenueData = (filterParams?: FilterParams) => {\n  const [data, setData] = useState<{\n    sellRevenue: SellRevenueData[] | null;\n    loading: boolean;\n    error: string | null;\n  }>({\n    sellRevenue: null,\n    loading: true,\n    error: null,\n  });\n\n  useEffect(() => {\n    const fetchRevenueData = async () => {\n      try {\n        setData((prev) => ({ ...prev, loading: true, error: null }));\n\n        // Build query parameters for sell-revenue endpoint\n        const sellRevenueParams = new URLSearchParams();\n        if (filterParams?.isYear !== undefined) {\n          sellRevenueParams.append('isYear', filterParams.isYear.toString());\n        }\n        if (filterParams?.startDate) {\n          sellRevenueParams.append('startDate', filterParams.startDate);\n        }\n        if (filterParams?.endDate) {\n          sellRevenueParams.append('endDate', filterParams.endDate);\n        }\n\n        const sellRevenueUrl = `/dashboard/sell-revenue${\n          sellRevenueParams.toString() ? `?${sellRevenueParams.toString()}` : ''\n        }`;\n\n        const sellRevenueResponse = await pb.send(sellRevenueUrl, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${pb.authStore.token}`,\n          },\n        });\n\n        setData({\n          sellRevenue: sellRevenueResponse.sell,\n          loading: false,\n          error: null,\n        });\n      } catch (error) {\n        console.error('Error fetching revenue data:', error);\n        setData((prev) => ({\n          ...prev,\n          loading: false,\n          error:\n            error instanceof Error\n              ? error.message\n              : 'Failed to fetch revenue data',\n        }));\n      }\n    };\n\n    fetchRevenueData();\n  }, [filterParams?.isYear, filterParams?.startDate, filterParams?.endDate]);\n\n  return data;\n};\n\n// Backward compatibility hook\nexport const useDashboardData = (filterParams?: FilterParams) => {\n  const staticData = useStaticDashboardData();\n  const revenueData = useRevenueData(filterParams);\n\n  return {\n    sellRevenue: revenueData.sellRevenue,\n    statusCount: staticData.statusCount,\n    orderList: staticData.orderList,\n    loading: staticData.loading || revenueData.loading,\n    error: staticData.error || revenueData.error,\n  };\n};\n","import {\n  Alert,\n  Box,\n  CircularProgress,\n  Theme,\n  useMediaQuery,\n} from '@mui/material';\nimport { CSSProperties, useState } from 'react';\n\nimport OrderPendingList from './OrderPendingList';\nimport SellRevenueChart from './SellRevenueChart';\nimport StatusCountCards from './StatusCountCards';\nimport { useRevenueData, useStaticDashboardData } from './useDashboardData';\n\nimport { SellRevenue } from '../model/dashboard';\n\nconst styles = {\n  flex: { display: 'flex' },\n  flexColumn: { display: 'flex', flexDirection: 'column' },\n  leftCol: { flex: 1, marginRight: '0.5em' },\n  rightCol: { flex: 1, marginLeft: '0.5em' },\n  singleCol: { marginTop: '1em', marginBottom: '1em' },\n};\n\nconst VerticalSpacer = () => <span style={{ height: '1em' }} />;\n\ninterface FilterParams {\n  isYear: boolean;\n  startDate?: string;\n  endDate?: string;\n  month?: number;\n  year?: number;\n}\n\nconst Dashboard = () => {\n  const isXSmall = useMediaQuery((theme: Theme) =>\n    theme.breakpoints.down('sm')\n  );\n  const isSmall = useMediaQuery((theme: Theme) => theme.breakpoints.down('lg'));\n\n  const [filterParams, setFilterParams] = useState<FilterParams>({\n    isYear: false,\n    startDate: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)\n      .toISOString()\n      .split('T')[0],\n    endDate: new Date().toISOString().split('T')[0],\n  });\n\n  // Use separate hooks for static and revenue data\n  const {\n    statusCount,\n    orderList,\n    loading: staticLoading,\n    error: staticError,\n  } = useStaticDashboardData();\n  const {\n    sellRevenue,\n    loading: revenueLoading,\n    error: revenueError,\n  } = useRevenueData(filterParams);\n\n  const loading = staticLoading;\n  const error = staticError || revenueError;\n\n  const handleFilterChange = (params: FilterParams) => {\n    setFilterParams(params);\n  };\n\n  // Show loading state\n  if (loading) {\n    return (\n      <Box\n        display='flex'\n        justifyContent='center'\n        alignItems='center'\n        minHeight='200px'\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Show error state\n  if (error) {\n    return (\n      <Box p={2}>\n        <Alert severity='error' sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      </Box>\n    );\n  }\n\n  interface RevenueSum {\n    totalLAK: number;\n    totalTHB: number;\n    totalUSD: number;\n  }\n\n  const sumSellRevenue = (data: SellRevenue[]): RevenueSum => {\n    return data.reduce(\n      (acc, item) => {\n        acc.totalLAK += parseFloat(item.amountLAK);\n        acc.totalTHB += parseFloat(item.amountTHB);\n        acc.totalUSD += parseFloat(item.amountUSD);\n        return acc;\n      },\n      { totalLAK: 0, totalTHB: 0, totalUSD: 0 }\n    );\n  };\n  \n  return isXSmall ? (\n    <Box sx={{ p: 2 }}>\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n        {/* Status Section */}\n        {statusCount && (\n          <StatusCountCards\n            sellRevenue={sumSellRevenue as any}\n            orderStatusCount={statusCount.orderStatusCount}\n            customerCount={statusCount.customerCount}\n            sellAmount={statusCount.sellAmount}\n          />\n        )}\n        {/* Sell Revenue Section */}\n        {sellRevenue && (\n          <SellRevenueChart\n            data={sellRevenue}\n            onFilterChange={handleFilterChange}\n            loading={revenueLoading}\n          />\n        )}\n        {/* Order Pending List Section */}\n        {orderList && <OrderPendingList data={orderList} />}\n      </Box>\n    </Box>\n  ) : isSmall ? (\n    <div style={styles.flexColumn as CSSProperties}>\n      {/* Status Section */}\n      {statusCount && (\n        <div style={styles.singleCol}>\n          <StatusCountCards\n            sellRevenue={sumSellRevenue as any}\n            orderStatusCount={statusCount.orderStatusCount}\n            customerCount={statusCount.customerCount}\n            sellAmount={statusCount.sellAmount}\n          />\n        </div>\n      )}\n      {/* Sell Revenue Section */}\n      {sellRevenue && (\n        <div style={styles.singleCol}>\n          <div className='min-h-screen bg-gray-100 p-4'>\n            <div className='max-w-4xl mx-auto'>\n              <SellRevenueChart\n                data={sellRevenue}\n                onFilterChange={handleFilterChange}\n                loading={revenueLoading}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n      {/* Order Pending List Section */}\n      {orderList && (\n        <div style={styles.singleCol}>\n          <OrderPendingList data={orderList} />\n        </div>\n      )}\n    </div>\n  ) : (\n    <>\n      <div style={styles.singleCol}>\n        {/* Status Section */}\n        {statusCount && (\n          <StatusCountCards\n            sellRevenue={sellRevenue?.[0] as SellRevenue}\n            orderStatusCount={statusCount.orderStatusCount}\n            customerCount={statusCount.customerCount}\n            sellAmount={statusCount.sellAmount}\n          />\n        )}\n      </div>\n      <div style={styles.flex}>\n        <div style={styles.leftCol}>\n          {/* Sell Revenue Section */}\n          {sellRevenue && (\n            <div style={styles.singleCol}>\n              <SellRevenueChart\n                data={sellRevenue}\n                onFilterChange={handleFilterChange}\n                loading={revenueLoading}\n              />\n            </div>\n          )}\n        </div>\n        <div style={styles.rightCol}>\n          {/* Order Pending List Section */}\n          {orderList && (\n            <div style={styles.singleCol}>\n              <OrderPendingList data={orderList} />\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import DashboardComponent from './Dashboard';\n\nexport const Dashboard = DashboardComponent;\n","import {\n  DataProvider,\n  GetListParams,\n  GetListResult,\n  GetOneParams,\n  GetOneResult,\n  GetManyParams,\n  GetManyResult,\n  Identifier,\n} from 'react-admin';\nimport { ApiOrder, ApiOrderResponse } from '../types';\nimport pb from '../api/pocketbase'; // Import PocketBase instance\n\nconst API_BASE_URL = 'http://localhost:8080';\n\nconst ordersApiDataProvider: Partial<DataProvider> = {\n  getList: async <RecordType extends { id: Identifier } = ApiOrder>(\n    resource: string,\n    params: GetListParams\n  ): Promise<GetListResult<RecordType>> => {\n    if (resource !== 'orders') {\n      throw new Error(`Unknown resource: ${resource}`);\n    }\n\n    const { page = 1, perPage = 25 } = params.pagination || {};\n    const { status } = params.filter || {};\n\n    const url = `/order-list`;\n\n    try {\n      const queryParams = new URLSearchParams({\n        page: page.toString(),\n        perPage: perPage.toString(),\n        ...(status && { status }),\n      });\n\n      const response = await pb.send(`${url}?${queryParams}`, {\n        method: 'GET',\n      });\n\n      const data: ApiOrderResponse = response;\n\n      return {\n        data: data.items as unknown as RecordType[],\n        total: data.totalItems,\n        pageInfo: {\n          hasNextPage: data.page < data.totalPages,\n          hasPreviousPage: data.page > 1,\n        },\n      };\n    } catch (error) {\n      console.error('Error fetching orders:', error);\n      throw error;\n    }\n  },\n\n  getOne: async <RecordType extends { id: Identifier } = ApiOrder>(\n    resource: string,\n    params: GetOneParams<RecordType>\n  ): Promise<GetOneResult<RecordType>> => {\n    if (resource !== 'orders') {\n      throw new Error(`Unknown resource: ${resource}`);\n    }\n\n    // Since the API doesn't have a single order endpoint,\n    // we'll fetch from the list and find the specific order\n    const response = await fetch(`${API_BASE_URL}/order-list?perPage=1000`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${pb.authStore.token}`,\n      },\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data: ApiOrderResponse = await response.json();\n    const order = data.items.find((item) => item.id === params.id.toString());\n\n    if (!order) {\n      throw new Error(`Order with id ${params.id} not found`);\n    }\n\n    return { data: order as unknown as RecordType };\n  },\n\n  getMany: async <RecordType extends { id: Identifier } = ApiOrder>(\n    resource: string,\n    params: GetManyParams<RecordType>\n  ): Promise<GetManyResult<RecordType>> => {\n    if (resource !== 'orders') {\n      throw new Error(`Unknown resource: ${resource}`);\n    }\n\n    // Since the API doesn't have a bulk endpoint,\n    // we'll fetch from the list and filter by ids\n    const response = await fetch(`${API_BASE_URL}/order-list?perPage=1000`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${pb.authStore.token}`,\n      },\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data: ApiOrderResponse = await response.json();\n    const orders = data.items.filter((item) =>\n      params.ids.includes(item.id.toString())\n    );\n\n    return { data: orders as unknown as RecordType[] };\n  },\n\n  create: async () => {\n    throw new Error('Create operation not supported for orders');\n  },\n\n  update: async () => {\n    throw new Error('Update operation not supported for orders');\n  },\n\n  delete: async () => {\n    throw new Error('Delete operation not supported for orders');\n  },\n\n  deleteMany: async () => {\n    throw new Error('Delete many operation not supported for orders');\n  },\n\n  updateMany: async () => {\n    throw new Error('Update many operation not supported for orders');\n  },\n\n  getManyReference: async () => {\n    throw new Error('Get many reference operation not supported for orders');\n  },\n};\n\nexport default ordersApiDataProvider;\n","import pb from './pocketbase';\n\nexport interface Blog {\n  collectionId: string;\n  collectionName: string;\n  id: string;\n  image_url: string;\n  title: string;\n  description: string;\n  video_url: string;\n  count: number;\n  created: string;\n  updated: string;\n}\n\nexport const blogService = {\n  async getList(page = 1, perPage = 10, sort = '-created', filter = '') {\n    const options: any = {\n      page,\n      perPage,\n      sort,\n    };\n    \n    if (filter) {\n      options.filter = filter;\n    }\n\n    const result = await pb.collection('blogs').getList<Blog>(page, perPage, options);\n    return {\n      data: result.items,\n      total: result.totalItems,\n    };\n  },\n\n  async getOne(id: string) {\n    return await pb.collection('blogs').getOne<Blog>(id);\n  },\n\n  async create(data: Partial<Blog>) {\n    const result = await pb.collection('blogs').create<Blog>(data);\n    return result;\n  },\n\n  async update(id: string, data: Partial<Blog>) {\n    const result = await pb.collection('blogs').update<Blog>(id, data);\n    return result;\n  },\n\n  async delete(id: string) {\n    await pb.collection('blogs').delete(id);\n    return { id };\n  },\n\n  async deleteMany(ids: string[]) {\n    const deletedIds = [];\n    for (const id of ids) {\n      try {\n        await pb.collection('blogs').delete(id);\n        deletedIds.push(id);\n      } catch (error) {\n        console.error(`Failed to delete blog ${id}:`, error);\n      }\n    }\n    return { ids: deletedIds };\n  },\n};","import { DataProvider } from 'react-admin';\nimport { blogService } from '../api/blogsService';\nimport { uploadImageToCloudinary } from '../utils/cloudinaryUpload';\n\nexport const blogsDataProvider: Partial<DataProvider> = {\n  getList: async (resource, params) => {\n    if (resource !== 'blogs') return { data: [], total: 0 };\n\n    const { page, perPage } = params.pagination || { page: 1, perPage: 25 };\n    const { field, order } = params.sort || {};\n    const { filter } = params;\n\n    let sort = '';\n    if (field && order) {\n      sort = order === 'ASC' ? field : `-${field}`;\n    }\n\n    let filterString = '';\n    if (filter) {\n      const filters = [];\n      if (filter.title) {\n        filters.push(`title ~ \"${filter.title}\"`);\n      }\n      if (filter.description) {\n        filters.push(`description ~ \"${filter.description}\"`);\n      }\n      if (filter.q) {\n        filters.push(`(title ~ \"${filter.q}\" || description ~ \"${filter.q}\")`);\n      }\n      filterString = filters.join(' && ');\n    }\n\n    const result = await blogService.getList(page, perPage, sort, filterString);\n    return {\n      data: result.data as any,\n      total: result.total,\n    };\n  },\n\n  getOne: async (resource, params) => {\n    if (resource !== 'blogs') return { data: {} as any };\n\n    const data = await blogService.getOne(String(params.id));\n    return { data: data as any };\n  },\n\n  create: async (resource, params) => {\n    if (resource !== 'blogs') return { data: {} as any };\n\n    const { image, ...rest } = params.data;\n    const data = await blogService.create({\n      ...rest,\n      image_url:\n        image && image.rawFile\n          ? await uploadImageToCloudinary(image.rawFile)\n          : '',\n    });\n    return { data: data as any };\n  },\n\n  update: async (resource, params) => {\n    if (resource !== 'blogs') return { data: {} as any };\n\n    const { image, ...rest } = params.data;\n    let imageUrl = rest.image_url; // Keep existing URL by default\n\n    if (image && image.rawFile) {\n      imageUrl = await uploadImageToCloudinary(image.rawFile);\n    } else if (image === null) {\n      imageUrl = ''; // Clear the image\n    }\n\n    const dataToUpdate = {\n      ...rest,\n      image_url: imageUrl,\n    };\n\n    const data = await blogService.update(String(params.id), dataToUpdate);\n    return { data: data as any };\n  },\n\n  delete: async (resource, params) => {\n    if (resource !== 'blogs') return { data: {} as any };\n\n    await blogService.delete(String(params.id));\n    return { data: { id: params.id } };\n  },\n\n  deleteMany: async (resource, params) => {\n    if (resource !== 'blogs') return { data: [] };\n\n    const result = await blogService.deleteMany(params.ids.map(String));\n    return { data: result.ids };\n  },\n};\n","import { DataProvider } from 'react-admin';\nimport pb from '../api/pocketbase';\n\nexport interface Customer {\n  id: string;\n  username: string;\n  name: string;\n  phone_number: string;\n  avatar: string;\n  verified: boolean;\n  email: string;\n  emailVisibility: boolean;\n  address_id: string;\n  created: string;\n  updated: string;\n}\n\n// Function to transform a single customer record\nconst transformCustomer = (customer: any) => {\n  if (customer.avatar) {\n    customer.avatar;\n  }\n  return customer;\n};\n\nexport const customersDataProvider: Partial<DataProvider> = {\n  getList: async (resource, params) => {\n    const { page, perPage } = params.pagination || { page: 1, perPage: 10 };\n    const { field, order } = params.sort || { field: 'id', order: 'ASC' };\n    const { q, ...filters } = params.filter;\n\n    try {\n      let filter = '';\n      const filterParts = [];\n\n      // Search query\n      if (q) {\n        filterParts.push(\n          `(name ~ \"${q}\" || email ~ \"${q}\" || username ~ \"${q}\")`\n        );\n      }\n\n      // Other filters\n      Object.entries(filters).forEach(([key, value]) => {\n        if (value !== undefined && value !== null && value !== '') {\n          if (key === 'has_ordered') {\n            // Special handling for has_ordered filter\n            if (value === true) {\n              filterParts.push(\n                `id IN (SELECT DISTINCT customer_id FROM orders WHERE customer_id != \"\")`\n              );\n            } else {\n              filterParts.push(\n                `id NOT IN (SELECT DISTINCT customer_id FROM orders WHERE customer_id != \"\")`\n              );\n            }\n          } else if (key === 'customer_id') {\n            // Handle customer dropdown filter\n            filterParts.push(`id = \"${value}\"`);\n          } else if (typeof value === 'boolean') {\n            filterParts.push(`${key} = ${value}`);\n          } else if (typeof value === 'string') {\n            filterParts.push(`${key} ~ \"${value}\"`);\n          } else {\n            filterParts.push(`${key} = ${value}`);\n          }\n        }\n      });\n\n      if (filterParts.length > 0) {\n        filter = filterParts.join(' && ');\n      }\n\n      const result = await pb.collection('customers').getList(page, perPage, {\n        sort: order === 'ASC' ? `+${field}` : `-${field}`,\n        filter: filter || undefined,\n      });\n\n      return {\n        data: result.items.map(transformCustomer) as any,\n        total: result.totalItems,\n      };\n    } catch (error) {\n      console.error('Error fetching customers:', error);\n      throw error;\n    }\n  },\n\n  getOne: async (resource, params) => {\n    try {\n      const record = await pb\n        .collection('customers')\n        .getOne(params.id.toString(), {\n          expand: 'address_id,address_id.province_id,address_id.district_id',\n        });\n      return { data: transformCustomer(record) as any };\n    } catch (error) {\n      console.error('Error fetching customer:', error);\n      throw error;\n    }\n  },\n\n  create: async (resource, params) => {\n    try {\n      const record = await pb.collection('customers').create(params.data);\n      return { data: transformCustomer(record) as any };\n    } catch (error) {\n      console.error('Error creating customer:', error);\n      throw error;\n    }\n  },\n\n  update: async (resource, params) => {\n    try {\n      const record = await pb\n        .collection('customers')\n        .update(params.id, params.data);\n      return { data: transformCustomer(record) as any };\n    } catch (error) {\n      console.error('Error updating customer:', error);\n      throw error;\n    }\n  },\n\n  delete: async (resource, params) => {\n    try {\n      await pb.collection('customers').delete(params.id.toString());\n      return { data: { id: params.id } } as any;\n    } catch (error) {\n      console.error('Error deleting customer:', error);\n      throw error;\n    }\n  },\n\n  deleteMany: async (resource, params) => {\n    try {\n      await Promise.all(\n        params.ids.map((id) => pb.collection('customers').delete(id.toString()))\n      );\n      return { data: params.ids };\n    } catch (error) {\n      console.error('Error deleting customers:', error);\n      throw error;\n    }\n  },\n\n  getMany: async (resource, params) => {\n    try {\n      const records = await Promise.all(\n        params.ids.map((id) => pb.collection('customers').getOne(id.toString()))\n      );\n      return { data: records.map(transformCustomer) as any };\n    } catch (error) {\n      console.error('Error fetching customers:', error);\n      throw error;\n    }\n  },\n\n  getManyReference: async (resource, params) => {\n    const { page, perPage } = params.pagination || { page: 1, perPage: 10 };\n    const { field, order } = params.sort || { field: 'id', order: 'ASC' };\n    const { target, id } = params;\n\n    try {\n      const filter = `${target} = \"${id}\"`;\n\n      const result = await pb.collection('customers').getList(page, perPage, {\n        sort: order === 'ASC' ? `+${field}` : `-${field}`,\n        filter,\n      });\n\n      return {\n        data: result.items.map(transformCustomer) as any,\n        total: result.totalItems,\n      };\n    } catch (error) {\n      console.error('Error fetching customers reference:', error);\n      throw error;\n    }\n  },\n};\n","import pb, {\n  createPocketbaseDocument,\n  deletePocketbaseDocument,\n  fetchPocketbaseDocument,\n  updatePocketbaseDocument,\n} from '../api/pocketbase';\n\nexport interface ProductData {\n  collectionId: string;\n  collectionName: string;\n  id: string;\n  name: string;\n  description: string;\n  price: number;\n  category_id: string;\n  image_url: string[];\n  name_la: string;\n  description_la: string;\n  details: string;\n  created: string;\n  updated: string;\n}\n\nexport interface ProductFilter {\n  q?: string;\n  category_id?: string;\n  price_gte?: number;\n  price_lte?: number;\n  name?: string;\n  sales_best?: boolean;\n  sales_average?: boolean;\n  sales_low?: boolean;\n  sales_never?: boolean;\n  stock_out?: boolean;\n  stock_low?: boolean;\n  stock_medium?: boolean;\n  stock_high?: boolean;\n}\n\nexport interface ProductListParams {\n  pagination: { page: number; perPage: number };\n  sort: { field: string; order: 'ASC' | 'DESC' };\n  filter: ProductFilter;\n}\n\nexport interface ProductListResponse {\n  data: ProductData[];\n  total: number;\n}\n\nexport const productsDataProvider: any = {\n  getList: async (\n    resource: string,\n    params: ProductListParams\n  ): Promise<ProductListResponse> => {\n    const { pagination, sort, filter } = params;\n    const { page, perPage } = pagination;\n    const { field, order } = sort;\n\n    let filterStr = '';\n    const filterConditions: string[] = [];\n\n    if (filter.q) {\n      filterConditions.push(\n        `(name ~ \"${filter.q}\" || description ~ \"${filter.q}\" || name_la ~ \"${filter.q}\" || description_la ~ \"${filter.q}\")`\n      );\n    }\n\n    if (filter.category_id) {\n      filterConditions.push(`category_id = \"${filter.category_id}\"`);\n    }\n\n    if (filter.price_gte) {\n      filterConditions.push(`price >= ${filter.price_gte}`);\n    }\n\n    if (filter.price_lte) {\n      filterConditions.push(`price <= ${filter.price_lte}`);\n    }\n\n    // Stock filters (assuming we have a stock field)\n    const stockFilters: string[] = [];\n    if (filter.stock_out) {\n      stockFilters.push('stock = 0');\n    }\n    if (filter.stock_low) {\n      stockFilters.push('(stock >= 1 && stock <= 9)');\n    }\n    if (filter.stock_medium) {\n      stockFilters.push('(stock >= 10 && stock <= 49)');\n    }\n    if (filter.stock_high) {\n      stockFilters.push('stock >= 50');\n    }\n    if (stockFilters.length > 0) {\n      filterConditions.push(`(${stockFilters.join(' || ')})`);\n    }\n\n    // Sales filters (assuming we have sales data or need to calculate from orders)\n    const salesFilters: string[] = [];\n    if (filter.sales_best) {\n      salesFilters.push('sales_count > 100'); // Adjust threshold as needed\n    }\n    if (filter.sales_average) {\n      salesFilters.push('(sales_count >= 10 && sales_count <= 100)');\n    }\n    if (filter.sales_low) {\n      salesFilters.push('(sales_count >= 1 && sales_count < 10)');\n    }\n    if (filter.sales_never) {\n      salesFilters.push('sales_count = 0');\n    }\n    if (salesFilters.length > 0) {\n      filterConditions.push(`(${salesFilters.join(' || ')})`);\n    }\n\n    if (filterConditions.length > 0) {\n      filterStr = filterConditions.join(' && ');\n    }\n\n    const sortStr = `${order === 'DESC' ? '-' : ''}${field}`;\n\n    try {\n      const result = await pb.collection('products').getList(page, perPage, {\n        filter: filterStr,\n        sort: sortStr,\n        expand: 'category_id',\n      });\n\n      return {\n        data: result.items as ProductData[],\n        total: result.totalItems,\n      };\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      throw new Error('Failed to fetch products');\n    }\n  },\n\n  getOne: async (\n    resource: string,\n    params: { id: string }\n  ): Promise<{ data: ProductData }> => {\n    try {\n      const record = await fetchPocketbaseDocument<ProductData>(\n        'products',\n        params.id\n      );\n      return { data: record };\n    } catch (error) {\n      console.error('Error fetching product:', error);\n      throw new Error('Failed to fetch product');\n    }\n  },\n\n  getMany: async (\n    resource: string,\n    params: { ids: string[] }\n  ): Promise<{ data: ProductData[] }> => {\n    try {\n      const filterStr = params.ids.map((id) => `id = \"${id}\"`).join(' || ');\n      const result = await pb\n        .collection('products')\n        .getList(1, params.ids.length, {\n          filter: filterStr,\n        });\n      return { data: result.items as ProductData[] };\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      throw new Error('Failed to fetch products');\n    }\n  },\n\n  getManyReference: async (\n    resource: string,\n    params: {\n      target: string;\n      id: string;\n      pagination: { page: number; perPage: number };\n      sort: { field: string; order: 'ASC' | 'DESC' };\n      filter: ProductFilter;\n    }\n  ): Promise<ProductListResponse> => {\n    const { target, id, pagination, sort, filter } = params;\n    const { page, perPage } = pagination;\n    const { field, order } = sort;\n\n    const filterConditions: string[] = [`${target} = \"${id}\"`];\n\n    if (filter.q) {\n      filterConditions.push(\n        `(name ~ \"${filter.q}\" || description ~ \"${filter.q}\")`\n      );\n    }\n\n    const filterStr = filterConditions.join(' && ');\n    const sortStr = `${order === 'DESC' ? '-' : ''}${field}`;\n\n    try {\n      const result = await pb.collection('products').getList(page, perPage, {\n        filter: filterStr,\n        sort: sortStr,\n      });\n\n      return {\n        data: result.items as ProductData[],\n        total: result.totalItems,\n      };\n    } catch (error) {\n      console.error('Error fetching related products:', error);\n      throw new Error('Failed to fetch related products');\n    }\n  },\n\n  create: async (\n    resource: string,\n    params: { data: Partial<ProductData> }\n  ): Promise<{ data: ProductData }> => {\n    try {\n      const id = await createPocketbaseDocument('products', params.data);\n      const record = await fetchPocketbaseDocument<ProductData>('products', id);\n      return { data: record };\n    } catch (error) {\n      console.error('Error creating product:', error);\n      throw new Error('Failed to create product');\n    }\n  },\n\n  update: async (\n    resource: string,\n    params: { id: string; data: Partial<ProductData> }\n  ): Promise<{ data: ProductData }> => {\n    const { id, data } = params;\n    try {\n      await updatePocketbaseDocument('products', id, data);\n      const record = await fetchPocketbaseDocument<ProductData>('products', id);\n      return { data: record };\n    } catch (error) {\n      console.error('Error updating product:', error);\n      throw new Error('Failed to update product');\n    }\n  },\n\n  updateMany: async (\n    resource: string,\n    params: { ids: string[]; data: Partial<ProductData> }\n  ): Promise<{ data: string[] }> => {\n    const { ids, data } = params;\n    try {\n      await Promise.all(\n        ids.map((id) => updatePocketbaseDocument('products', id, data))\n      );\n      return { data: ids };\n    } catch (error) {\n      console.error('Error updating products:', error);\n      throw new Error('Failed to update products');\n    }\n  },\n\n  delete: async (\n    resource: string,\n    params: { id: string }\n  ): Promise<{ data: ProductData }> => {\n    const { id } = params;\n    try {\n      const record = await fetchPocketbaseDocument<ProductData>('products', id);\n      await deletePocketbaseDocument('products', id);\n      return { data: record };\n    } catch (error) {\n      console.error('Error deleting product:', error);\n      throw new Error('Failed to delete product');\n    }\n  },\n\n  deleteMany: async (\n    resource: string,\n    params: { ids: string[] }\n  ): Promise<{ data: string[] }> => {\n    const { ids } = params;\n    try {\n      await Promise.all(\n        ids.map((id) => deletePocketbaseDocument('products', id))\n      );\n      return { data: ids };\n    } catch (error) {\n      console.error('Error deleting products:', error);\n      throw new Error('Failed to delete products');\n    }\n  },\n};\n","import { DataProvider } from 'react-admin';\nimport pb, { fetchPocketbaseDocument } from '../api/pocketbase';\nimport {\n  CLOUDINARY_UPLOAD_PRESET,\n  CLOUDINARY_URL,\n} from '../utils/cloudinaryKey';\n\nexport interface ProductCategory {\n  id: string;\n  collectionId: string;\n  collectionName: string;\n  name: string;\n  name_la: string;\n  image_url: string;\n  created: string;\n  updated: string;\n}\n\nconst COLLECTION_NAME = 'product_categories';\n\nexport const productCategoriesDataProvider: Partial<DataProvider> = {\n  getList: async (resource, params) => {\n    const { page, perPage } = params.pagination || { page: 1, perPage: 10 };\n    const { field, order } = params.sort || { field: 'id', order: 'ASC' };\n    const filter = params.filter || {};\n\n    const result = pb\n      .collection(COLLECTION_NAME)\n      .getList<ProductCategory>(page, perPage, {\n        sort: `${order === 'ASC' ? '+' : '-'}${field}`,\n        filter: Object.keys(filter || {})\n          .map((key) => `${key} ~ \"${filter[key]}\"`)\n          .join(' && '),\n      });\n    const records = await result;\n\n    return {\n      data: records.items.map((item) => ({\n        ...item,\n        id: item.id.toString(),\n        name: item.name,\n      })) as any[],\n      total: records.totalItems,\n    };\n  },\n\n  getOne: async (resource, params) => {\n    const record = await fetchPocketbaseDocument<ProductCategory>(\n      COLLECTION_NAME,\n      params.id.toString()\n    );\n    return {\n      data: { ...record, id: record.id.toString(), name: record.name } as any,\n    };\n  },\n\n  getMany: async (resource: string, params: any) => {\n    try {\n      const data = await Promise.all(\n        params.ids.map((id: any) =>\n          fetchPocketbaseDocument<ProductCategory>(COLLECTION_NAME, String(id))\n        )\n      );\n      return { data };\n    } catch (error) {\n      console.error('Error fetching multiple product categories:', error);\n      throw error;\n    }\n  },\n  create: async (resource, params) => {\n    const { image, ...rest } = params.data;\n\n    if (image && image.rawFile) {\n      const formData = new FormData();\n      formData.append('file', image.rawFile);\n      formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET!);\n\n      const response = await fetch(CLOUDINARY_URL, {\n        method: 'POST',\n        body: formData,\n      });\n\n      const cloudinaryData = await response.json();\n\n      const record = await pb.collection(COLLECTION_NAME).create({\n        ...rest,\n        image_url: cloudinaryData.secure_url,\n      });\n\n      return { data: record as any };\n    } else {\n      const record = await pb.collection(COLLECTION_NAME).create(rest);\n      return { data: record as any };\n    }\n  },\n\n  update: async (resource, params) => {\n    const { id, data } = params;\n    const { image, ...rest } = data;\n\n    if (image && image.rawFile) {\n      const formData = new FormData();\n      formData.append('file', image.rawFile);\n      formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET!);\n\n      const response = await fetch(CLOUDINARY_URL, {\n        method: 'POST',\n        body: formData,\n      });\n\n      const cloudinaryData = await response.json();\n\n      const record = await pb.collection(COLLECTION_NAME).update(id, {\n        ...rest,\n        image_url: cloudinaryData.secure_url,\n      });\n\n      return { data: record as any };\n    } else {\n      const record = await pb.collection(COLLECTION_NAME).update(id, rest);\n      return { data: record as any };\n    }\n  },\n\n  delete: async (resource, params) => {\n    await pb.collection(COLLECTION_NAME).delete(params.id.toString());\n    return { data: { id: params.id } } as any;\n  },\n};\n","import { DataProvider } from 'react-admin';\nimport pb from '../api/pocketbase';\n\nexport interface User {\n  id: string;\n  collectionId: string;\n  collectionName: string;\n  avatar: string;\n  username: string;\n  full_name: string;\n  email: string;\n  phone_number: string;\n  emailVisibility: boolean;\n  verified: boolean;\n  created: string;\n  updated: string;\n}\n\nconst CLOUDINARY_UPLOAD_PRESET = 'images';\nconst CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/db84fdke0/upload';\n\nconst uploadImageToCloudinary = async (file: File): Promise<string> => {\n  const formData = new FormData();\n  formData.append('file', file);\n  formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET);\n\n  const response = await fetch(CLOUDINARY_URL, {\n    method: 'POST',\n    body: formData,\n  });\n\n  if (!response.ok) {\n    throw new Error('Failed to upload image to Cloudinary');\n  }\n\n  const data = await response.json();\n  return data.secure_url;\n};\n\nexport const usersDataProvider: Partial<DataProvider> = {\n  getList: async (resource, params) => {\n    const { page, perPage } = params.pagination || { page: 1, perPage: 10 };\n    const { field, order } = params.sort || { field: 'id', order: 'ASC' };\n    const { q, ...filters } = params.filter;\n\n    try {\n      let filter = '';\n      const filterParts = [];\n\n      // Search query\n      if (q) {\n        filterParts.push(`(full_name ~ \"${q}\" || email ~ \"${q}\" || username ~ \"${q}\")`);\n      }\n\n      // Other filters\n      Object.entries(filters).forEach(([key, value]) => {\n        if (value !== undefined && value !== null && value !== '') {\n          if (typeof value === 'boolean') {\n            filterParts.push(`${key} = ${value}`);\n          } else if (typeof value === 'string') {\n            filterParts.push(`${key} ~ \"${value}\"`);\n          } else {\n            filterParts.push(`${key} = ${value}`);\n          }\n        }\n      });\n\n      if (filterParts.length > 0) {\n        filter = filterParts.join(' && ');\n      }\n\n      const result = await pb.collection('users').getList(page, perPage, {\n        sort: order === 'ASC' ? `+${field}` : `-${field}`,\n        filter: filter || undefined,\n      });\n\n      return {\n        data: result.items as any,\n        total: result.totalItems,\n      };\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      throw error;\n    }\n  },\n\n  getOne: async (resource, params) => {\n    try {\n      const record = await pb.collection('users').getOne(params.id.toString());\n      return { data: record as any };\n    } catch (error) {\n      console.error('Error fetching user:', error);\n      throw error;\n    }\n  },\n\n  create: async (resource, params) => {\n    try {\n      const { password, passwordConfirm, avatar, ...rest } = params.data;\n      let avatarUrl = '';\n\n      if (avatar && avatar.rawFile) {\n        avatarUrl = await uploadImageToCloudinary(avatar.rawFile);\n      }\n\n      const dataToCreate = {\n        ...rest,\n        emailVisibility: true,\n        password,\n        passwordConfirm,\n        avatar: avatarUrl,\n      };\n\n      const record = await pb.collection('users').create(dataToCreate);\n      await pb.collection('users').requestVerification(rest.email);\n      return { data: record as any };\n    } catch (error) {\n      console.error('Error creating user:', error);\n      throw error;\n    }\n  },\n\n  update: async (resource, params) => {\n    try {\n      const { id, data } = params;\n      const { password, oldPassword, passwordConfirm, avatar, email, ...rest } = data;\n\n      // Fetch current user data to compare email\n      const currentUser = await pb.collection('users').getOne(id);\n\n      // Handle password change separately\n      if (password) {\n        if (!oldPassword) {\n          throw new Error('Old password is required to change the password.');\n        }\n        await pb.collection('users').update(id, {\n          password,\n          passwordConfirm,\n          oldPassword,\n        });\n      }\n\n      // Handle email change separately if it's different\n      if (email !== currentUser.email) {\n        await pb.collection('users').update(id, { email });\n      }\n\n      const formData = new FormData();\n      // Append other fields to formData\n      for (const key in rest) {\n        if (Object.prototype.hasOwnProperty.call(rest, key)) {\n          formData.append(key, rest[key]);\n        }\n      }\n      formData.append('emailVisibility', 'true');\n\n      // Handle avatar update\n      if (avatar && avatar.rawFile) {\n        // New avatar selected\n        const avatarUrl = await uploadImageToCloudinary(avatar.rawFile);\n        formData.append('avatar', avatarUrl);\n      } else if (avatar === null) {\n        // Avatar cleared\n        formData.append('avatar', ''); // Send empty string to clear the file in PocketBase\n      } else if (typeof avatar === 'string' && avatar !== currentUser.avatar) {\n        // Existing avatar URL changed (e.g., user typed a new URL)\n        formData.append('avatar', avatar);\n      }\n      // If avatar is a string (existing URL) and not changed, do not append it to formData\n      // PocketBase will retain the existing avatar if no new file is provided.\n\n      const updatedRecord = await pb.collection('users').update(id, formData);\n\n      return { data: { ...updatedRecord, id } as any };\n    } catch (error) {\n      console.error('Error updating user:', error);\n      throw error;\n    }\n  },\n\n  delete: async (resource, params) => {\n    try {\n      await pb.collection('users').delete(params.id.toString());\n      return { data: { id: params.id } } as any;\n    } catch (error) {\n      console.error('Error deleting user:', error);\n      throw error;\n    }\n  },\n\n  deleteMany: async (resource, params) => {\n    try {\n      await Promise.all(\n        params.ids.map(id => pb.collection('users').delete(id.toString()))\n      );\n      return { data: params.ids };\n    } catch (error) {\n      console.error('Error deleting users:', error);\n      throw error;\n    }\n  },\n\n  getMany: async (resource, params) => {\n    try {\n      const records = await Promise.all(\n        params.ids.map(id => pb.collection('users').getOne(id.toString()))\n      );\n      return { data: records as any };\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      throw error;\n    }\n  },\n\n  getManyReference: async (resource, params) => {\n    const { page, perPage } = params.pagination || { page: 1, perPage: 10 };\n    const { field, order } = params.sort || { field: 'id', order: 'ASC' };\n    const { target, id } = params;\n\n    try {\n      const filter = `${target} = \"${id}\"`;\n      \n      const result = await pb.collection('users').getList(page, perPage, {\n        sort: order === 'ASC' ? `+${field}` : `-${field}`,\n        filter,\n      });\n\n      return {\n        data: result.items as any,\n        total: result.totalItems,\n      };\n    } catch (error) {\n      console.error('Error fetching users reference:', error);\n      throw error;\n    }\n  },\n};","import simpleRestProvider from 'ra-data-simple-rest';\n\nconst restProvider = simpleRestProvider('http://localhost:4000');\n\nexport const addressesDataProvider = {\n  ...restProvider,\n  // Add any custom logic for addresses if needed\n};","import { DataProvider } from 'react-admin';\nimport ordersApiDataProvider from './ordersApi';\nimport { blogsDataProvider } from './blogsDataProvider';\nimport { customersDataProvider } from './customersDataProvider';\nimport { productsDataProvider } from './productsDataProvider';\nimport { productCategoriesDataProvider } from './productCategoriesDataProvider';\nimport { usersDataProvider } from './usersDataProvider';\nimport { addressesDataProvider } from './addressesDataProvider';\n\nexport default (type: string) => {\n  // The fake servers require to generate data, which can take some time.\n  // Here we start the server initialization but we don't wait for it to finish\n  const dataProviderPromise = getDataProvider(type);\n\n  // Instead we return this proxy which may be called immediately by react-admin if the\n  // user is already signed-in. In this case, we simply wait for the dataProvider promise\n  // to complete before requesting it the data.\n  // If the user isn't signed in, we already started the server initialization while they see\n  // the login page. By the time they come back to the admin as a signed-in user,\n  // the fake server will be initialized.\n  const dataProviderWithGeneratedData = new Proxy(defaultDataProvider, {\n    get(_, name) {\n      if (name === 'supportAbortSignal') {\n        return import.meta.env.MODE === 'production';\n      }\n      return (resource: string, params: any) => {\n        // Use custom orders API for orders resource\n        if (resource === 'orders' && ordersApiDataProvider[name.toString()]) {\n          return ordersApiDataProvider[name.toString()](resource, params);\n        }\n\n        // Use custom blogs data provider for blogs resource\n        if (resource === 'blogs' && blogsDataProvider[name.toString()]) {\n          return blogsDataProvider[name.toString()](resource, params);\n        }\n\n        // Use custom customers data provider for customers resource\n        if (resource === 'customers' && customersDataProvider[name.toString()]) {\n          return customersDataProvider[name.toString()](resource, params);\n        }\n\n        // Use custom products data provider for products resource\n        if (resource === 'products' && productsDataProvider[name.toString()]) {\n          return productsDataProvider[name.toString()](resource, params);\n        }\n\n        // Use custom product categories data provider for product_categories and categories resources\n        if ((resource === 'product_categories' || resource === 'categories') && productCategoriesDataProvider[name.toString()]) {\n          return productCategoriesDataProvider[name.toString()](resource, params);\n        }\n\n        // Use custom users data provider for users resource\n        if (resource === 'users' && usersDataProvider[name.toString()]) {\n          return usersDataProvider[name.toString()](resource, params);\n        }\n\n        // Use custom addresses data provider for addresses resource\n        if (resource === 'addresses' && addressesDataProvider[name.toString()]) {\n          return addressesDataProvider[name.toString()](resource, params);\n        }\n\n        return dataProviderPromise.then((dataProvider) => {\n          return dataProvider[name.toString()](resource, params);\n        });\n      };\n    },\n  });\n\n  return dataProviderWithGeneratedData;\n};\n\nconst getDataProvider = async (type: string): Promise<DataProvider> => {\n  return import('./rest').then((provider) => provider.default);\n};\n\nconst defaultDataProvider: DataProvider = {\n  // @ts-ignore\n  create: () => Promise.resolve({ data: { id: 0 } }),\n  // @ts-ignore\n  delete: () => Promise.resolve({ data: {} }),\n  deleteMany: () => Promise.resolve({}),\n  getList: () => Promise.resolve({ data: [], total: 0 }),\n  getMany: () => Promise.resolve({ data: [] }),\n  getManyReference: () => Promise.resolve({ data: [], total: 0 }),\n  // @ts-ignore\n  getOne: () => Promise.resolve({ data: {} }),\n  // @ts-ignore\n  update: () => Promise.resolve({ data: {} }),\n  updateMany: () => Promise.resolve({}),\n};\n","import { TranslationMessages } from 'react-admin';\nimport englishMessages from 'ra-language-english';\n\nconst customEnglishMessages: TranslationMessages = {\n  ...englishMessages,\n  pos: {\n    search: 'Search',\n    configuration: 'Configuration',\n    language: 'Language',\n    theme: {\n      name: 'Theme',\n      light: 'Light',\n      dark: 'Dark',\n    },\n    dashboard: {\n      monthly_revenue: 'Monthly Revenue',\n    },\n    orders_management: 'Orders Management',\n    month_history: '30 Day Revenue History',\n    new_orders: 'New Orders',\n    pending_reviews: 'Pending Reviews',\n    all_reviews: 'See all reviews',\n    new_customers: 'New Customers',\n    all_customers: 'See all customers',\n    pending_orders: 'Pending Orders',\n    order: {\n      items:\n        'by %{customer_name}, one item |||| by %{customer_name}, %{nb_items} items',\n    },\n    welcome: {\n      title: 'Welcome to the react-admin e-commerce demo',\n      subtitle:\n        \"This is the admin of an imaginary poster shop. Feel free to explore and modify the data - it's local to your computer, and will reset each time you reload.\",\n      ra_button: 'react-admin site',\n      demo_button: 'Source for this demo',\n    },\n  },\n  menu: {\n    sales: 'Sales',\n    catalog: 'Catalog',\n    customers: 'Customers',\n  },\n  events: {\n    review: {\n      title: 'Posted review on \"%{product}\"',\n    },\n    order: {\n      title: 'Ordered 1 poster |||| Ordered %{smart_count} posters',\n    },\n  },\n  resources: {\n    customers: {\n      name: 'Customer |||| Customers',\n      fields: {\n        orders: 'Orders',\n        first_seen: 'First seen',\n        full_name: 'Name',\n        groups: 'Segments',\n        last_seen: 'Last seen',\n        last_seen_gte: 'Visited Since',\n        name: 'Name',\n        total_spent: 'Total spent',\n        password: 'Password',\n        confirm_password: 'Confirm password',\n        stateAbbr: 'State',\n      },\n      filters: {\n        last_visited: 'Last visited',\n        today: 'Today',\n        this_week: 'This week',\n        last_week: 'Last week',\n        this_month: 'This month',\n        last_month: 'Last month',\n        earlier: 'Earlier',\n        has_ordered: 'Has ordered',\n        has_newsletter: 'Has newsletter',\n        group: 'Segment',\n      },\n      fieldGroups: {\n        identity: 'Identity',\n        address: 'Address',\n        stats: 'Stats',\n        history: 'History',\n        password: 'Password',\n        change_password: 'Change Password',\n      },\n      page: {\n        delete: 'Delete Customer',\n      },\n      errors: {\n        password_mismatch:\n          'The password confirmation is not the same as the password.',\n      },\n      notifications: {\n        created: 'Customer created |||| %{smart_count} customers created',\n        updated: 'Customer updated |||| %{smart_count} customers updated',\n        deleted: 'Customer deleted |||| %{smart_count} customers deleted',\n      },\n    },\n    orders: {\n      name: 'Order |||| Orders',\n      amount: '1 order |||| %{smart_count} orders',\n      title: 'Order %{reference}',\n      fields: {\n        basket: {\n          delivery: 'Delivery',\n          reference: 'Reference',\n          quantity: 'Quantity',\n          sum: 'Sum',\n          tax_rate: 'Tax Rate',\n          taxes: 'Tax',\n          total: 'Total',\n          unit_price: 'Unit Price',\n        },\n        address: 'Address',\n        customer_id: 'Customer',\n        date_gte: 'Passed Since',\n        date_lte: 'Passed Before',\n        nb_items: 'Nb Items',\n        total_gte: 'Min amount',\n        status: 'Status',\n        returned: 'Returned',\n      },\n      section: {\n        order: 'Order',\n        customer: 'Customer',\n        shipping_address: 'Shipping Address',\n        items: 'Items',\n        total: 'Totals',\n      },\n      notifications: {\n        created: 'Order created |||| %{smart_count} orders created',\n        updated: 'Order updated |||| %{smart_count} orders updated',\n        deleted: 'Order deleted |||| %{smart_count} orders deleted',\n      },\n    },\n    blogs: {\n      name: 'Blog |||| Blogs',\n    },\n    users: {\n      name: 'User admin |||| User admin',\n      fields: {\n        full_name: 'Full Name',\n        username: 'Username',\n        email: 'Email',\n        phone_number: 'Phone Number',\n        verified: 'Verified',\n        emailVisibility: 'Email Visibility',\n        password: 'Password',\n        passwordConfirm: 'Confirm Password',\n      },\n    },\n    invoices: {\n      name: 'Invoice |||| Invoices',\n      fields: {\n        date: 'Invoice date',\n        customer_id: 'Customer',\n        order_id: 'Order',\n        date_gte: 'Passed Since',\n        date_lte: 'Passed Before',\n        total_gte: 'Min amount',\n        address: 'Address',\n      },\n      notifications: {\n        created: 'Invoice created |||| %{smart_count} invoices created',\n        updated: 'Invoice updated |||| %{smart_count} invoices updated',\n        deleted: 'Invoice deleted |||| %{smart_count} invoices deleted',\n      },\n    },\n    products: {\n      name: 'Products |||| Products',\n      fields: {\n        category_id: 'Category',\n        height_gte: 'Min height',\n        height_lte: 'Max height',\n        height: 'Height',\n        image: 'Image',\n        price: 'Price',\n        reference: 'Reference',\n        sales: 'Sales',\n        stock_lte: 'Low Stock',\n        stock: 'Stock',\n        thumbnail: 'Thumbnail',\n        width_gte: 'Min width',\n        width_lte: 'Max width',\n        width: 'Width',\n      },\n      tabs: {\n        image: 'Image',\n        details: 'Details',\n        description: 'Description',\n        reviews: 'Reviews',\n      },\n      filters: {\n        categories: 'Categories',\n        stock: 'Stock',\n        no_stock: 'Out of stock',\n        low_stock: '1 - 9 items',\n        average_stock: '10 - 49 items',\n        enough_stock: '50 items & more',\n        sales: 'Sales',\n        best_sellers: 'Best sellers',\n        average_sellers: 'Average',\n        low_sellers: 'Low',\n        never_sold: 'Never sold',\n      },\n      notifications: {\n        created: 'Poster created |||| %{smart_count} posters created',\n        updated: 'Poster updated |||| %{smart_count} posters updated',\n        deleted: 'Poster deleted |||| %{smart_count} posters deleted',\n      },\n    },\n    categories: {\n      name: 'Category |||| Categories',\n      fields: {\n        products: 'Products',\n      },\n      notifications: {\n        created: 'Category created |||| %{smart_count} categories created',\n        updated: 'Category updated |||| %{smart_count} categories updated',\n        deleted: 'Category deleted |||| %{smart_count} categories deleted',\n      },\n    },\n    reviews: {\n      name: 'Review |||| Reviews',\n      amount: '1 review |||| %{smart_count} reviews',\n      relative_to_poster: 'Review on poster',\n      detail: 'Review detail',\n      fields: {\n        customer_id: 'Customer',\n        order_id: 'Order',\n        product_id: 'Product',\n        date_gte: 'Posted since',\n        date_lte: 'Posted before',\n        date: 'Date',\n        comment: 'Comment',\n        rating: 'Rating',\n      },\n      action: {\n        accept: 'Accept',\n        reject: 'Reject',\n      },\n      notifications: {\n        created: 'Review created |||| %{smart_count} reviews created',\n        updated: 'Review updated |||| %{smart_count} reviews updated',\n        deleted: 'Review deleted |||| %{smart_count} reviews deleted',\n        approved_success: 'Review approved',\n        approved_error: 'Error: Review not approved',\n        rejected_success: 'Review rejected',\n        rejected_error: 'Error: Review not rejected',\n      },\n    },\n    segments: {\n      name: 'Segment |||| Segments',\n      fields: {\n        customers: 'Customers',\n        name: 'Name',\n      },\n      data: {\n        compulsive: 'Compulsive',\n        collector: 'Collector',\n        ordered_once: 'Ordered once',\n        regular: 'Regular',\n        returns: 'Returns',\n        reviewer: 'Reviewer',\n      },\n    },\n  },\n};\n\nexport default customEnglishMessages;\n","import * as React from 'react';\nimport { Avatar, SxProps } from '@mui/material';\nimport { FieldProps, useRecordContext } from 'react-admin';\nimport { Customer } from '../types';\n\ninterface Props extends Omit<FieldProps<Customer>, 'source'> {\n    sx?: SxProps;\n    size?: string;\n}\n\nconst AvatarField = ({ size = '25', sx }: Props) => {\n    const record = useRecordContext<Customer>();\n    if (!record) return null;\n    return (\n        <Avatar\n            src={`${record.avatar}?size=${size}x${size}`}\n            style={{ width: parseInt(size, 10), height: parseInt(size, 10) }}\n            sx={sx}\n            alt={`${record.first_name} ${record.last_name}`}\n        />\n    );\n};\n\nexport default AvatarField;\n","import * as React from 'react';\nimport { SxProps, Typography } from '@mui/material';\nimport { memo } from 'react';\n\nimport { FieldProps, useRecordContext } from 'react-admin';\nimport AvatarField from './AvatarField';\nimport { Customer } from '../types';\n\ninterface Props extends FieldProps<Customer> {\n    size?: string;\n    sx?: SxProps;\n}\n\nconst FullNameField = (props: Props) => {\n    const { size } = props;\n    const record = useRecordContext<Customer>();\n    return record ? (\n        <Typography\n            variant=\"body2\"\n            component=\"div\"\n            sx={[\n                {\n                    display: 'flex',\n                    flexWrap: 'nowrap',\n                    alignItems: 'center',\n                },\n                ...(Array.isArray(props.sx) ? props.sx : [props.sx]),\n            ]}\n        >\n            <AvatarField\n                record={record}\n                size={size}\n                sx={{\n                    mr: 1,\n                    mt: -0.5,\n                    mb: -0.5,\n                    textDecoration: 'underline',\n                    textDecorationColor: '#bdbdbd',\n                }}\n            />\n            {record.first_name} {record.last_name}\n        </Typography>\n    ) : null;\n};\n\nexport default memo<Props>(FullNameField);\n","import * as React from 'react';\nimport { useRecordContext } from 'react-admin';\nimport { Customer } from '../types';\n\nconst AddressField = () => {\n    const record = useRecordContext<Customer>();\n\n    return record ? (\n        <span>\n            {record.address}, {record.city}, {record.stateAbbr} {record.zipcode}\n        </span>\n    ) : null;\n};\n\nexport default AddressField;\n","import { styled } from '@mui/material/styles';\nimport { TableCell } from '@mui/material';\n\nexport const TableCellRight = styled(TableCell)({ textAlign: 'right' });\n","import * as React from 'react';\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n} from '@mui/material';\nimport { Link, useTranslate, useGetMany, useRecordContext } from 'react-admin';\n\nimport { Order, Product } from '../types';\nimport { TableCellRight } from './TableCellRight';\n\nconst Basket = () => {\n    const record = useRecordContext<Order>();\n    const translate = useTranslate();\n\n    const productIds = record ? record.basket.map(item => item.product_id) : [];\n\n    const { isPending, data: products } = useGetMany<Product>(\n        'products',\n        { ids: productIds },\n        { enabled: !!record }\n    );\n    const productsById = products\n        ? products.reduce((acc, product) => {\n              acc[product.id] = product;\n              return acc;\n          }, {} as any)\n        : {};\n\n    if (isPending || !record || !products) return null;\n\n    return (\n        <Table>\n            <TableHead>\n                <TableRow>\n                    <TableCell>\n                        {translate('resources.orders.fields.basket.reference')}\n                    </TableCell>\n                    <TableCellRight>\n                        {translate('resources.orders.fields.basket.unit_price')}\n                    </TableCellRight>\n                    <TableCellRight>\n                        {translate('resources.orders.fields.basket.quantity')}\n                    </TableCellRight>\n                    <TableCellRight>\n                        {translate('resources.orders.fields.basket.total')}\n                    </TableCellRight>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {record.basket.map((item: any) => (\n                    <TableRow key={item.product_id}>\n                        <TableCell>\n                            <Link to={`/products/${item.product_id}`}>\n                                {productsById[item.product_id].reference}\n                            </Link>\n                        </TableCell>\n                        <TableCellRight>\n                            {productsById[item.product_id].price.toLocaleString(\n                                undefined,\n                                {\n                                    style: 'currency',\n                                    currency: 'USD',\n                                }\n                            )}\n                        </TableCellRight>\n                        <TableCellRight>{item.quantity}</TableCellRight>\n                        <TableCellRight>\n                            {(\n                                productsById[item.product_id].price *\n                                item.quantity\n                            ).toLocaleString(undefined, {\n                                style: 'currency',\n                                currency: 'USD',\n                            })}\n                        </TableCellRight>\n                    </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n    );\n};\n\nexport default Basket;\n","import * as React from 'react';\nimport { Box, Card, CardContent, Grid, Typography } from '@mui/material';\nimport { ReferenceField, TextField, useRecordContext } from 'react-admin';\n\nimport Basket from '../orders/Basket';\nimport { Customer, Invoice } from '../types';\n\nconst InvoiceShow = () => {\n    const record = useRecordContext<Invoice>();\n    if (!record) return null;\n    return (\n        <Card sx={{ width: 600, margin: 'auto' }}>\n            <CardContent>\n                <Grid container spacing={2}>\n                    <Grid size={{ xs: 6 }}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            Posters Galore\n                        </Typography>\n                    </Grid>\n                    <Grid size={{ xs: 6 }}>\n                        <Typography variant=\"h6\" gutterBottom align=\"right\">\n                            Invoice {record.id}\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={2}>\n                    <Grid\n                        size={{ xs: 12 }}\n                        sx={{\n                            alignContent: 'flex-end',\n                        }}\n                    >\n                        <ReferenceField\n                            reference=\"customers\"\n                            source=\"customer_id\"\n                            link={false}\n                        >\n                            <CustomerField />\n                        </ReferenceField>\n                    </Grid>\n                </Grid>\n                <Box\n                    sx={{\n                        height: 20,\n                    }}\n                >\n                    &nbsp;\n                </Box>\n                <Grid container spacing={2}>\n                    <Grid size={{ xs: 6 }}>\n                        <Typography variant=\"h6\" gutterBottom align=\"center\">\n                            Date{' '}\n                        </Typography>\n                        <Typography gutterBottom align=\"center\">\n                            {new Date(record.date).toLocaleDateString()}\n                        </Typography>\n                    </Grid>\n\n                    <Grid size={{ xs: 5 }}>\n                        <Typography variant=\"h6\" gutterBottom align=\"center\">\n                            Order\n                        </Typography>\n                        <ReferenceField\n                            reference=\"orders\"\n                            source=\"order_id\"\n                            link={false}\n                        >\n                            <TextField\n                                source=\"reference\"\n                                align=\"center\"\n                                component=\"p\"\n                                gutterBottom\n                            />\n                        </ReferenceField>\n                    </Grid>\n                </Grid>\n                <Box\n                    sx={{\n                        margin: '10px 0',\n                    }}\n                >\n                    <ReferenceField\n                        reference=\"orders\"\n                        source=\"order_id\"\n                        link={false}\n                    >\n                        <Basket />\n                    </ReferenceField>\n                </Box>\n            </CardContent>\n        </Card>\n    );\n};\n\nconst CustomerField = () => {\n    const record = useRecordContext<Customer>();\n    return record ? (\n        <Typography>\n            {record.first_name} {record.last_name}\n            <br />\n            {record.address}\n            <br />\n            {record.city}, {record.zipcode}\n        </Typography>\n    ) : null;\n};\n\nexport default InvoiceShow;\n","import * as React from 'react';\nimport {\n    List,\n    ColumnsButton,\n    DateField,\n    ReferenceField,\n    DateInput,\n    TopToolbar,\n    ExportButton,\n    ReferenceInput,\n    FilterButton,\n    useDefaultTitle,\n    useListContext,\n    DataTable,\n} from 'react-admin';\n\nimport { type Invoice } from '../types';\nimport FullNameField from '../visitors/FullNameField';\nimport AddressField from '../visitors/AddressField';\nimport InvoiceShow from './InvoiceShow';\n\nconst listFilters = [\n    <DateInput source=\"date_gte\" alwaysOn />,\n    <DateInput source=\"date_lte\" alwaysOn />,\n    <ReferenceInput source=\"customer_id\" reference=\"customers\" />,\n    <ReferenceInput source=\"order_id\" reference=\"orders\" />,\n];\n\nconst ListActions = () => (\n    <TopToolbar>\n        <FilterButton />\n        <ColumnsButton />\n        <ExportButton />\n    </TopToolbar>\n);\n\nconst InvoicesTitle = () => {\n    const title = useDefaultTitle();\n    const { defaultTitle } = useListContext();\n    return (\n        <>\n            <title>{`${title} - ${defaultTitle}`}</title>\n            <span>{defaultTitle}</span>\n        </>\n    );\n};\n\nconst Column = DataTable.Col<Invoice>;\nconst ColumnNumber = DataTable.NumberCol<Invoice>;\n\nconst InvoiceList = () => (\n    <List\n        filters={listFilters}\n        perPage={25}\n        sort={{ field: 'date', order: 'DESC' }}\n        actions={<ListActions />}\n        title={<InvoicesTitle />}\n    >\n        <DataTable\n            rowClick=\"expand\"\n            expand={<InvoiceShow />}\n            sx={{\n                '& .onlyLarge': {\n                    display: { xs: 'none', lg: 'table-cell' },\n                },\n            }}\n        >\n            <Column source=\"id\" />\n            <Column field={DateField} source=\"date\" />\n            <Column source=\"customer_id\" className=\"onlyLarge\">\n                <ReferenceField source=\"customer_id\" reference=\"customers\">\n                    <FullNameField source=\"last_name\" />\n                </ReferenceField>\n            </Column>\n            <Column\n                source=\"address\"\n                disableSort\n                label=\"resources.invoices.fields.address\"\n            >\n                <ReferenceField\n                    source=\"customer_id\"\n                    reference=\"customers\"\n                    link={false}\n                >\n                    <AddressField />\n                </ReferenceField>\n            </Column>\n            <Column source=\"order_id\">\n                <ReferenceField source=\"order_id\" reference=\"orders\" />\n            </Column>\n            <ColumnNumber source=\"total_ex_taxes\" className=\"onlyLarge\" />\n            <ColumnNumber source=\"delivery_fees\" className=\"onlyLarge\" />\n            <ColumnNumber source=\"taxes\" className=\"onlyLarge\" />\n            <ColumnNumber source=\"total\" />\n        </DataTable>\n    </List>\n);\n\nexport default InvoiceList;\n","import InvoiceIcon from '@mui/icons-material/LibraryBooks';\n\nimport InvoiceList from './InvoiceList';\n\nexport default {\n    list: InvoiceList,\n    icon: InvoiceIcon,\n};\n","import ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport ArrowDropUpIcon from '@mui/icons-material/ArrowDropUp';\nimport {\n  Box,\n  FormControl,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Typography,\n} from '@mui/material';\nimport React from 'react';\nimport { useCurrency } from '../../hooks/useCurrency';\nimport { useCurrencyContext } from './CurrencyProvider';\n\nconst CustomArrowDropDownIcon = ({ color }: { color: string }) => (\n  <ArrowDropDownIcon sx={{ color, marginLeft: -9.5 }} />\n);\n\nconst CustomArrowDropUpIcon = ({ color }: { color: string }) => (\n  <ArrowDropUpIcon sx={{ color, marginLeft: -9.5 }} />\n);\n\ninterface CurrencySelectorProps {\n  showLabel?: boolean;\n  size?: 'small' | 'medium';\n  variant?: 'standard' | 'outlined' | 'filled';\n  minWidth?: number;\n}\n\nconst CurrencySelector: React.FC<CurrencySelectorProps> = ({\n  showLabel = false,\n  size = 'small',\n  variant = 'outlined',\n  minWidth = 80,\n}) => {\n  const { currencies } = useCurrency(); // should be of type CurrencyItem[]\n\n  // Inside your component:\n  const { currency, setCurrency } = useCurrencyContext();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleCurrencyChange = (event: SelectChangeEvent) => {\n    setCurrency(event.target.value);\n  };\n\n  const filteredCurrencies = React.useMemo(\n    () => currencies?.filter((item) => item.type === 'SELL'),\n    [currencies]\n  );\n\n  const IconComponent = React.useMemo(\n    () => () =>\n      open ? (\n        <CustomArrowDropUpIcon color={'#000'} />\n      ) : (\n        <CustomArrowDropDownIcon color={'#000'} />\n      ),\n    [open]\n  );\n\n  return (\n    <Box display='flex' alignItems='center' sx={{ mt: -0.4 }}>\n      {showLabel && (\n        <Typography variant='body2' sx={{ mr: 0, color: '#7A6A55' }}>\n          Currency:\n        </Typography>\n      )}\n      <FormControl size={size} sx={{ minWidth }}>\n        <Select\n          open={open}\n          onOpen={() => setOpen(true)}\n          onClose={() => setOpen(false)}\n          IconComponent={IconComponent}\n          value={currency}\n          onChange={handleCurrencyChange}\n          variant={variant}\n          sx={{\n            cursor: 'pointer',\n            '& .MuiSelect-select': {\n              py: size === 'small' ? 0.5 : 1,\n              px: size === 'small' ? -2 : 2,\n              color: '#000',\n            },\n            '& .MuiOutlinedInput-notchedOutline': {\n              borderColor: 'transparent',\n            },\n            '&:hover .MuiOutlinedInput-notchedOutline': {\n              borderColor: 'transparent',\n            },\n            '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n              borderColor: 'transparent',\n            },\n          }}\n        >\n          {filteredCurrencies?.map((currency) => (\n            <MenuItem key={currency.id} value={currency.ccy}>\n              <Box display='flex' alignItems='center' gap={1}>\n                <Typography>{currency.ccy}</Typography>\n              </Box>\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Box>\n  );\n};\n\nexport default CurrencySelector;\n","import { LoadingIndicator, LocalesMenuButton } from 'react-admin';\nimport CurrencySelector from '../components/CurrencySelector/CurrencySelector';\n\nexport const AppBarToolbar = () => (\n  <div style={{ display: 'flex', alignItems: 'center', gap: '16px' }}>\n    <CurrencySelector />\n    <LocalesMenuButton />\n    <LoadingIndicator />\n  </div>\n);\n","import { Box, Theme, useMediaQuery } from '@mui/material';\nimport { AppBar, TitlePortal } from 'react-admin';\n\nimport { AppBarToolbar } from './AppBarToolbar';\n\nconst CustomAppBar = () => {\n  const isLargeEnough = useMediaQuery<Theme>((theme) =>\n    theme.breakpoints.up('sm')\n  );\n  return (\n    <AppBar color='secondary' toolbar={<AppBarToolbar />}>\n      <TitlePortal />\n      {isLargeEnough && <Box component='span' sx={{ flex: 1 }} />}\n    </AppBar>\n  );\n};\n\nexport default CustomAppBar;\n","import { lazy } from 'react';\nimport {\n  Create,\n  ImageField,\n  ImageInput,\n  required,\n  SimpleForm,\n  TextInput,\n} from 'react-admin';\nimport { uploadImageToCloudinary } from '../utils/cloudinaryUpload';\nimport { Divider } from '@mui/material';\n\nconst RichTextInput = lazy(() =>\n  import('ra-input-rich-text').then((m) => ({ default: m.RichTextInput }))\n);\n\nexport const BlogCreate = () => (\n  <Create>\n    <SimpleForm>\n      <TextInput source='title' validate={[required()]} fullWidth />\n\n      <Divider sx={{ my: 0.2 }} />\n\n      <ImageInput source='image' label='Blog Image'>\n        <ImageField source='src' title='title' />\n      </ImageInput>\n\n      <Divider sx={{ my: 0.2 }} />\n\n      <div style={{ alignItems: 'center', gap: 8 }}>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            gap: 8,\n          }}\n        >\n          <button\n            type='button'\n            onClick={async (e) => {\n              e.preventDefault();\n              const input = document.createElement('input');\n              input.type = 'file';\n              input.accept = 'image/*';\n              input.onchange = async () => {\n                if (input.files && input.files[0]) {\n                  try {\n                    const url = await uploadImageToCloudinary(input.files[0]);\n                    // Copy image URL to clipboard\n                    await navigator.clipboard.writeText(url);\n                    // Show alert notification\n                    alert('Image link copied to clipboard!');\n                    // Find the contenteditable div of RichTextInput\n                    const rte = document.querySelector(\n                      '[contenteditable=\"true\"][role=\"textbox\"]'\n                    );\n                    if (rte) {\n                      // Insert image at the caret position\n                      const img = document.createElement('img');\n                      img.src = url;\n                      img.alt = 'uploaded image';\n                      // Insert image at caret\n                      const sel = window.getSelection();\n                      if (sel && sel.rangeCount > 0) {\n                        const range = sel.getRangeAt(0);\n                        range.collapse(false);\n                        range.insertNode(img);\n                        // Move caret after the image\n                        range.setStartAfter(img);\n                        range.setEndAfter(img);\n                        sel.removeAllRanges();\n                        sel.addRange(range);\n                      } else {\n                        rte.appendChild(img);\n                      }\n                      // Trigger input event to update form value\n                      rte.dispatchEvent(new Event('input', { bubbles: true }));\n                    }\n                  } catch (err) {\n                    alert('Failed to upload image');\n                  }\n                }\n              };\n              input.click();\n            }}\n            style={{\n              marginRight: 8,\n              cursor: 'pointer',\n              padding: '8px 16px',\n              backgroundColor: '#3f51b5',\n              color: '#fff',\n              border: 'none',\n              borderRadius: '4px',\n            }}\n          >\n            Upload Image\n          </button>\n        </div>\n        <RichTextInput source='description' validate={[required()]} fullWidth />\n      </div>\n\n      {/* <TextInput source='video_url' fullWidth /> */}\n      {/* <NumberInput source='count' defaultValue={0} /> */}\n    </SimpleForm>\n  </Create>\n);\n","import { lazy, useEffect } from 'react';\nimport {\n  DeleteButton,\n  Edit,\n  FormDataConsumer,\n  ImageField,\n  ImageInput,\n  NumberInput,\n  required,\n  ShowButton,\n  SimpleForm,\n  TextInput,\n  TopToolbar,\n  useRefresh,\n} from 'react-admin';\nimport { useImageStore } from '../store/imageStore';\nimport { useLocation } from 'react-router';\nimport { uploadImageToCloudinary } from '../utils/cloudinaryUpload';\nimport { Divider } from '@mui/material';\n\nconst RichTextInput = lazy(() =>\n  import('ra-input-rich-text').then((m) => ({ default: m.RichTextInput }))\n);\n\nconst BlogEditActions = () => (\n  <TopToolbar>\n    <ShowButton />\n    <DeleteButton />\n  </TopToolbar>\n);\n\nexport const BlogEdit = () => {\n  const { selectImage, setSelectImage } = useImageStore(); // Use the store\n  const refresh = useRefresh();\n\n  // Clear selectImage when route changes\n  const location = useLocation();\n  useEffect(() => {\n    setSelectImage(null);\n    refresh();\n  }, [location.pathname, setSelectImage]);\n\n  return (\n    <Edit actions={<BlogEditActions />}>\n      <SimpleForm>\n        {/* <TextField source='id' /> */}\n        <TextInput source='title' validate={[required()]} fullWidth />\n\n        <Divider sx={{ my: 0.2 }} />\n\n        <ImageInput\n          source='image'\n          label='Blog Image'\n          onChange={(e) => {\n            setSelectImage(e);\n          }}\n        >\n          <ImageField source='src' title='title' />\n        </ImageInput>\n        <ImageField\n          source='image_url'\n          label='Current Image'\n          sx={{\n            display: selectImage !== null ? 'none' : 'block',\n          }}\n        />\n\n        <Divider sx={{ my: 0.2 }} />\n\n        <div style={{ alignItems: 'center', gap: 8 }}>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              gap: 8,\n            }}\n          >\n            <button\n              type='button'\n              onClick={async (e) => {\n                e.preventDefault();\n                const input = document.createElement('input');\n                input.type = 'file';\n                input.accept = 'image/*';\n                input.onchange = async () => {\n                  if (input.files && input.files[0]) {\n                    try {\n                      const url = await uploadImageToCloudinary(input.files[0]);\n                      // Copy image URL to clipboard\n                      await navigator.clipboard.writeText(url);\n                      // Show alert notification\n                      alert('Image link copied to clipboard!');\n                      // Find the contenteditable div of RichTextInput\n                      const rte = document.querySelector(\n                        '[contenteditable=\"true\"][role=\"textbox\"]'\n                      );\n                      if (rte) {\n                        // Insert image at the caret position\n                        const img = document.createElement('img');\n                        img.src = url;\n                        img.alt = 'uploaded image';\n                        // Insert image at caret\n                        const sel = window.getSelection();\n                        if (sel && sel.rangeCount > 0) {\n                          const range = sel.getRangeAt(0);\n                          range.collapse(false);\n                          range.insertNode(img);\n                          // Move caret after the image\n                          range.setStartAfter(img);\n                          range.setEndAfter(img);\n                          sel.removeAllRanges();\n                          sel.addRange(range);\n                        } else {\n                          rte.appendChild(img);\n                        }\n                        // Trigger input event to update form value\n                        rte.dispatchEvent(\n                          new Event('input', { bubbles: true })\n                        );\n                      }\n                    } catch (err) {\n                      alert('Failed to upload image');\n                    }\n                  }\n                };\n                input.click();\n              }}\n              style={{\n                marginRight: 8,\n                cursor: 'pointer',\n                padding: '8px 16px',\n                backgroundColor: '#3f51b5',\n                color: '#fff',\n                border: 'none',\n                borderRadius: '4px',\n              }}\n            >\n              Upload Image\n            </button>\n          </div>\n          <RichTextInput\n            source='description'\n            validate={[required()]}\n            fullWidth\n          />\n        </div>\n\n        <NumberInput source='count' />\n        {/* <TextInput source='video_url' fullWidth /> */}\n        {/* <DateField source='created' /> */}\n        {/* <DateField source='updated' /> */}\n\n        <h3>Preview</h3>\n        <FormDataConsumer>\n          {({ formData }) => (\n            <div\n              style={{\n                marginTop: 2,\n                padding: 16,\n                border: '1px solid #ccc',\n                borderRadius: 8,\n              }}\n            >\n              <h2>{formData.title}</h2>\n              {formData.image_url && (\n                <img\n                  src={formData.image_url}\n                  alt='Preview'\n                  style={{ marginTop: 16, maxWidth: '100%', height: 'auto' }}\n                />\n              )}\n              <div dangerouslySetInnerHTML={{ __html: formData.description }} />\n            </div>\n          )}\n        </FormDataConsumer>\n      </SimpleForm>\n    </Edit>\n  );\n};\n","import { Avatar, Typography } from '@mui/material';\nimport {\n  BulkDeleteButton,\n  CreateButton,\n  DataTable,\n  DateField,\n  DeleteButton,\n  EditButton,\n  ExportButton,\n  FilterButton,\n  List,\n  NumberInput,\n  SearchInput,\n  TextInput,\n  TopToolbar,\n  useRecordContext\n} from 'react-admin';\n\nexport interface Blogs {\n  collectionId: string;\n  collectionName: string;\n  id: string;\n  image_url: string;\n  title: string;\n  description: string;\n  video_url: string;\n  count: number;\n  created: string;\n  updated: string;\n}\n\nconst DescriptionField = () => {\n  const record = useRecordContext();\n  if (!record?.description) return null;\n\n  // Strip HTML tags and limit text length for list view\n  const stripHtml = (html: string) => {\n    const tmp = document.createElement('DIV');\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || '';\n  };\n\n  const plainText = stripHtml(record.description);\n  const truncatedText =\n    plainText.length > 100 ? plainText.substring(0, 100) + '...' : plainText;\n\n  return (\n    <Typography\n      variant='body2'\n      sx={{\n        maxWidth: '200px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n      }}\n    >\n      {truncatedText}\n    </Typography>\n  );\n};\n\nconst blogFilters = [\n  <SearchInput source='q' alwaysOn />,\n  <TextInput source='title' />,\n  <TextInput source='description' />,\n  <NumberInput source='count' />,\n];\n\nconst BlogListActions = () => (\n  <TopToolbar>\n    <FilterButton />\n    <CreateButton />\n    <ExportButton />\n  </TopToolbar>\n);\n\nconst BlogBulkActions = () => <BulkDeleteButton />;\n\nconst ImageUrlField = (record: Blogs) => {\n  if (!record?.image_url) return null;\n\n  return (\n    <Avatar\n      src={record.image_url}\n      alt={record.collectionName}\n      sx={{ width: 32, height: 32 }}\n    />\n  );\n};\n\nconst Column = DataTable.Col<Blogs>;\n\nexport const BlogList = () => (\n  <List\n    filters={blogFilters}\n    actions={<BlogListActions />}\n    sort={{ field: 'created', order: 'DESC' }}\n    perPage={25}\n  >\n    <DataTable bulkActionButtons={<BlogBulkActions />} rowClick='edit'>\n      <Column source='image_url' label='Image' render={ImageUrlField} />\n      {/* <Column source='id' /> */}\n      <Column source='title' />\n      <Column source='description' render={DescriptionField} />\n      {/* <UrlField source='video_url' /> */}\n      <Column source='count' />\n      <Column\n        source='created'\n        label='Created'\n        render={(record) => <DateField source='created' record={record} showTime />}\n      />\n      <Column\n        source='updated'\n        label='Updated'\n        render={(record) => <DateField source='updated' record={record} showTime />}\n      />\n      <Column\n        source='edit'\n        field={DateField}\n        label='Edit'\n        render={EditButton}\n      />\n      <Column\n        source='delete'\n        field={DateField}\n        label='Delete'\n        render={DeleteButton}\n      />\n    </DataTable>\n  </List>\n);\n","import {\n  DateField,\n  DeleteButton,\n  EditButton,\n  RichTextField,\n  Show,\n  SimpleShowLayout,\n  TextField,\n  TopToolbar,\n  UrlField,\n} from 'react-admin';\n\n// Removed RichTextField import because 'ra-input-rich-text' does not export RichTextField.\n\nconst BlogShowActions = () => (\n  <TopToolbar>\n    <EditButton />\n    <DeleteButton />\n  </TopToolbar>\n);\n\nexport const BlogShow = () => (\n  <Show actions={<BlogShowActions />}>\n    <SimpleShowLayout>\n      <TextField source='id' />\n      <TextField source='title' />\n      <RichTextField source='description' />\n      <TextField source='title' />\n      <TextField source='description' />\n      <UrlField source='image_url' />\n      <DateField source='created' />\n      <DateField source='updated' />\n    </SimpleShowLayout>\n  </Show>\n);\n","import DescriptionIcon from '@mui/icons-material/Description';\nimport { BlogCreate } from './BlogCreate';\nimport { BlogEdit } from './BlogEdit';\nimport { BlogList } from './BlogList';\nimport { BlogShow } from './BlogShow';\n\nexport default {\n  list: BlogList,\n  create: BlogCreate,\n  edit: BlogEdit,\n  show: BlogShow,\n  icon: DescriptionIcon,\n};\n","import { Download } from '@mui/icons-material';\nimport { Avatar, Button, FormControlLabel, Switch } from '@mui/material';\nimport * as React from 'react';\nimport {\n  ColumnsButton,\n  CreateButton,\n  DataTable,\n  EmailField,\n  List,\n  SearchInput,\n  SelectInput,\n  TopToolbar,\n  useDataProvider,\n  useDefaultTitle,\n  useListContext,\n  useNotify,\n  useRefresh,\n  useUpdate,\n} from 'react-admin';\nimport * as XLSX from 'xlsx';\nimport { Customer } from '../dataProvider/customersDataProvider';\n\nconst customerFilters = [\n  <SearchInput key='q' source='q' alwaysOn />,\n  <SelectInput\n    key='verified'\n    source='verified'\n    choices={[\n      { id: '', name: 'All Status' },\n      { id: true, name: 'Verified' },\n      { id: false, name: 'Unverified' },\n    ]}\n    label='Status'\n    emptyText='All Status'\n  />,\n  <SelectInput\n    key='has_ordered'\n    source='has_ordered'\n    choices={[\n      { id: '', name: 'All Customers' },\n      { id: true, name: 'Has Orders' },\n      { id: false, name: 'No Orders' },\n    ]}\n    label='Order Status'\n    emptyText='All Customers'\n  />,\n  <SelectInput\n    key='emailVisibility'\n    source='emailVisibility'\n    choices={[\n      { id: '', name: 'All Email Visibility' },\n      { id: true, name: 'Email Visible' },\n      { id: false, name: 'Email Hidden' },\n    ]}\n    label='Email Visibility'\n    emptyText='All Email Visibility'\n  />,\n  <SearchInput\n    key='email'\n    source='email'\n    label='Search by Email'\n    placeholder='Enter email address'\n  />,\n];\n\nconst CustomerListActions = () => {\n  const dataProvider = useDataProvider();\n  const notify = useNotify();\n\n  const handleExportExcel = async () => {\n    try {\n      const { data } = await dataProvider.getList('customers', {\n        pagination: { page: 1, perPage: 1000 },\n        sort: { field: 'created', order: 'DESC' },\n        filter: {},\n      });\n\n      const exportData = data.map((customer: Customer) => ({\n        Name: customer.name,\n        Username: customer.username,\n        Email: customer.email,\n        Phone: customer.phone_number,\n        Verified: customer.verified ? 'Yes' : 'No',\n        Created: new Date(customer.created).toLocaleDateString(),\n        Updated: new Date(customer.updated).toLocaleDateString(),\n      }));\n\n      const worksheet = XLSX.utils.json_to_sheet(exportData);\n      const workbook = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(workbook, worksheet, 'Customers');\n\n      XLSX.writeFile(\n        workbook,\n        `customers_export_${new Date().toISOString().split('T')[0]}.xlsx`\n      );\n      notify('Excel file exported successfully', { type: 'success' });\n    } catch (error) {\n      notify('Failed to export Excel file', { type: 'error' });\n    }\n  };\n\n  return (\n    <TopToolbar>\n      <Button\n        onClick={handleExportExcel}\n        startIcon={<Download />}\n        variant='outlined'\n        size='small'\n      >\n        Export Excel\n      </Button>\n    </TopToolbar>\n  );\n};\n\nconst CustomerTitle = () => {\n  const title = useDefaultTitle();\n  const { defaultTitle } = useListContext();\n  return (\n    <>\n      <title>{`${title} - ${defaultTitle}`}</title>\n      <span>{defaultTitle}</span>\n    </>\n  );\n};\n\nconst Column = DataTable.Col<Customer>;\n\nconst AvatarField = (record: Customer) => {\n  if (!record?.avatar) return null;\n\n  return (\n    <Avatar\n      src={record.avatar}\n      alt={record.name}\n      sx={{ width: 32, height: 32 }}\n    />\n  );\n};\n\nconst AccountStatusField = ({ record }: { record?: Customer }) => {\n  const [update] = useUpdate();\n  const notify = useNotify();\n  const refresh = useRefresh();\n\n  const handleStatusChange = async (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    if (!record) return;\n\n    const newStatus = event.target.checked;\n    try {\n      await update('customers', {\n        id: record.id,\n        data: { ...record, verified: newStatus },\n        previousData: record,\n      });\n      notify(`Account status updated to ${newStatus ? 'Active' : 'Inactive'}`, {\n        type: 'success',\n      });\n      refresh();\n    } catch (error) {\n      notify('Error updating account status', { type: 'error' });\n    }\n  };\n\n  return (\n    <FormControlLabel\n      control={\n        <Switch\n          checked={record?.verified || false}\n          onChange={handleStatusChange}\n          size='small'\n          color='primary'\n        />\n      }\n      label={record?.verified ? 'Active' : 'Inactive'}\n      labelPlacement='start'\n      sx={{ margin: 0 }}\n    />\n  );\n};\n\nconst CustomerList = () => {\n  return (\n    <List\n      filters={customerFilters}\n      sort={{ field: 'created', order: 'DESC' }}\n      perPage={25}\n      actions={<CustomerListActions />}\n      title={<CustomerTitle />}\n    >\n      <DataTable\n        rowClick='show'\n        sx={{\n          '& .column-avatar': {\n            width: '48px',\n          },\n          '& .column-phone_number': {\n            md: { display: 'none' },\n            lg: { display: 'table-cell' },\n          },\n        }}\n      >\n        <Column source='avatar' render={AvatarField} />\n        <Column source='name' label='Name' />\n        <Column source='username' label='Username' />\n        <Column source='email' field={EmailField} />\n        <Column source='phone_number' label='Phone' />\n      </DataTable>\n    </List>\n  );\n};\n\nexport default CustomerList;\n","import {\n  Show,\n  SimpleShowLayout,\n  TextField,\n  EmailField,\n  DateField,\n  useRecordContext,\n  RecordContextProvider,\n  BooleanField,\n  Labeled,\n} from 'react-admin';\nimport {\n  Typography,\n  Box,\n  Avatar,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Paper,\n} from '@mui/material';\n\n// A custom component to display the customer's avatar and basic info\nconst CustomerTitle = () => {\n  const record = useRecordContext();\n  if (!record) return null;\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 2 }}>\n      <Avatar src={record.avatar} sx={{ width: 60, height: 60 }} />\n      <Box>\n        <Typography variant=\"h6\">{record.name}</Typography>\n        <Typography color=\"textSecondary\" variant=\"body2\">\n          @{record.username}\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nconst AddressField = () => {\n  const record = useRecordContext();\n  if (!record || !record.address) return null;\n\n  const { address, province, district } = record;\n  const isInternational = address.is_international;\n\n  const addressRows = [\n    { label: 'Shipping Name', value: address.shipping_name },\n    { label: 'Address Line 1', value: address.address_line_1 },\n    { label: 'Address Line 2', value: address.address_line_2 },\n  ];\n\n  if (isInternational) {\n    addressRows.push(\n      { label: 'City', value: address.city },\n      { label: 'State/Region', value: address.state_region },\n      { label: 'Postal Code', value: address.postal_code },\n      { label: 'Country', value: address.country_name }\n    );\n  } else {\n    addressRows.push(\n      { label: 'Village', value: address.village },\n      { label: 'Province', value: province },\n      { label: 'District', value: district }\n    );\n  }\n\n  // addressRows.push({ label: 'International', value: <BooleanField source=\"address.is_international\" /> });\n\n  return (\n    <Paper elevation={2} sx={{ width: '100%', mt: 2 }}>\n      <Table sx={{ '& .MuiTableCell-root': { padding: '8px' } }}>\n        <TableBody>\n          {addressRows.map((row) => (\n            <TableRow key={row.label}>\n              <TableCell component=\"th\" scope=\"row\" sx={{ fontWeight: 'bold', width: '11%', textAlign: 'right' }}>\n                {row.label}:\n              </TableCell>\n              <TableCell>{row.value}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n};\n\nconst CustomerShowLayout = () => {\n  const record = useRecordContext();\n  if (!record) return null;\n\n  // Flatten the nested address, province, and district data for easier use\n  const transformedRecord = {\n    ...record,\n    address: record.expand?.address_id,\n    province: record.expand?.address_id?.expand?.province_id?.name,\n    district: record.expand?.address_id?.expand?.district_id?.name,\n  };\n\n  return (\n    // Provide the transformed record to all child components\n    <RecordContextProvider value={transformedRecord}>\n      <SimpleShowLayout>\n        <CustomerTitle />\n\n        <Typography variant=\"h6\" gutterBottom>\n          Personal Information\n        </Typography>\n        <TextField source=\"email\" />\n        <TextField source=\"phone_number\" />\n\n        {/* Display address only if it exists */}\n        {transformedRecord.address && (\n          <>\n            <Typography variant=\"h6\" gutterBottom sx={{ mt: 2 }}>\n              Address\n            </Typography>\n            <AddressField />\n          </>\n        )}\n\n        <Typography variant=\"h6\" gutterBottom sx={{ mt: 2 }}>\n          Account History\n        </Typography>\n        <DateField source=\"created\" label=\"Created at\" showTime />\n        <DateField source=\"updated\" label=\"Last updated\" showTime />\n      </SimpleShowLayout>\n    </RecordContextProvider>\n  );\n};\n\nconst CustomerShow = () => (\n  <Show>\n    <CustomerShowLayout />\n  </Show>\n);\n\nexport default CustomerShow;","import { People } from '@mui/icons-material';\nimport CustomerList from './CustomerList';\nimport CustomerShow from './CustomerShow';\n\nexport default {\n  list: CustomerList,\n  show: CustomerShow,\n  icon: People,\n};\n","import {\n  ExpandLess,\n  ExpandMore,\n  LocationOn,\n  Person,\n  Receipt,\n} from '@mui/icons-material';\nimport {\n  Alert,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Chip,\n  Collapse,\n  Divider,\n  IconButton,\n  Paper,\n  Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tabs,\n  TextField,\n  Theme,\n  Typography,\n  useMediaQuery,\n} from '@mui/material';\nimport * as React from 'react';\nimport { Fragment, useCallback, useEffect, useState } from 'react';\nimport { DateField, Loading, useTranslate } from 'react-admin';\nimport * as XLSX from 'xlsx';\n\nimport pb from '../api/pocketbase';\nimport { useCurrencyContext } from '../components/CurrencySelector/CurrencyProvider'; // Import useCurrencyContext\nimport {\n  PBAddress,\n  PBCustomer,\n  PBOrder,\n  PBOrderItem,\n  PBProduct,\n} from '../model/OrderList';\n\nconst OrderListFilter = ({\n  setSearchTerm,\n}: {\n  setSearchTerm: (value: string) => void;\n}) => {\n  const [searchTerm, setSearchTermState] = useState('');\n\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTermState(event.target.value);\n    setSearchTerm(event.target.value);\n  };\n\n  return (\n    <Box sx={{ p: 2, display: 'flex', alignItems: 'center', mb: -1, mt: -2 }}>\n      <TextField\n        label='Search'\n        variant='outlined'\n        onChange={handleSearch}\n        value={searchTerm}\n        fullWidth\n      />\n    </Box>\n  );\n};\n\nexport const OrderList = () => {\n  const translate = useTranslate();\n\n  return (\n    <Box sx={{ p: 2 }}>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 2,\n        }}\n      >\n        <Typography variant='h5' component='h5'>\n          {translate('pos.orders_management')}\n        </Typography>\n      </Box>\n      <TabbedDatagrid />\n    </Box>\n  );\n};\n\nconst tabs = [\n  { id: 'pending', name: 'pending' },\n  { id: 'purchased', name: 'purchased' },\n  { id: 'cancel', name: 'cancel' },\n];\n\ninterface OrderDetailsCache {\n    [key: string]: {\n        orderItems: PBOrderItem[];\n        customer: PBCustomer | null;\n        address: PBAddress | null;\n        products: { [key: string]: PBProduct };\n        provinceName: string | null;\n        districtName: string | null;\n    }\n}\n\nconst TabbedDatagrid = () => {\n  const [activeTab, setActiveTab] = useState<string>('pending');\n  const [orderCounts, setOrderCounts] = useState<{ [key: string]: number }>({});\n  const [searchTerm, setSearchTerm] = useState('');\n  const { currency } = useCurrencyContext();\n  const isXSmall = useMediaQuery<Theme>((theme) =>\n    theme.breakpoints.down('sm')\n  );\n\n  // Fetch order counts for each status\n  useEffect(() => {\n    const fetchOrderCounts = async () => {\n      try {\n        const counts: { [key: string]: number } = {};\n\n        for (const tab of tabs) {\n          const response = await pb.collection('orders').getList(1, 1, {\n            filter: `status = \"${tab.id}\"`,\n          });\n          counts[tab.id] = response.totalItems;\n        }\n\n        setOrderCounts(counts);\n      } catch (error) {\n        console.error('Error fetching order counts:', error);\n      }\n    };\n\n    fetchOrderCounts();\n  }, []);\n\n  const handleChange = useCallback(\n    (event: React.SyntheticEvent, value: string) => {\n      setActiveTab(value);\n\n      if (isXSmall) {\n        const tabsContainer = document.querySelector('[role=\"tablist\"]');\n        if (tabsContainer) {\n          tabsContainer.scrollIntoView({ behavior: 'smooth', block: 'start' });\n        }\n      }\n    },\n    [isXSmall]\n  );\n\n  const downloadExcel = async () => {\n    try {\n      let filter = `status = \"${activeTab}\"`;\n      if (searchTerm) {\n        const searchFilter = `(reference_id ~ \"${searchTerm}\" || customer_name ~ \"${searchTerm}\" || phone_number ~ \"${searchTerm}\" || address ~ \"${searchTerm}\")`;\n        filter += ` && ${searchFilter}`;\n      }\n\n      const records = await pb.collection('orders').getFullList({\n        filter: filter,\n        sort: '-created',\n      });\n\n      const data = await Promise.all(\n        records.map(async (order: any) => {\n          const itemsResponse = await pb\n            .collection('order_items')\n            .getList(1, 50, {\n              filter: `order_id = \"${order.id}\"`,\n            });\n          const orderItems = itemsResponse.items as unknown as PBOrderItem[];\n\n          const totals = orderItems.reduce(\n            (totals, item) => {\n              return {\n                lak: totals.lak + item.quantity * item.price_lak,\n                usd: totals.usd + item.quantity * item.price_usd,\n                thb: totals.thb + item.quantity * item.price_thb,\n              };\n            },\n            { lak: 0, usd: 0, thb: 0 }\n          );\n\n          let total = 0;\n          switch (currency) {\n            case 'LAK':\n              total = totals.lak;\n              break;\n            case 'USD':\n              total = totals.usd;\n              break;\n            case 'THB':\n              total = totals.thb;\n              break;\n          }\n\n          return {\n            Date: new Date(order.created).toLocaleString(),\n            Reference: order.reference_id,\n            Customer: order.customer_name,\n            Phone: order.phone_number,\n            Address: order.address,\n            Status: order.status,\n            Total: total,\n            Currency: currency,\n          };\n        })\n      );\n\n      const ws = XLSX.utils.json_to_sheet(data);\n      const wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'Orders');\n      XLSX.writeFile(wb, `orders_${activeTab}.xlsx`);\n    } catch (error) {\n      console.error('Error downloading Excel:', error);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\n        <OrderListFilter setSearchTerm={setSearchTerm} />\n        <Button\n          variant='contained'\n          onClick={downloadExcel}\n          sx={{ m: 2, ml: 'auto', height: '50px' }}\n        >\n          Export\n        </Button>\n      </Box>\n      <Tabs\n        variant='scrollable'\n        scrollButtons='auto'\n        value={activeTab}\n        indicatorColor='primary'\n        onChange={(event, value) => handleChange(event, value)}\n      >\n        {tabs.map((choice) => (\n          <Tab\n            key={choice.id}\n            label={\n              <span>\n                {choice.name} ({orderCounts[choice.id] || 0})\n              </span>\n            }\n            value={choice.id}\n          />\n        ))}\n      </Tabs>\n      <Divider />\n      <br />\n      <OrdersTable status={activeTab} searchTerm={searchTerm} />\n    </Fragment>\n  );\n};\n\n// Order Detail Component\nconst OrderDetail: React.FC<{ order: PBOrder, details: any, onToggle: () => void, open: boolean }> = ({ order, details, onToggle, open }) => {\n  const { currency } = useCurrencyContext();\n\n  const calculateTotals = () => {\n    if (!details || !details.orderItems) return { lak: 0, usd: 0, thb: 0 };\n    return details.orderItems.reduce(\n      (totals:any, item:any) => {\n        return {\n          lak: totals.lak + item.quantity * item.price_lak,\n          usd: totals.usd + item.quantity * item.price_usd,\n          thb: totals.thb + item.quantity * item.price_thb,\n        };\n      },\n      { lak: 0, usd: 0, thb: 0 }\n    );\n  };\n\n  const totals = calculateTotals();\n\n  const formatCurrency = (amount: number, currencyType: string) => {\n    switch (currencyType) {\n      case 'LAK':\n        return `₭${amount.toLocaleString()}`;\n      case 'USD':\n        return `$${amount.toFixed(2)}`;\n      case 'THB':\n        return `฿${amount.toFixed(2)}`;\n      default:\n        return amount.toString();\n    }\n  };\n\n  const getCurrentTotal = () => {\n    switch (currency) {\n      case 'LAK':\n        return formatCurrency(totals.lak, 'LAK');\n      case 'USD':\n        return formatCurrency(totals.usd, 'USD');\n      case 'THB':\n        return formatCurrency(totals.thb, 'THB');\n      default:\n        return formatCurrency(totals.usd, 'USD');\n    }\n  };\n\n  return (\n    <>\n      <TableRow>\n        <TableCell>\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n            <IconButton onClick={onToggle} size='small'>\n              {open ? <ExpandLess /> : <ExpandMore />}\n            </IconButton>\n            <DateField source='created' record={order} showTime />\n          </Box>\n        </TableCell>\n        <TableCell>{order.reference_id}</TableCell>\n        <TableCell>{order.customer_name}</TableCell>\n        <TableCell>{order.phone_number}</TableCell>\n        <TableCell>{order.address}</TableCell>\n        <TableCell>\n          <Chip\n            label={order.status}\n            color={\n              order.status === 'pending'\n                ? 'warning'\n                : order.status === 'purchased'\n                ? 'success'\n                : 'error'\n            }\n            size='small'\n          />\n        </TableCell>\n        <TableCell>{getCurrentTotal()}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell colSpan={7} sx={{ paddingBottom: 0, paddingTop: 0 }}>\n          <Collapse in={open} timeout='auto' unmountOnExit>\n            <Box sx={{ margin: 2 }}>\n              {!details || !details.customer ? <Loading /> : (\n                <Box\n                  sx={{\n                    display: 'flex',\n                    flexDirection: { xs: 'column', md: 'row' },\n                    gap: 3,\n                    flexWrap: 'wrap',\n                  }}\n                >\n                  {/* Order Information Section */}\n                  <Box sx={{ width: { xs: '100%', md: '33%' } }}>\n                    <Card>\n                      <CardContent>\n                        <Typography variant='h6' gutterBottom>\n                          <Receipt sx={{ mr: 1, verticalAlign: 'middle' }} />\n                          Order Information\n                        </Typography>\n                        <Typography variant='body2' color='text.secondary'>\n                          <strong>Reference:</strong> {order.reference_id}\n                        </Typography>\n                        <Typography variant='body2' color='text.secondary'>\n                          <strong>Created:</strong>{' '}\n                          {new Date(order.created).toLocaleString()}\n                        </Typography>\n                        <Typography variant='body2' color='text.secondary'>\n                          <strong>Status:</strong> {order.status}\n                        </Typography>\n                        {order.remark && (\n                          <Typography variant='body2' color='text.secondary'>\n                            <strong>Remark:</strong> {order.remark}\n                          </Typography>\n                        )}\n                        {details.customer && (\n                          <Box sx={{ mt: 2 }}>\n                            <Typography variant='subtitle2' gutterBottom>\n                              <Person sx={{ mr: 1, verticalAlign: 'middle' }} />\n                              Customer Details\n                            </Typography>\n                            <Typography variant='body2' color='text.secondary'>\n                              <strong>Name:</strong>{' '}\n                              {details.customer.name || details.customer.username}\n                            </Typography>\n                            <Typography variant='body2' color='text.secondary'>\n                              <strong>Email:</strong> {details.customer.email}\n                            </Typography>\n                            <Typography variant='body2' color='text.secondary'>\n                              <strong>Phone:</strong> {details.customer.phone_number}\n                            </Typography>\n                            <Typography variant='body2' color='text.secondary'>\n                              <strong>Verified:</strong>{' '}\n                              {details.customer.verified ? 'Yes' : 'No'}\n                            </Typography>\n                          </Box>\n                        )}\n                        {details.address && (\n                          <Box sx={{ mt: 2 }}>\n                            <Typography variant='subtitle2' gutterBottom>\n                              <LocationOn\n                                sx={{ mr: 1, verticalAlign: 'middle' }}\n                              />\n                              Shipping Address\n                            </Typography>\n                            <Typography variant='body2' color='text.secondary'>\n                              <strong>Name:</strong> {details.address.shipping_name}\n                            </Typography>\n                            <Typography variant='body2' color='text.secondary'>\n                              <strong>Village:</strong> {details.address.village}\n                            </Typography>\n                            <Typography variant='body2' color='text.secondary'>\n                              <strong>District:</strong>{' '}\n                              {details.districtName || details.address.district_id}\n                            </Typography>\n                            <Typography variant='body2' color='text.secondary'>\n                              <strong>Province:</strong>{' '}\n                              {details.provinceName || details.address.province_id}\n                            </Typography>\n                          </Box>\n                        )}\n                      </CardContent>\n                    </Card>\n                  </Box>\n\n                  {/* Order Items Section */}\n                  <Box sx={{ width: { xs: '100%', md: '42%' } }}>\n                    <Card>\n                      <CardContent>\n                        <Typography variant='h6' gutterBottom>\n                          Order Items\n                        </Typography>\n                        {details.orderItems.length > 0 ? (\n                          <TableContainer>\n                            <Table size='small'>\n                              <TableHead>\n                                <TableRow>\n                                  <TableCell>Product</TableCell>\n                                  <TableCell align='right'>Qty</TableCell>\n                                  <TableCell align='right'>Price</TableCell>\n                                  <TableCell align='right'>Total</TableCell>\n                                </TableRow>\n                              </TableHead>\n                              <TableBody>\n                                {details.orderItems.map((item:any) => {\n                                  const product = details.products[item.product_id];\n                                  const getPrice = () => {\n                                    switch (currency) {\n                                      case 'LAK':\n                                        return item.price_lak;\n                                      case 'USD':\n                                        return item.price_usd;\n                                      case 'THB':\n                                        return item.price_thb;\n                                      default:\n                                        return item.price_usd;\n                                    }\n                                  };\n                                  const price = getPrice();\n                                  const total = price * item.quantity;\n\n                                  return (\n                                    <TableRow key={item.id}>\n                                      <TableCell>\n                                        {product?.name || item.product_name}\n                                      </TableCell>\n                                      <TableCell align='right'>\n                                        {item.quantity}\n                                      </TableCell>\n                                      <TableCell align='right'>\n                                        {formatCurrency(price, currency)}\n                                      </TableCell>\n                                      <TableCell align='right'>\n                                        {formatCurrency(total, currency)}\n                                      </TableCell>\n                                    </TableRow>\n                                  );\n                                })}\n                              </TableBody>\n                            </Table>\n                          </TableContainer>\n                        ) : (\n                          <Typography variant='body2' color='text.secondary'>\n                            No items found\n                          </Typography>\n                        )}\n                      </CardContent>\n                    </Card>\n                  </Box>\n\n                  {/* Order Totals Section */}\n                  <Box sx={{ width: { xs: '100%', md: '25%' } }}>\n                    <Card>\n                      <CardContent>\n                        <Typography variant='h6' gutterBottom>\n                          Order Totals\n                        </Typography>\n                        <Box\n                          sx={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                            gap: 1,\n                          }}\n                        >\n                          <Box\n                            sx={{\n                              display: 'flex',\n                              justifyContent: 'space-between',\n                            }}\n                          >\n                            <Typography variant='body2'>LAK:</Typography>\n                            <Typography variant='body2' fontWeight='bold'>\n                              {formatCurrency(totals.lak, 'LAK')}\n                            </Typography>\n                          </Box>\n                          <Box\n                            sx={{\n                              display: 'flex',\n                              justifyContent: 'space-between',\n                            }}\n                          >\n                            <Typography variant='body2'>USD:</Typography>\n                            <Typography variant='body2' fontWeight='bold'>\n                              {formatCurrency(totals.usd, 'USD')}\n                            </Typography>\n                          </Box>\n                          <Box\n                            sx={{\n                              display: 'flex',\n                              justifyContent: 'space-between',\n                            }}\n                          >\n                            <Typography variant='body2'>THB:</Typography>\n                            <Typography variant='body2' fontWeight='bold'>\n                              {formatCurrency(totals.thb, 'THB')}\n                            </Typography>\n                          </Box>\n                          <Divider sx={{ my: 1 }} />\n                          <Box\n                            sx={{\n                              display: 'flex',\n                              justifyContent: 'space-between',\n                            }}\n                          >\n                            <Typography variant='body1' fontWeight='bold'>\n                              Current ({currency}):\n                            </Typography>\n                            <Typography\n                              variant='body1'\n                              fontWeight='bold'\n                              color='primary'\n                            >\n                              {getCurrentTotal()}\n                            </Typography>\n                          </Box>\n                        </Box>\n                      </CardContent>\n                    </Card>\n                  </Box>\n                </Box>\n              )}\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </>\n  );\n};\n\n// Custom Orders Table with PocketBase integration\nconst OrdersTable = React.memo(\n  ({ status, searchTerm }: { status: string; searchTerm: string }) => {\n    const [orders, setOrders] = useState<PBOrder[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n    const [openOrderId, setOpenOrderId] = useState<string | null>(null);\n    const [detailsCache, setDetailsCache] = useState<OrderDetailsCache>({});\n\n    const fetchOrderDetails = async (orderId: string) => {\n        if (detailsCache[orderId] && detailsCache[orderId].customer) return;\n\n        try {\n            const order = orders.find(o => o.id === orderId);\n            let customer: PBCustomer | null = null;\n            if (order && order.customer_id) {\n                try {\n                    customer = await pb.collection('customers').getOne(order.customer_id) as PBCustomer;\n                } catch (err) {\n                    console.warn('Failed to fetch customer:', err);\n                }\n            }\n\n            let address: PBAddress | null = null;\n            let provinceName: string | null = null;\n            let districtName: string | null = null;\n            if (order && order.address_id) {\n                try {\n                    address = await pb.collection('addresses').getOne(order.address_id) as PBAddress;\n                    if (address.province_id) {\n                        try {\n                            const provinceData = await pb.collection('provinces').getOne(address.province_id);\n                            provinceName = provinceData.name;\n                        } catch (err) {\n                            console.warn('Failed to fetch province:', err);\n                        }\n                    }\n                    if (address.district_id) {\n                        try {\n                            const districtData = await pb.collection('districts').getOne(address.district_id);\n                            districtName = districtData.name;\n                        } catch (err) {\n                            console.warn('Failed to fetch district:', err);\n                        }\n                    }\n                } catch (err) {\n                    console.warn('Failed to fetch address:', err);\n                }\n            }\n\n            const productIds = detailsCache[orderId].orderItems.map((item) => item.product_id);\n            const uniqueProductIds = Array.from(new Set(productIds));\n            const productPromises = uniqueProductIds.map(async (productId) => {\n                try {\n                    const productData = await pb.collection('products').getOne(productId);\n                    return { id: productId, data: productData as unknown as PBProduct };\n                } catch (err) {\n                    console.warn(`Failed to fetch product ${productId}:`, err);\n                    return null;\n                }\n            });\n            const productResults = await Promise.all(productPromises);\n            const products: { [key: string]: PBProduct } = {};\n            productResults.forEach((result) => {\n                if (result) {\n                    products[result.id] = result.data;\n                }\n            });\n\n            setDetailsCache(prev => ({ ...prev, [orderId]: { ...prev[orderId], customer, address, products, provinceName, districtName } }));\n        } catch (err) {\n            console.error('Error fetching order details:', err);\n        }\n    };\n\n    const handleToggle = (orderId: string) => {\n        const newOpenOrderId = openOrderId === orderId ? null : orderId;\n        setOpenOrderId(newOpenOrderId);\n        if (newOpenOrderId) {\n            fetchOrderDetails(newOpenOrderId);\n        }\n    };\n\n    useEffect(() => {\n      const fetchOrders = async () => {\n        setLoading(true);\n        setError(null);\n\n        try {\n          let filter = `status = \"${status}\"`;\n          if (searchTerm) {\n            const searchFilter = `(reference_id ~ \"${searchTerm}\" || customer_name ~ \"${searchTerm}\" || phone_number ~ \"${searchTerm}\" || address ~ \"${searchTerm}\")`;\n            filter += ` && ${searchFilter}`;\n          }\n\n          const response = await pb.collection('orders').getList(1, 50, {\n            filter: filter,\n            sort: '-created',\n          });\n          const orders = response.items as unknown as PBOrder[];\n          setOrders(orders);\n\n          const newDetailsCache: OrderDetailsCache = {};\n          await Promise.all(orders.map(async (order) => {\n            const itemsResponse = await pb.collection('order_items').getList(1, 50, {\n                filter: `order_id = \"${order.id}\"`,\n            });\n            const orderItems = itemsResponse.items as unknown as PBOrderItem[];\n            newDetailsCache[order.id] = { orderItems, customer: null, address: null, products: {}, provinceName: null, districtName: null };\n          }));\n          setDetailsCache(newDetailsCache);\n\n        } catch (err) {\n          console.error('Error fetching orders:', err);\n          setError('Failed to load orders');\n        } finally {\n          setLoading(false);\n        }\n      };\n\n      fetchOrders();\n    }, [status, searchTerm]);\n\n    if (loading) return <Loading />;\n    if (error) return <Alert severity='error'>{error}</Alert>;\n\n    if (orders.length === 0) {\n      return (\n        <Box sx={{ p: 2 }}>\n          <Typography variant='body1' color='text.secondary'>\n            No orders found for status: {status}\n          </Typography>\n        </Box>\n      );\n    }\n    if (!Array.isArray(orders)) {\n      return (\n        <Box sx={{ p: 2 }}>\n          <Alert severity='error'>Invalid data format for orders</Alert>\n        </Box>\n      );\n    }\n\n    return (\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Date</TableCell>\n              <TableCell>Reference</TableCell>\n              <TableCell>Customer</TableCell>\n              <TableCell>Phone</TableCell>\n              <TableCell>Address</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Total</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {orders.map((order) => (\n              <OrderDetail key={order.id} order={order} details={detailsCache[order.id]} onToggle={() => handleToggle(order.id)} open={openOrderId === order.id} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  }\n);\n\nexport default OrderList;\n","import * as React from 'react';\nimport { Table, TableBody, TableCell, TableRow } from '@mui/material';\nimport { useRecordContext, useTranslate } from 'react-admin';\n\nimport { Order } from '../types';\nimport { TableCellRight } from './TableCellRight';\n\nconst Totals = () => {\n    const record = useRecordContext<Order>();\n    const translate = useTranslate();\n\n    return (\n        <Table sx={{ minWidth: '35em' }}>\n            <TableBody>\n                <TableRow>\n                    <TableCell>\n                        {translate('resources.orders.fields.basket.sum')}\n                    </TableCell>\n                    <TableCellRight>\n                        {record?.total_ex_taxes.toLocaleString(undefined, {\n                            style: 'currency',\n                            currency: 'USD',\n                        })}\n                    </TableCellRight>\n                </TableRow>\n                <TableRow>\n                    <TableCell>\n                        {translate('resources.orders.fields.basket.delivery')}\n                    </TableCell>\n                    <TableCellRight>\n                        {record?.delivery_fees.toLocaleString(undefined, {\n                            style: 'currency',\n                            currency: 'USD',\n                        })}\n                    </TableCellRight>\n                </TableRow>\n                <TableRow>\n                    <TableCell>\n                        {translate('resources.orders.fields.basket.taxes')} (\n                        {record?.tax_rate.toLocaleString(undefined, {\n                            style: 'percent',\n                        })}\n                        )\n                    </TableCell>\n                    <TableCellRight>\n                        {record?.taxes.toLocaleString(undefined, {\n                            style: 'currency',\n                            currency: 'USD',\n                        })}\n                    </TableCellRight>\n                </TableRow>\n                <TableRow>\n                    <TableCell sx={{ fontWeight: 'bold' }}>\n                        {translate('resources.orders.fields.basket.total')}\n                    </TableCell>\n                    <TableCellRight sx={{ fontWeight: 'bold' }}>\n                        {record?.total.toLocaleString(undefined, {\n                            style: 'currency',\n                            currency: 'USD',\n                        })}\n                    </TableCellRight>\n                </TableRow>\n            </TableBody>\n        </Table>\n    );\n};\n\nexport default Totals;\n","import * as React from 'react';\nimport {\n    BooleanInput,\n    DateField,\n    Edit,\n    Form,\n    Labeled,\n    Link as RaLink,\n    PrevNextButtons,\n    ReferenceField,\n    SelectInput,\n    TextField,\n    Toolbar,\n    useRecordContext,\n    useTranslate,\n    useDefaultTitle,\n    useEditContext,\n} from 'react-admin';\nimport { Card, CardContent, Box, Grid, Typography, Link } from '@mui/material';\n\nimport { Customer } from '../types';\nimport Basket from './Basket';\nimport Totals from './Totals';\n\nconst OrderEdit = () => (\n    <Edit title={<OrderTitle />} component=\"div\">\n        <OrderForm />\n    </Edit>\n);\n\nconst OrderTitle = () => {\n    const appTitle = useDefaultTitle();\n    const { defaultTitle } = useEditContext();\n    return (\n        <>\n            <title>{`${appTitle} - ${defaultTitle}`}</title>\n            <span>{defaultTitle}</span>\n        </>\n    );\n};\n\nconst CustomerDetails = () => {\n    const record = useRecordContext<Customer>();\n    return (\n        <Typography>\n            <RaLink to={`/customers/${record?.id}`}>\n                {record?.first_name} {record?.last_name}\n            </RaLink>\n            <br />\n            <Link href={`mailto:${record?.email}`}>{record?.email}</Link>\n        </Typography>\n    );\n};\n\nconst CustomerAddress = () => {\n    const record = useRecordContext<Customer>();\n    return (\n        <div>\n            <Typography>\n                {record?.first_name} {record?.last_name}\n            </Typography>\n            <Typography>{record?.address}</Typography>\n            <Typography>\n                {record?.city}, {record?.stateAbbr} {record?.zipcode}\n            </Typography>\n        </div>\n    );\n};\n\nconst Spacer = () => (\n    <Box\n        sx={{\n            mb: 1,\n        }}\n    >\n        &nbsp;\n    </Box>\n);\n\nconst OrderForm = () => {\n    const translate = useTranslate();\n    return (\n      <Form>\n        <Box\n          sx={{\n            maxWidth: '50em',\n          }}\n        >\n          <PrevNextButtons\n            filterDefaultValues={{ status: 'ordered' }}\n            sort={{ field: 'date', order: 'DESC' }}\n          />\n          <Card>\n            <CardContent>\n              <Grid container spacing={1}>\n                <Grid size={{ xs: 12, sm: 12, md: 8 }}>\n                  <Typography variant='h6' gutterBottom>\n                    {translate('resources.orders.section.order')}\n                  </Typography>\n                  <Grid container>\n                    <Grid size={{ xs: 12, sm: 12, md: 6 }}>\n                      <Labeled source='date'>\n                        <DateField source='date' />\n                      </Labeled>\n                    </Grid>\n                    <Grid size={{ xs: 12, sm: 12, md: 6 }}>\n                      <Labeled source='reference'>\n                        <TextField source='reference' />\n                      </Labeled>\n                    </Grid>\n                  </Grid>\n                  <Grid container>\n                    <Grid size={{ xs: 12, sm: 12, md: 6 }}>\n                      <SelectInput\n                        source='status'\n                        choices={[\n                          {\n                            id: 'purchased',\n                            name: 'purchased',\n                          },\n                          {\n                            id: 'ordered',\n                            name: 'ordered',\n                          },\n                          {\n                            id: 'cancel',\n                            name: 'cancel',\n                          },\n                          {\n                            id: 'unknown',\n                            name: 'unknown',\n                            disabled: true,\n                          },\n                        ]}\n                        sx={{ width: '80%' }}\n                      />\n                    </Grid>\n                    <Grid size={{ xs: 12, sm: 12, md: 6 }}>\n                      <Box\n                        sx={{\n                          mt: 2,\n                        }}\n                      >\n                        <BooleanInput row={true} source='returned' />\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid size={{ xs: 12, sm: 12, md: 4 }}>\n                  <Typography variant='h6' gutterBottom>\n                    {translate('resources.orders.section.customer')}\n                  </Typography>\n                  <ReferenceField\n                    source='customer_id'\n                    reference='customers'\n                    link={false}\n                  >\n                    <CustomerDetails />\n                  </ReferenceField>\n                  <Spacer />\n\n                  <Typography variant='h6' gutterBottom>\n                    {translate('resources.orders.section.shipping_address')}\n                  </Typography>\n                  <ReferenceField\n                    source='customer_id'\n                    reference='customers'\n                    link={false}\n                  >\n                    <CustomerAddress />\n                  </ReferenceField>\n                </Grid>\n              </Grid>\n              <Spacer />\n\n              <Typography variant='h6' gutterBottom>\n                {translate('resources.orders.section.items')}\n              </Typography>\n              <div>\n                <Basket />\n              </div>\n              <Spacer />\n\n              <Typography variant='h6' gutterBottom>\n                {translate('resources.orders.section.total')}\n              </Typography>\n              <div>\n                <Totals />\n              </div>\n            </CardContent>\n            <Toolbar />\n          </Card>\n        </Box>\n      </Form>\n    );\n};\n\nexport default OrderEdit;\n","import OrderIcon from '@mui/icons-material/AttachMoney';\n\nimport OrderList from './OrderList';\nimport OrderEdit from './OrderEdit';\n\nexport default {\n    list: OrderList,\n    edit: OrderEdit,\n    icon: OrderIcon,\n    recordRepresentation: 'reference',\n};\n","import { Box } from '@mui/material';\nimport clsx from 'clsx';\nimport { useState } from 'react';\nimport {\n  DashboardMenuItem,\n  MenuItemLink,\n  MenuProps,\n  useSidebarState,\n  useTranslate,\n} from 'react-admin';\n\nimport blogs from '../blogs';\nimport categories from '../categories';\nimport customers from '../customers';\nimport orders from '../orders';\nimport products from '../products';\n\ntype MenuName = 'menuCatalog' | 'menuSales' | 'menuCustomers';\n\nconst Menu = ({ dense = false }: MenuProps) => {\n  const [state, setState] = useState({\n    menuCatalog: true,\n    menuSales: true,\n    menuCustomers: true,\n  });\n  const translate = useTranslate();\n  const [open] = useSidebarState();\n\n  const handleToggle = (menu: MenuName) => {\n    setState((state) => ({ ...state, [menu]: !state[menu] }));\n  };\n\n  return (\n    <Box\n      sx={{\n        width: open ? 200 : 50,\n        marginTop: 1,\n        marginBottom: 1,\n        transition: (theme) =>\n          theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n          }),\n      }}\n      className={clsx({\n        'RaMenu-open': open,\n        'RaMenu-closed': !open,\n      })}\n    >\n      <DashboardMenuItem />\n      <MenuItemLink\n        to='/orders'\n        state={{ _scrollToTop: true }}\n        primaryText={translate(`resources.orders.name`, {\n          smart_count: 2,\n        })}\n        leftIcon={<orders.icon />}\n        dense={dense}\n      />\n      <MenuItemLink\n        to='/products'\n        state={{ _scrollToTop: true }}\n        primaryText={translate(`resources.products.name`, {\n          smart_count: 2,\n        })}\n        leftIcon={<products.icon />}\n        dense={dense}\n      />\n      <MenuItemLink\n        to='/categories'\n        state={{ _scrollToTop: true }}\n        primaryText={translate(`resources.categories.name`, {\n          smart_count: 2,\n        })}\n        leftIcon={<categories.icon />}\n        dense={dense}\n      />\n      <MenuItemLink\n        to='/blogs'\n        state={{ _scrollToTop: true }}\n        primaryText={translate(`resources.blogs.name`, {\n          smart_count: 2,\n        })}\n        leftIcon={<blogs.icon />}\n        dense={dense}\n      />\n      <MenuItemLink\n        to='/customers'\n        state={{ _scrollToTop: true }}\n        primaryText={translate(`resources.customers.name`, {\n          smart_count: 2,\n        })}\n        leftIcon={<customers.icon />}\n        dense={dense}\n      />\n      <MenuItemLink\n        to='/users'\n        state={{ _scrollToTop: true }}\n        primaryText={translate(`resources.users.name`, {\n          smart_count: 2,\n        })}\n        leftIcon={\n          <Box sx={{ ml: -0.1, mt: 0.2 }}>\n            <svg\n              xmlns='http://www.w3.org/2000/svg'\n              width='1.6em'\n              height='1.6em'\n              viewBox='0 -1 24 24'\n            >\n              <path\n                fill='currentColor'\n                d='M12 23C6.443 21.765 2 16.522 2 11V5l10-4l10 4v6c0 5.524-4.443 10.765-10 12M4 6v5a10.58 10.58 0 0 0 8 10a10.58 10.58 0 0 0 8-10V6l-8-3Z'\n              />\n              <circle cx='12' cy='8.5' r='2.5' fill='currentColor' />\n              <path\n                fill='currentColor'\n                d='M7 15a5.78 5.78 0 0 0 5 3a5.78 5.78 0 0 0 5-3c-.025-1.896-3.342-3-5-3c-1.667 0-4.975 1.104-5 3'\n              />\n            </svg>\n          </Box>\n        }\n        dense={dense}\n      />\n    </Box>\n  );\n};\n\nexport default Menu;\n","import * as React from 'react';\nimport { Layout } from 'react-admin';\nimport AppBar from './AppBar';\nimport Menu from './Menu';\n\nexport default ({ children }: { children: React.ReactNode }) => (\n  <Layout\n    appBar={AppBar}\n    menu={Menu}\n    sx={{\n      backgroundColor: (theme) =>\n        (theme.vars || theme).palette.background.default,\n    }}\n  >\n    {children}\n  </Layout>\n);\n","import { useState } from \"react\";\nimport { useLogin, useNotify, Login } from \"react-admin\";\nimport {\n  TextField,\n  Button,\n  Typography,\n  Box,\n  Paper,\n  Container,\n} from \"@mui/material\";\n\nconst LoginPage = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const login = useLogin();\n  const notify = useNotify();\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      await login({ email, password });\n    } catch {\n      notify(\"Invalid email or password\", { type: \"error\" });\n    }\n  };\n\n  return (\n    <Login>\n      <Container maxWidth=\"sm\">\n        <Paper elevation={3} sx={{ padding: 4, marginTop: 8, marginBottom: 8 }}>\n          <Typography variant=\"h5\" align=\"center\" gutterBottom>\n            Admin Login\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} sx={{ boxShadow: 'none'}}>\n            <TextField\n              fullWidth\n              label=\"Email\"\n              name=\"email\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <TextField\n              fullWidth\n              label=\"Password\"\n              name=\"password\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              sx={{ marginTop: 2 }}\n            >\n              Login\n            </Button>\n          </Box>\n        </Paper>\n      </Container>\n    </Login>\n  );\n};\n\nexport default LoginPage;\n","import * as React from 'react';\nimport { Fragment } from 'react';\nimport {\n    ListItem,\n    ListItemAvatar,\n    ListItemButton,\n    ListItemText,\n} from '@mui/material';\nimport {\n    useCreatePath,\n    ReferenceField,\n    FunctionField,\n    Link,\n    TextField,\n    useRecordContext,\n} from 'react-admin';\n\nimport AvatarField from '../visitors/AvatarField';\nimport { Customer, Review } from './../types';\n\nexport const ReviewItem = () => {\n    const record = useRecordContext<Review>();\n    const createPath = useCreatePath();\n    if (!record) {\n        return null;\n    }\n    return (\n        <ListItem disablePadding>\n            <ListItemButton\n                component={Link}\n                to={createPath({\n                    resource: 'reviews',\n                    type: 'edit',\n                    id: record.id,\n                })}\n            >\n                <ListItemAvatar>\n                    <ReferenceField\n                        source=\"customer_id\"\n                        reference=\"customers\"\n                        link={false}\n                    >\n                        <AvatarField size=\"40\" />\n                    </ReferenceField>\n                </ListItemAvatar>\n                <ListItemText\n                    primary={\n                        <Fragment>\n                            <ReferenceField\n                                source=\"customer_id\"\n                                reference=\"customers\"\n                                link={false}\n                            >\n                                <FunctionField<Customer>\n                                    render={record =>\n                                        `${record.first_name} ${record.last_name}`\n                                    }\n                                    variant=\"subtitle1\"\n                                />\n                            </ReferenceField>{' '}\n                            on{' '}\n                            <ReferenceField\n                                source=\"product_id\"\n                                reference=\"products\"\n                                link={false}\n                            >\n                                <TextField\n                                    source=\"reference\"\n                                    variant=\"subtitle1\"\n                                />\n                            </ReferenceField>\n                        </Fragment>\n                    }\n                    secondary={record.comment}\n                    secondaryTypographyProps={{ noWrap: true }}\n                />\n            </ListItemButton>\n        </ListItem>\n    );\n};\n","import * as React from 'react';\nimport { List } from '@mui/material';\nimport { RecordContextProvider, useListContext } from 'react-admin';\n\nimport { ReviewItem } from './ReviewItem';\nimport { Review } from './../types';\n\nconst ReviewListMobile = () => {\n    const { data, error, isPending, total } = useListContext<Review>();\n    if (isPending || error || Number(total) === 0) {\n        return null;\n    }\n    return (\n        <List sx={{ width: 'calc(100vw - 33px)' }}>\n            {data.map(review => (\n                <RecordContextProvider value={review} key={review.id}>\n                    <ReviewItem />\n                </RecordContextProvider>\n            ))}\n        </List>\n    );\n};\n\nexport default ReviewListMobile;\n","import * as React from 'react';\nimport { ReferenceField, ReferenceFieldProps, TextField } from 'react-admin';\n\ninterface Props {\n    source?: string;\n}\n\nconst ProductReferenceField = (\n    props: Props &\n        Omit<ReferenceFieldProps, 'source' | 'reference' | 'children'>\n) => (\n    <ReferenceField\n        label=\"Product\"\n        source=\"product_id\"\n        reference=\"products\"\n        {...props}\n    >\n        <TextField source=\"reference\" />\n    </ReferenceField>\n);\n\nexport default ProductReferenceField;\n","import * as React from 'react';\nimport { ReferenceField, ReferenceFieldProps } from 'react-admin';\n\nimport FullNameField from './FullNameField';\n\nconst CustomerReferenceField = (\n    props: Omit<ReferenceFieldProps, 'reference' | 'children' | 'source'> & {\n        source?: string;\n    }\n) => (\n    <ReferenceField source=\"customer_id\" reference=\"customers\" {...props}>\n        <FullNameField source=\"last_name\" />\n    </ReferenceField>\n);\n\nexport default CustomerReferenceField;\n","import * as React from 'react';\nimport { Box } from '@mui/material';\nimport Icon from '@mui/icons-material/Stars';\n\nimport { useRecordContext } from 'react-admin';\n\ninterface OwnProps {\n    size?: 'large' | 'small';\n    record?: any;\n}\n\nconst StarRatingField = (props: OwnProps) => {\n    const { size = 'large' } = props;\n    const record = useRecordContext(props);\n    if (!record) return null;\n\n    return (\n        <Box\n            component=\"span\"\n            sx={{\n                display: 'flex',\n                opacity: 0.87,\n                whiteSpace: 'nowrap',\n            }}\n        >\n            {Array(record.rating)\n                .fill(true)\n                .map((_, i) => (\n                    <Icon\n                        key={i}\n                        sx={{\n                            width: size === 'large' ? 20 : 15,\n                            height: size === 'large' ? 20 : 15,\n                        }}\n                    />\n                ))}\n        </Box>\n    );\n};\n\nexport default StarRatingField;\n","import { green, orange, red } from '@mui/material/colors';\nimport type { SxProps } from '@mui/material';\nimport { Identifier } from 'react-admin';\n\nimport { Review } from './../types';\n\nconst rowSx =\n    (selectedRow?: Identifier) =>\n    (record: Review): SxProps => {\n        let style = {};\n        if (!record) {\n            return style;\n        }\n        if (selectedRow && selectedRow === record.id) {\n            style = {\n                ...style,\n                backgroundColor: 'action.selected',\n            };\n        }\n        if (record.status === 'accepted')\n            return {\n                ...style,\n                borderLeftColor: green[500],\n                borderLeftWidth: 5,\n                borderLeftStyle: 'solid',\n            };\n        if (record.status === 'pending')\n            return {\n                ...style,\n                borderLeftColor: orange[500],\n                borderLeftWidth: 5,\n                borderLeftStyle: 'solid',\n            };\n        if (record.status === 'rejected')\n            return {\n                ...style,\n                borderLeftColor: red[500],\n                borderLeftWidth: 5,\n                borderLeftStyle: 'solid',\n            };\n        return style;\n    };\n\nexport default rowSx;\n","import * as React from 'react';\nimport ThumbUp from '@mui/icons-material/ThumbUp';\n\nimport {\n    Button,\n    useUpdateMany,\n    useNotify,\n    useUnselectAll,\n    Identifier,\n    useListContext,\n} from 'react-admin';\n\nconst noSelection: Identifier[] = [];\n\nconst BulkAcceptButton = () => {\n    const { selectedIds = noSelection } = useListContext();\n    const notify = useNotify();\n    const unselectAll = useUnselectAll('reviews');\n\n    const [updateMany, { isPending }] = useUpdateMany(\n        'reviews',\n        { ids: selectedIds, data: { status: 'accepted' } },\n        {\n            mutationMode: 'undoable',\n            onSuccess: () => {\n                notify('resources.reviews.notifications.approved_success', {\n                    type: 'info',\n                    undoable: true,\n                });\n                unselectAll();\n            },\n            onError: () => {\n                notify('resources.reviews.notifications.approved_error', {\n                    type: 'error',\n                });\n            },\n        }\n    );\n\n    return (\n        <Button\n            label=\"resources.reviews.action.accept\"\n            onClick={() => updateMany()}\n            disabled={isPending}\n        >\n            <ThumbUp />\n        </Button>\n    );\n};\n\nexport default BulkAcceptButton;\n","import * as React from 'react';\nimport ThumbDown from '@mui/icons-material/ThumbDown';\n\nimport {\n    Button,\n    useUpdateMany,\n    useNotify,\n    useUnselectAll,\n    Identifier,\n    useListContext,\n} from 'react-admin';\n\nconst noSelection: Identifier[] = [];\n\nconst BulkRejectButton = () => {\n    const { selectedIds = noSelection } = useListContext();\n    const notify = useNotify();\n    const unselectAll = useUnselectAll('reviews');\n\n    const [updateMany, { isPending }] = useUpdateMany(\n        'reviews',\n        { ids: selectedIds, data: { status: 'rejected' } },\n        {\n            mutationMode: 'undoable',\n            onSuccess: () => {\n                notify('resources.reviews.notifications.approved_success', {\n                    type: 'info',\n                    undoable: true,\n                });\n                unselectAll();\n            },\n            onError: () => {\n                notify('resources.reviews.notifications.approved_error', {\n                    type: 'error',\n                });\n            },\n        }\n    );\n\n    return (\n        <Button\n            label=\"resources.reviews.action.reject\"\n            onClick={() => updateMany()}\n            disabled={isPending}\n        >\n            <ThumbDown />\n        </Button>\n    );\n};\n\nexport default BulkRejectButton;\n","import * as React from 'react';\nimport {\n    BulkDeleteButton,\n    DataTable,\n    DateField,\n    Identifier,\n    useCreatePath,\n} from 'react-admin';\nimport { useNavigate } from 'react-router';\n\nimport ProductReferenceField from '../products/ProductReferenceField';\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport StarRatingField from './StarRatingField';\nimport rowSx from './rowSx';\nimport BulkAcceptButton from './BulkAcceptButton';\nimport BulkRejectButton from './BulkRejectButton';\nimport { type Review } from '../types';\n\nexport interface ReviewListDesktopProps {\n    selectedRow?: Identifier;\n}\n\nconst ReviewsBulkActionButtons = () => (\n    <>\n        <BulkAcceptButton />\n        <BulkRejectButton />\n        <BulkDeleteButton />\n    </>\n);\n\nconst Table = DataTable<Review>;\nconst Column = DataTable.Col<Review>;\n\nconst ReviewListDesktop = ({ selectedRow }: ReviewListDesktopProps) => {\n    const navigate = useNavigate();\n    const createPath = useCreatePath();\n    return (\n        <Table\n            rowClick={(id, resource) => {\n                // As we display the edit view in a drawer, we don't the default rowClick behavior that will scroll to the top of the page\n                // So we navigate manually without specifying the _scrollToTop state\n                navigate(\n                    createPath({\n                        resource,\n                        id,\n                        type: 'edit',\n                    })\n                );\n                // Disable the default rowClick behavior\n                return false;\n            }}\n            rowSx={rowSx(selectedRow)}\n            bulkActionButtons={<ReviewsBulkActionButtons />}\n            sx={{\n                '& .RaDataTable-thead': {\n                    borderLeftColor: 'transparent',\n                    borderLeftWidth: 5,\n                    borderLeftStyle: 'solid',\n                },\n            }}\n        >\n            <Column source=\"date\" field={DateField} />\n            <Column source=\"customer_id\">\n                <CustomerReferenceField source=\"customer_id\" link={false} />\n            </Column>\n            <Column source=\"product_id\">\n                <ProductReferenceField source=\"product_id\" link={false} />\n            </Column>\n            <Column\n                source=\"rating\"\n                label=\"resources.reviews.fields.rating\"\n                field={StarRatingField}\n            />\n            <Column\n                source=\"comment\"\n                sx={{\n                    maxWidth: '18em',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap',\n                }}\n            />\n            <Column source=\"status\" />\n        </Table>\n    );\n};\n\nexport default ReviewListDesktop;\n","import * as React from 'react';\nimport {\n    AutocompleteInput,\n    DateInput,\n    ReferenceInput,\n    SearchInput,\n    SelectInput,\n} from 'react-admin';\nimport { green, orange, red } from '@mui/material/colors';\nimport { Box } from '@mui/material';\n\nimport { Customer } from '../types';\n\nconst colorMap: { [key: string]: string } = {\n    accepted: green[500],\n    pending: orange[500],\n    rejected: red[500],\n};\n\nconst reviewFilters = [\n    <SearchInput source=\"q\" alwaysOn />,\n    <SelectInput\n        source=\"status\"\n        choices={[\n            { id: 'accepted', name: 'Accepted' },\n            { id: 'pending', name: 'Pending' },\n            { id: 'rejected', name: 'Rejected' },\n        ]}\n        optionText={choice => (\n            <>\n                <Box\n                    component=\"span\"\n                    sx={{\n                        bgcolor: colorMap[choice.id],\n                        width: 8,\n                        height: 8,\n                        borderRadius: 4,\n                        mr: 1,\n                        display: 'inline-block',\n                    }}\n                />\n                {choice.name}\n            </>\n        )}\n    />,\n    <ReferenceInput source=\"customer_id\" reference=\"customers\">\n        <AutocompleteInput\n            optionText={(choice?: Customer) =>\n                choice?.id // the empty choice is { id: '' }\n                    ? `${choice.first_name} ${choice.last_name}`\n                    : ''\n            }\n            sx={{ minWidth: 200 }}\n        />\n    </ReferenceInput>,\n    <ReferenceInput source=\"product_id\" reference=\"products\">\n        <AutocompleteInput optionText=\"reference\" />\n    </ReferenceInput>,\n    <DateInput source=\"date_gte\" />,\n    <DateInput source=\"date_lte\" />,\n];\n\nexport default reviewFilters;\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport ThumbUp from '@mui/icons-material/ThumbUp';\nimport {\n    useTranslate,\n    useUpdate,\n    useNotify,\n    useRedirect,\n    useRecordContext,\n} from 'react-admin';\nimport { Review } from './../types';\n\n/**\n * This custom button demonstrate using useUpdate to update data\n */\nconst AcceptButton = () => {\n    const translate = useTranslate();\n    const notify = useNotify();\n    const redirectTo = useRedirect();\n    const record = useRecordContext<Review>();\n\n    const [approve, { isPending }] = useUpdate(\n        'reviews',\n        { id: record?.id, data: { status: 'accepted' }, previousData: record },\n        {\n            mutationMode: 'undoable',\n            onSuccess: () => {\n                notify('resources.reviews.notifications.approved_success', {\n                    type: 'info',\n                    undoable: true,\n                });\n                redirectTo('/reviews');\n            },\n            onError: () => {\n                notify('resources.reviews.notifications.approved_error', {\n                    type: 'error',\n                });\n            },\n        }\n    );\n    return record && record.status === 'pending' ? (\n        <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={() => approve()}\n            sx={{ borderColor: theme => theme.palette.success.main }}\n            startIcon={\n                <ThumbUp sx={{ color: theme => theme.palette.success.main }} />\n            }\n            disabled={isPending}\n        >\n            {translate('resources.reviews.action.accept')}\n        </Button>\n    ) : (\n        <span />\n    );\n};\n\nexport default AcceptButton;\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport ThumbDown from '@mui/icons-material/ThumbDown';\nimport {\n    useTranslate,\n    useUpdate,\n    useNotify,\n    useRedirect,\n    useRecordContext,\n} from 'react-admin';\nimport { Review } from '../types';\n\n/**\n * This custom button demonstrate using a custom action to update data\n */\nconst RejectButton = () => {\n    const translate = useTranslate();\n    const notify = useNotify();\n    const redirectTo = useRedirect();\n    const record = useRecordContext<Review>();\n\n    const [reject, { isPending }] = useUpdate(\n        'reviews',\n        { id: record?.id, data: { status: 'rejected' }, previousData: record },\n        {\n            mutationMode: 'undoable',\n            onSuccess: () => {\n                notify('resources.reviews.notifications.rejected_success', {\n                    type: 'info',\n                    undoable: true,\n                });\n                redirectTo('/reviews');\n            },\n            onError: () => {\n                notify('resources.reviews.notifications.rejected_error', {\n                    type: 'error',\n                });\n            },\n        }\n    );\n\n    return record && record.status === 'pending' ? (\n        <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={() => reject()}\n            sx={{ borderColor: theme => theme.palette.error.main }}\n            startIcon={\n                <ThumbDown sx={{ color: theme => theme.palette.error.main }} />\n            }\n            disabled={isPending}\n        >\n            {translate('resources.reviews.action.reject')}\n        </Button>\n    ) : (\n        <span />\n    );\n};\n\nexport default RejectButton;\n","import * as React from 'react';\nimport { Fragment } from 'react';\nimport Toolbar from '@mui/material/Toolbar';\n\nimport {\n    SaveButton,\n    DeleteButton,\n    ToolbarProps,\n    useRecordContext,\n    useNotify,\n    useRedirect,\n} from 'react-admin';\nimport AcceptButton from './AcceptButton';\nimport RejectButton from './RejectButton';\nimport { Review } from '../types';\n\nconst ReviewEditToolbar = (props: ToolbarProps) => {\n    const { resource } = props;\n    const redirect = useRedirect();\n    const notify = useNotify();\n\n    const record = useRecordContext<Review>(props);\n\n    if (!record) return null;\n    return (\n        <Toolbar\n            sx={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                minHeight: { sm: 0 },\n            }}\n        >\n            {record.status === 'pending' ? (\n                <Fragment>\n                    <AcceptButton />\n                    <RejectButton />\n                </Fragment>\n            ) : (\n                <Fragment>\n                    <SaveButton\n                        mutationOptions={{\n                            onSuccess: () => {\n                                notify('ra.notification.updated', {\n                                    type: 'info',\n                                    messageArgs: { smart_count: 1 },\n                                    undoable: true,\n                                });\n                                redirect('list', 'reviews');\n                            },\n                        }}\n                        type=\"button\"\n                    />\n                    <DeleteButton record={record} resource={resource} />\n                </Fragment>\n            )}\n        </Toolbar>\n    );\n};\n\nexport default ReviewEditToolbar;\n","import * as React from 'react';\nimport {\n    EditBase,\n    useTranslate,\n    TextInput,\n    SimpleForm,\n    DateField,\n    Labeled,\n    useDefaultTitle,\n    useEditContext,\n} from 'react-admin';\nimport { Box, Grid, Stack, IconButton, Typography } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport ProductReferenceField from '../products/ProductReferenceField';\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport StarRatingField from './StarRatingField';\nimport ReviewEditToolbar from './ReviewEditToolbar';\nimport { Review } from '../types';\n\ninterface ReviewEditProps {\n    id: Review['id'];\n    onCancel: () => void;\n}\n\nconst ReviewTitle = () => {\n    const appTitle = useDefaultTitle();\n    const { defaultTitle } = useEditContext();\n    return <title>{`${appTitle} - ${defaultTitle}`}</title>;\n};\n\nconst ReviewEdit = ({ id, onCancel }: ReviewEditProps) => {\n    const translate = useTranslate();\n    return (\n        <EditBase id={id}>\n            <ReviewTitle />\n            <Box\n                sx={{\n                    pt: 5,\n                    width: { xs: '100vW', sm: 400 },\n                    mt: { xs: 2, sm: 1 },\n                }}\n            >\n                <Stack\n                    direction=\"row\"\n                    sx={{\n                        p: 2,\n                    }}\n                >\n                    <Typography\n                        variant=\"h6\"\n                        sx={{\n                            flex: '1',\n                        }}\n                    >\n                        {translate('resources.reviews.detail')}\n                    </Typography>\n                    <IconButton onClick={onCancel} size=\"small\">\n                        <CloseIcon />\n                    </IconButton>\n                </Stack>\n                <SimpleForm\n                    sx={{ pt: 0, pb: 0 }}\n                    toolbar={<ReviewEditToolbar />}\n                >\n                    <Grid\n                        container\n                        rowSpacing={1}\n                        sx={{\n                            mb: 1,\n                        }}\n                    >\n                        <Grid size={{ xs: 6 }}>\n                            <Labeled source=\"customer_id\">\n                                <CustomerReferenceField source=\"customer_id\" />\n                            </Labeled>\n                        </Grid>\n                        <Grid size={{ xs: 6 }}>\n                            <Labeled label=\"resources.reviews.fields.product_id\">\n                                <ProductReferenceField />\n                            </Labeled>\n                        </Grid>\n                        <Grid size={{ xs: 6 }}>\n                            <Labeled>\n                                <DateField source=\"date\" />\n                            </Labeled>\n                        </Grid>\n                        <Grid size={{ xs: 6 }}>\n                            <Labeled label=\"resources.reviews.fields.rating\">\n                                <StarRatingField />\n                            </Labeled>\n                        </Grid>\n                    </Grid>\n                    <TextInput source=\"comment\" maxRows={15} multiline />\n                </SimpleForm>\n            </Box>\n        </EditBase>\n    );\n};\n\nexport default ReviewEdit;\n","import * as React from 'react';\nimport { useCallback } from 'react';\nimport {\n    CreateButton,\n    ExportButton,\n    FilterButton,\n    List,\n    ColumnsButton,\n    TopToolbar,\n    useDefaultTitle,\n    useListContext,\n} from 'react-admin';\nimport { matchPath, useLocation, useNavigate } from 'react-router-dom';\nimport { Box, Drawer, useMediaQuery, Theme } from '@mui/material';\n\nimport ReviewListMobile from './ReviewListMobile';\nimport ReviewListDesktop from './ReviewListDesktop';\nimport reviewFilters from './reviewFilters';\nimport ReviewEdit from './ReviewEdit';\n\nconst ReviewListActions = () => (\n    <TopToolbar>\n        <FilterButton />\n        <CreateButton />\n        <ColumnsButton />\n        <ExportButton />\n    </TopToolbar>\n);\n\nconst ReviewsTitle = () => {\n    const title = useDefaultTitle();\n    const { defaultTitle } = useListContext();\n    return (\n        <>\n            <title>{`${title} - ${defaultTitle}`}</title>\n            <span>{defaultTitle}</span>\n        </>\n    );\n};\n\nconst ReviewList = () => {\n    const isXSmall = useMediaQuery<Theme>(theme =>\n        theme.breakpoints.down('sm')\n    );\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    const handleClose = useCallback(() => {\n        navigate('/reviews');\n    }, [navigate]);\n\n    const match = matchPath('/reviews/:id', location.pathname);\n\n    return (\n        <Box\n            sx={{\n                display: 'flex',\n            }}\n        >\n            <List\n                sx={{\n                    flexGrow: 1,\n                    transition: (theme: any) =>\n                        theme.transitions.create(['all'], {\n                            duration: theme.transitions.duration.enteringScreen,\n                        }),\n                    marginRight: match ? '400px' : 0,\n                }}\n                filters={reviewFilters}\n                perPage={25}\n                sort={{ field: 'date', order: 'DESC' }}\n                actions={<ReviewListActions />}\n                title={<ReviewsTitle />}\n            >\n                {isXSmall ? (\n                    <ReviewListMobile />\n                ) : (\n                    <ReviewListDesktop\n                        selectedRow={\n                            match\n                                ? parseInt((match as any).params.id, 10)\n                                : undefined\n                        }\n                    />\n                )}\n            </List>\n            <Drawer\n                variant=\"persistent\"\n                open={!!match}\n                anchor=\"right\"\n                onClose={handleClose}\n                sx={{ zIndex: 100 }}\n            >\n                {/* To avoid any errors if the route does not match, we don't render at all the component in this case */}\n                {!!match && (\n                    <ReviewEdit\n                        id={(match as any).params.id}\n                        onCancel={handleClose}\n                    />\n                )}\n            </Drawer>\n        </Box>\n    );\n};\n\nexport default ReviewList;\n","import { Box, Rating, Typography, styled } from '@mui/material';\nimport Icon from '@mui/icons-material/Stars';\nimport { InputProps, useInput, useTranslate } from 'react-admin';\n\nconst StarRatingInput = (props: InputProps) => {\n    const { name = 'resources.reviews.fields.rating' } = props;\n    const { field } = useInput(props);\n    const translate = useTranslate();\n\n    return (\n        <Box\n            sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                marginBottom: '1rem',\n            }}\n        >\n            <Typography>{translate(name)}</Typography>\n            <StyledRating\n                {...field}\n                icon={<Icon />}\n                onChange={(event, value) => field.onChange(value)}\n            />\n        </Box>\n    );\n};\n\nconst StyledRating = styled(Rating)({\n    '& .MuiRating-iconFilled': {\n        color: '#000',\n    },\n    '& .MuiRating-iconHover': {\n        color: '#000',\n    },\n});\n\nexport default StarRatingInput;\n","import * as React from 'react';\nimport {\n    SimpleForm,\n    Create,\n    ReferenceInput,\n    TextInput,\n    DateInput,\n    AutocompleteInput,\n    required,\n    useNotify,\n    useRedirect,\n    getRecordFromLocation,\n    useDefaultTitle,\n    useCreateContext,\n} from 'react-admin';\nimport { useLocation } from 'react-router';\n\nimport StarRatingInput from './StarRatingInput';\n\nconst ReviewTitle = () => {\n    const appTitle = useDefaultTitle();\n    const { defaultTitle } = useCreateContext();\n    return (\n        <>\n            <title>{`${appTitle} - ${defaultTitle}`}</title>\n            <span>{defaultTitle}</span>\n        </>\n    );\n};\n\nconst ReviewCreate = () => {\n    const notify = useNotify();\n    const redirect = useRedirect();\n    const location = useLocation();\n\n    const onSuccess = (_: any) => {\n        const record = getRecordFromLocation(location);\n        notify('resources.reviews.notifications.created');\n        if (record && record.product_id) {\n            redirect(`/products/${record.product_id}/reviews`);\n        } else {\n            redirect(`/reviews`);\n        }\n    };\n\n    return (\n        <Create mutationOptions={{ onSuccess }} title={<ReviewTitle />}>\n            <SimpleForm\n                defaultValues={{ status: 'pending' }}\n                sx={{\n                    maxWidth: '30em',\n                }}\n            >\n                <ReferenceInput source=\"customer_id\" reference=\"customers\">\n                    <AutocompleteInput validate={required()} />\n                </ReferenceInput>\n                <ReferenceInput source=\"product_id\" reference=\"products\">\n                    <AutocompleteInput\n                        optionText=\"reference\"\n                        validate={required()}\n                    />\n                </ReferenceInput>\n                <DateInput\n                    source=\"date\"\n                    defaultValue={new Date()}\n                    validate={required()}\n                />\n                <StarRatingInput source=\"rating\" defaultValue={2} />\n                <TextInput\n                    source=\"comment\"\n                    multiline\n                    resettable\n                    validate={required()}\n                />\n            </SimpleForm>\n        </Create>\n    );\n};\n\nexport default ReviewCreate;\n","import ReviewIcon from '@mui/icons-material/Comment';\nimport ReviewList from './ReviewList';\nimport ReviewCreate from './ReviewCreate';\n\nexport default {\n    icon: ReviewIcon,\n    list: ReviewList,\n    create: ReviewCreate,\n};\n","export default [\n    { id: 'compulsive', name: 'resources.segments.data.compulsive' },\n    { id: 'collector', name: 'resources.segments.data.collector' },\n    { id: 'ordered_once', name: 'resources.segments.data.ordered_once' },\n    { id: 'regular', name: 'resources.segments.data.regular' },\n    { id: 'returns', name: 'resources.segments.data.returns' },\n    { id: 'reviewer', name: 'resources.segments.data.reviewer' },\n];\n","import * as React from 'react';\nimport { Stack, Chip } from '@mui/material';\nimport { FieldProps, useTranslate, useRecordContext } from 'react-admin';\nimport segments from '../segments/data';\nimport { Customer } from '../types';\n\nconst segmentsById = segments.reduce(\n    (acc, segment) => {\n        acc[segment.id] = segment;\n        return acc;\n    },\n    {} as { [key: string]: any }\n);\n\nconst SegmentsField = (_: Omit<FieldProps, 'source'> & { source?: string }) => {\n    const translate = useTranslate();\n    const record = useRecordContext<Customer>();\n    if (!record || !record.groups) {\n        return null;\n    }\n    return (\n        <Stack\n            direction=\"row\"\n            sx={{\n                gap: 1,\n                flexWrap: 'wrap',\n            }}\n        >\n            {record.groups.map(segmentId => (\n                <Chip\n                    size=\"small\"\n                    key={segmentId}\n                    label={translate(segmentsById[segmentId].name)}\n                />\n            ))}\n        </Stack>\n    );\n};\n\nexport default SegmentsField;\n","import * as React from 'react';\nimport {\n    BooleanField,\n    CreateButton,\n    DataTable,\n    DateField,\n    DateInput,\n    ExportButton,\n    List,\n    NullableBooleanInput,\n    SearchInput,\n    ColumnsButton,\n    TopToolbar,\n    useDefaultTitle,\n    useListContext,\n} from 'react-admin';\nimport { useMediaQuery, Theme } from '@mui/material';\n\nimport SegmentsField from './SegmentsField';\nimport SegmentInput from './SegmentInput';\nimport CustomerLinkField from './CustomerLinkField';\nimport MobileGrid from './MobileGrid';\nimport VisitorListAside from './VisitorListAside';\nimport type { Customer } from '../types';\n\nconst visitorFilters = [\n    <SearchInput source=\"q\" alwaysOn />,\n    <DateInput source=\"last_seen_gte\" />,\n    <NullableBooleanInput source=\"has_ordered\" />,\n    <NullableBooleanInput source=\"has_newsletter\" defaultValue />,\n    <SegmentInput source=\"groups\" />,\n];\n\nconst VisitorListActions = () => (\n    <TopToolbar>\n        <CreateButton />\n        <ColumnsButton />\n        <ExportButton />\n    </TopToolbar>\n);\n\nconst VisitorTitle = () => {\n    const title = useDefaultTitle();\n    const { defaultTitle } = useListContext();\n    return (\n        <>\n            <title>{`${title} - ${defaultTitle}`}</title>\n            <span>{defaultTitle}</span>\n        </>\n    );\n};\n\nconst Column = DataTable.Col<Customer>;\nconst ColumnNumber = DataTable.NumberCol<Customer>;\n\nconst VisitorList = () => {\n    const isXsmall = useMediaQuery<Theme>(theme =>\n        theme.breakpoints.down('sm')\n    );\n    const isSmall = useMediaQuery<Theme>(theme => theme.breakpoints.down('md'));\n    return (\n        <List\n            filters={isSmall ? visitorFilters : undefined}\n            sort={{ field: 'last_seen', order: 'DESC' }}\n            perPage={25}\n            aside={<VisitorListAside />}\n            actions={<VisitorListActions />}\n            title={<VisitorTitle />}\n        >\n            {isXsmall ? (\n                <MobileGrid />\n            ) : (\n                <DataTable\n                    rowClick=\"edit\"\n                    sx={{\n                        '& .column-groups': {\n                            md: { display: 'none' },\n                            lg: { display: 'table-cell' },\n                        },\n                    }}\n                    hiddenColumns={['birthday']}\n                >\n                    <Column\n                        source=\"last_name\"\n                        label=\"resources.customers.fields.full_name\"\n                        field={CustomerLinkField}\n                    />\n                    <Column source=\"last_seen\" field={DateField} />\n                    <ColumnNumber\n                        source=\"nb_orders\"\n                        label=\"resources.customers.fields.orders\"\n                    />\n                    <ColumnNumber\n                        source=\"total_spent\"\n                        align=\"right\"\n                        cellSx={record =>\n                            record.total_spent > 500 ? { color: 'red' } : {}\n                        }\n                        options={{ style: 'currency', currency: 'USD' }}\n                    />\n                    <Column source=\"latest_purchase\">\n                        <DateField source=\"latest_purchase\" showTime />\n                    </Column>\n                    <Column\n                        source=\"has_newsletter\"\n                        label=\"News.\"\n                        field={BooleanField}\n                    />\n                    <Column source=\"groups\" field={SegmentsField} />\n                    <Column source=\"birthday\" field={DateField} />\n                </DataTable>\n            )}\n        </List>\n    );\n};\n\nexport default VisitorList;\n","import VisitorIcon from '@mui/icons-material/People';\n\nimport VisitorList from './VisitorList';\nimport VisitorCreate from './VisitorCreate';\nimport VisitorEdit from './VisitorEdit';\n\nconst resource = {\n    list: VisitorList,\n    create: VisitorCreate,\n    edit: VisitorEdit,\n    icon: VisitorIcon,\n    recordRepresentation: (record: any) =>\n        `${record.first_name} ${record.last_name}`,\n};\n\nexport default resource;\n","import { Button } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { useTranslate } from 'react-admin';\nimport queryString from 'query-string';\n\nimport visitors from '../visitors';\n\nconst LinkToRelatedCustomers = ({ segment }: { segment: string }) => {\n  const translate = useTranslate();\n  return (\n    <Button\n      size=\"small\"\n      color=\"primary\"\n      component={Link}\n      to={{\n        pathname: '/customers',\n        search: queryString.stringify({\n          filter: { groups: segment },\n        }),\n      }}\n      state={{ _scrollToTop: true }}\n      sx={{\n        display: 'inline-flex',\n        alignItems: 'center',\n      }}\n    >\n      <visitors.icon sx={{ paddingRight: '0.5em' }} />\n      {translate('resources.segments.fields.customers')}\n    </Button>\n  );\n};\n\nexport default LinkToRelatedCustomers;\n","import {\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from '@mui/material';\nimport {\n  useTranslate,\n  Title,\n  useDefaultTitle,\n  useGetResourceLabel,\n} from 'react-admin';\n\nimport LinkToRelatedCustomers from './LinkToRelatedCustomers';\nimport segments from './data';\n\nconst Segments = () => {\n  const appTitle = useDefaultTitle();\n  const translate = useTranslate();\n  const getResourceLabel = useGetResourceLabel();\n  const pageTitle = translate(`ra.page.list`, {\n    name: getResourceLabel('segments', 2),\n  });\n\n  return (\n    <>\n      <title>{`${appTitle} - ${pageTitle}`}</title>\n      <Card sx={{ mt: 2 }}>\n        <Title title={pageTitle} />\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>\n                {translate('resources.segments.fields.name')}\n              </TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {segments.map(segment => (\n              <TableRow key={segment.id}>\n                <TableCell>{translate(segment.name)}</TableCell>\n                <TableCell>\n                  <LinkToRelatedCustomers\n                    segment={segment.id}\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Card>\n    </>\n  );\n};\n\nexport default Segments;\n","import { defaultTheme } from 'react-admin';\n\n/**\n * Soft: A gentle theme for apps with rich content (images, charts, maps, etc).\n *\n * Uses white app bar, rounder corners, light colors.\n */\n\nexport const softDarkTheme = {\n  palette: {\n    primary: {\n      main: '#D4AF37',\n    },\n    secondary: {\n      main: '#D4AF37',\n    },\n    mode: 'dark' as 'dark', // Switching the dark mode on is a single property value change.\n  },\n  typography: {\n    fontFamily: '\"Noto Sans Lao\", \"Canela Trial\", sans-serif',\n  },\n  sidebar: {\n    width: 200,\n  },\n  components: {\n    ...defaultTheme.components,\n    RaMenuItemLink: {\n      styleOverrides: {\n        root: {\n          borderLeft: '3px solid #000',\n          '&.RaMenuItemLink-active': {\n            borderLeft: '3px solid #90caf9',\n          },\n        },\n      },\n    },\n    MuiFilledInput: {\n      styleOverrides: {},\n    },\n    MuiAppBar: {\n      styleOverrides: {\n        colorSecondary: {\n          color: '#ffffffb3',\n          backgroundColor: '#616161',\n        },\n      },\n      defaultProps: {\n        elevation: 1,\n      },\n    },\n  },\n};\n\nexport const softLightTheme = {\n  palette: {\n    primary: {\n      main: '#4f3cc9',\n    },\n    secondary: {\n      light: '#5f5fc4',\n      main: '#283593',\n      dark: '#001064',\n      contrastText: '#fff',\n    },\n    background: {\n      default: '#fcfcfe',\n    },\n    mode: 'light' as 'light',\n  },\n  typography: {\n    fontFamily: '\"Noto Sans Lao\", \"Canela Trial\", sans-serif',\n  },\n  shape: {\n    borderRadius: 10,\n  },\n  sidebar: {\n    width: 200,\n  },\n  components: {\n    ...defaultTheme.components,\n    RaMenuItemLink: {\n      styleOverrides: {\n        root: {\n          borderLeft: '3px solid #fff',\n          '&.RaMenuItemLink-active': {\n            borderLeft: '3px solid #4f3cc9',\n          },\n        },\n      },\n    },\n    MuiPaper: {\n      styleOverrides: {\n        elevation1: {\n          boxShadow: 'none',\n        },\n        root: {\n          border: '1px solid #e0e0e3',\n          backgroundClip: 'padding-box',\n        },\n      },\n    },\n    MuiAppBar: {\n      styleOverrides: {\n        colorSecondary: {\n          color: '#808080',\n          backgroundColor: '#fff',\n        },\n      },\n      defaultProps: {\n        elevation: 1,\n      },\n    },\n    MuiLinearProgress: {\n      styleOverrides: {\n        colorPrimary: {\n          backgroundColor: '#f5f5f5',\n        },\n        barColorPrimary: {\n          backgroundColor: '#d7d7d7',\n        },\n      },\n    },\n    MuiTableRow: {\n      styleOverrides: {\n        root: {\n          '&:last-child td': { border: 0 },\n        },\n      },\n    },\n  },\n};\n","import { RaThemeOptions } from 'react-admin';\n\n/** Just for fun */\n\nexport const chiptuneTheme: RaThemeOptions = {\n    palette: {\n        mode: 'dark' as 'dark',\n        primary: {\n            main: '#D4AF37',\n        },\n        background: {\n            default: '#111111',\n            paper: '#212121',\n        },\n        text: {\n            primary: '#D4AF37',\n        },\n    },\n    typography: {\n        fontFamily: `'Pixelify Sans', cursive`,\n    },\n    components: {\n        MuiAutocomplete: { defaultProps: { fullWidth: true } },\n        MuiFormControl: { defaultProps: { fullWidth: true } },\n        MuiTextField: { defaultProps: { fullWidth: true } },\n        RaSimpleFormIterator: { defaultProps: { fullWidth: true } },\n    },\n};\n","import { createTheme, lighten } from '@mui/material';\nimport { RaThemeOptions } from 'react-admin';\n\nconst defaultTheme = createTheme();\nconst lightTheme: RaThemeOptions = {\n    palette: {\n        mode: 'light',\n        bulkActionsToolbarBackgroundColor: lighten(\n            defaultTheme.palette.primary.light,\n            0.8\n        ),\n    },\n};\nconst darkTheme: RaThemeOptions = {\n    palette: {\n        mode: 'dark',\n        bulkActionsToolbarBackgroundColor: defaultTheme.palette.primary.dark,\n    },\n};\n\nexport const cssVariablesTheme = createTheme({\n    cssVariables: true,\n    defaultColorScheme: 'light',\n    colorSchemes: {\n        light: lightTheme,\n        dark: darkTheme,\n    },\n});\n","import {\n    RaThemeOptions,\n    defaultLightTheme,\n    defaultDarkTheme,\n    nanoDarkTheme,\n    nanoLightTheme,\n    radiantDarkTheme,\n    radiantLightTheme,\n    houseDarkTheme,\n    houseLightTheme,\n    bwLightTheme,\n    bwDarkTheme,\n} from 'react-admin';\n\nimport { softDarkTheme, softLightTheme } from './softTheme';\nimport { chiptuneTheme } from './chiptuneTheme';\nimport { cssVariablesTheme } from './cssVariablesTheme';\n\nexport type ThemeName =\n    | 'soft'\n    | 'B&W'\n    | 'default'\n    | 'nano'\n    | 'radiant'\n    | 'house'\n    | 'chiptune'\n    | 'cssVariables';\n\nexport type Theme = {\n    name: ThemeName;\n    light?: RaThemeOptions;\n    dark?: RaThemeOptions;\n    single?: RaThemeOptions;\n};\n\nconst BW_SIDEBAR_OVERRIDE = {\n    styleOverrides: {\n        root: {\n            '& .SubMenu .MuiMenuItem-root': {\n                paddingLeft: 24,\n            },\n            '& .RaMenu-closed .SubMenu .MuiMenuItem-root': {\n                paddingLeft: 8,\n            },\n        },\n    },\n};\n\nexport const themes: Theme[] = [\n    { name: 'soft', light: softLightTheme, dark: softDarkTheme },\n    {\n        name: 'cssVariables',\n        single: cssVariablesTheme,\n    },\n    { name: 'default', light: defaultLightTheme, dark: defaultDarkTheme },\n    {\n        name: 'B&W',\n        light: {\n            ...bwLightTheme,\n            components: {\n                ...bwLightTheme.components,\n                RaSidebar: BW_SIDEBAR_OVERRIDE,\n            },\n        },\n        dark: {\n            ...bwDarkTheme,\n            components: {\n                ...bwDarkTheme.components,\n                RaSidebar: BW_SIDEBAR_OVERRIDE,\n            },\n        },\n    },\n    { name: 'nano', light: nanoLightTheme, dark: nanoDarkTheme },\n    { name: 'radiant', light: radiantLightTheme, dark: radiantDarkTheme },\n    { name: 'house', light: houseLightTheme, dark: houseDarkTheme },\n    { name: 'chiptune', light: chiptuneTheme },\n];\n","import { createTheme } from '@mui/material/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: { main: '#C98B6B' },\n    secondary: { main: '#C98B6B' },\n    error: { main: '#B71C1C' },\n    warning: { main: '#FF5722' },\n    success: { main: '#8BC34A' },\n    background: {\n      default: 'linear-gradient(to bottom right, #F5F5F5, #FBF8F4)',\n      paper: '#FBF8F4',\n    },\n    text: { primary: '#000', secondary: '#000' },\n  },\n  typography: {\n    fontFamily: '\"Noto Sans Lao\", \"Canela Trial\", sans-serif',\n    button: { textTransform: 'none' },\n  },\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: {\n        html: {\n          // Global font override\n          fontFamily: `'Noto Sans Lao', 'Canela Trial', sans-serif`,\n        },\n      },\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          borderRadius: '10px',\n          color: '#F5F5F5',\n          fontWeight: 'bold',\n          padding: '8px 14px',\n          '&:hover': {\n            background: 'linear-gradient(45deg, #ab6936 30%, #C98B6B 90%)',\n          },\n        },\n      },\n    },\n  },\n});\n\nexport default theme;\n","import createCache from '@emotion/cache';\nimport { CacheProvider } from '@emotion/react';\nimport { CssBaseline, ThemeProvider } from '@mui/material';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport theme from './theme';\n\nconst MuiProvider = ({ children }: { children: React.ReactNode }) => {\n   const emotionCache = createCache({ key: 'css' });\n\n  return (\n    <CacheProvider value={emotionCache}>\n      <ThemeProvider theme={theme}>\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n          <CssBaseline />\n          {children}\n        </LocalizationProvider>\n      </ThemeProvider>\n    </CacheProvider>\n  );\n};\n\nexport default MuiProvider;\n","import { Download } from '@mui/icons-material';\nimport { Avatar, Button, Switch, Theme, useMediaQuery } from '@mui/material';\nimport * as React from 'react';\nimport {\n  ColumnsButton,\n  CreateButton,\n  DataTable,\n  DateField,\n  EmailField,\n  List,\n  SearchInput,\n  SelectInput,\n  TopToolbar,\n  useDataProvider,\n  useDefaultTitle,\n  useListContext,\n  useNotify,\n  useRefresh,\n  useUpdate,\n} from 'react-admin';\nimport * as XLSX from 'xlsx';\nimport { User } from '../dataProvider/usersDataProvider';\n\nconst userFilters = [\n  <SearchInput key='q' source='q' alwaysOn />,\n  <SelectInput\n    key='verified'\n    source='verified'\n    choices={[\n      { id: '', name: 'All Status' },\n      { id: true, name: 'Verified' },\n      { id: false, name: 'Unverified' },\n    ]}\n    label='Status'\n    emptyText='All Status'\n  />,\n  <SelectInput\n    key='emailVisibility'\n    source='emailVisibility'\n    choices={[\n      { id: '', name: 'All Email Visibility' },\n      { id: true, name: 'Email Visible' },\n      { id: false, name: 'Email Hidden' },\n    ]}\n    label='Email Visibility'\n    emptyText='All Email Visibility'\n  />,\n  <SearchInput\n    key='email'\n    source='email'\n    label='Search by Email'\n    placeholder='Enter email address'\n  />,\n  <SearchInput\n    key='username'\n    source='username'\n    label='Search by Username'\n    placeholder='Enter username'\n  />,\n];\n\nconst UserListActions = () => {\n  const dataProvider = useDataProvider();\n  const notify = useNotify();\n\n  const handleExportExcel = async () => {\n    try {\n      const { data } = await dataProvider.getList('users', {\n        pagination: { page: 1, perPage: 1000 },\n        sort: { field: 'created', order: 'DESC' },\n        filter: {},\n      });\n\n      const exportData = data.map((user: User) => ({\n        'Full Name': user.full_name,\n        Username: user.username,\n        Email: user.email,\n        Phone: user.phone_number,\n        Verified: user.verified ? 'Yes' : 'No',\n        Created: new Date(user.created).toLocaleDateString(),\n        Updated: new Date(user.updated).toLocaleDateString(),\n      }));\n\n      const worksheet = XLSX.utils.json_to_sheet(exportData);\n      const workbook = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(workbook, worksheet, 'Users');\n\n      XLSX.writeFile(\n        workbook,\n        `users_export_${new Date().toISOString().split('T')[0]}.xlsx`\n      );\n      notify('Excel file exported successfully', { type: 'success' });\n    } catch (error) {\n      notify('Failed to export Excel file', { type: 'error' });\n    }\n  };\n\n  return (\n    <TopToolbar>\n      <Button\n        onClick={handleExportExcel}\n        startIcon={<Download />}\n        variant='outlined'\n        size='small'\n      >\n        Export Excel\n      </Button>\n      <CreateButton />\n      <ColumnsButton />\n    </TopToolbar>\n  );\n};\n\nconst UserTitle = () => {\n  const title = useDefaultTitle();\n  const { defaultTitle } = useListContext();\n  return (\n    <>\n      <title>{`${title} - ${defaultTitle}`}</title>\n      <span>{defaultTitle}</span>\n    </>\n  );\n};\n\nconst Column = DataTable.Col<User>;\n\nconst VerifiedField = (record: User) => {\n  const [update] = useUpdate();\n  const notify = useNotify();\n  const refresh = useRefresh();\n\n  const handleVerifiedChange = async (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    event.stopPropagation();\n    if (!record) return;\n\n    const newVerified = event.target.checked;\n    try {\n      await update('users', {\n        id: record.id,\n        data: { ...record, verified: newVerified },\n        previousData: record,\n      });\n      notify(`User ${newVerified ? 'verified' : 'unverified'} successfully`, {\n        type: 'success',\n      });\n      refresh();\n    } catch (error) {\n      notify('Error updating verification status', { type: 'error' });\n    }\n  };\n\n  return (\n    <Switch\n      checked={record?.verified || false}\n      onChange={handleVerifiedChange}\n      size='small'\n      color='success'\n    />\n  );\n};\n\nconst AvatarField = (record: User) => {\n  if (!record?.avatar) return null;\n\n  return (\n    <Avatar\n      src={record.avatar}\n      alt={record.username}\n      sx={{ width: 32, height: 32 }}\n    />\n  );\n};\n\nconst UserList = () => {\n  const isXsmall = useMediaQuery<Theme>((theme) =>\n    theme.breakpoints.down('sm')\n  );\n  const isSmall = useMediaQuery<Theme>((theme) => theme.breakpoints.down('md'));\n\n  return (\n    <List\n      filters={userFilters}\n      sort={{ field: 'created', order: 'DESC' }}\n      perPage={25}\n      actions={<UserListActions />}\n      title={<UserTitle />}\n    >\n      <DataTable\n        rowClick='edit'\n        sx={{\n          '& .column-phone_number': {\n            md: { display: 'none' },\n            lg: { display: 'table-cell' },\n          },\n        }}\n      >\n        <Column source='avatar' render={AvatarField} />\n        <Column source='full_name' label='Full Name' />\n        <Column source='username' label='Username' />\n        <Column source='email' field={EmailField} />\n        <Column source='phone_number' label='Phone' />\n        {/* <Column source='verified' render={VerifiedField} label='Verified' /> */}\n\n        <Column source='created' field={DateField} label='Created' />\n        <Column source='updated' field={DateField} label='Updated' />\n      </DataTable>\n    </List>\n  );\n};\n\nexport default UserList;\n","import * as React from 'react';\nimport {\n    BooleanInput,\n    Create,\n    email,\n    required,\n    SimpleForm,\n    TextInput,\n    PasswordInput,\n    useNotify,\n    useRedirect,\n    ImageInput,\n    ImageField,\n} from 'react-admin';\nimport { Box, Typography } from '@mui/material';\n\nconst UserCreate = () => {\n    const notify = useNotify();\n    const redirect = useRedirect();\n\n    const validateForm = (values: any) => {\n        const errors: any = {};\n        if (!values.username) {\n            errors.username = 'Username is required';\n        }\n        if (!values.email) {\n            errors.email = 'Email is required';\n        }\n        if (!values.full_name) {\n            errors.full_name = 'Full name is required';\n        }\n        if (!values.password) {\n            errors.password = 'Password is required';\n        } else if (values.password.length < 8) {\n            errors.password = 'Password must be at least 8 characters long';\n        }\n        if (values.password !== values.passwordConfirm) {\n            errors.passwordConfirm = 'Passwords do not match';\n        }\n        return errors;\n    };\n\n    return (\n        <Create\n            title=\"Create User\"\n            mutationOptions={{\n                onSuccess: () => {\n                    notify('User created successfully', { type: 'success' });\n                    redirect('list', 'users');\n                },\n                onError: (error: any) => {\n                    notify(`Error creating user: ${error.message}`, { type: 'error' });\n                },\n            }}\n        >\n            <SimpleForm validate={validateForm}>\n                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, maxWidth: 600 }}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Basic Information\n                    </Typography>\n                    \n                    <TextInput\n                        source=\"username\"\n                        validate={[required()]}\n                        fullWidth\n                        helperText=\"Username must be unique\"\n                    />\n                    \n                    <TextInput\n                        source=\"full_name\"\n                        validate={[required()]}\n                        fullWidth\n                        label=\"Full Name\"\n                    />\n                    \n                    <TextInput\n                        source=\"email\"\n                        validate={[required(), email()]}\n                        fullWidth\n                        helperText=\"Email must be unique\"\n                    />\n                    \n                    <TextInput\n                        source=\"phone_number\"\n                        fullWidth\n                        label=\"Phone Number\"\n                    />\n\n                    <ImageInput source=\"avatar\" label=\"Avatar\">\n                        <ImageField source=\"src\" title=\"title\" />\n                    </ImageInput>\n\n                    <Typography variant=\"h6\" gutterBottom sx={{ mt: 2 }}>\n                        Account Settings\n                    </Typography>\n                    \n                    <PasswordInput\n                        source=\"password\"\n                        validate={[required()]}\n                        fullWidth\n                        helperText=\"Password must be at least 8 characters long\"\n                    />\n                    \n                    <PasswordInput\n                        source=\"passwordConfirm\"\n                        validate={[required()]}\n                        fullWidth\n                        label=\"Confirm Password\"\n                        helperText=\"Must match the password above\"\n                    />\n                </Box>\n            </SimpleForm>\n        </Create>\n    );\n};\n\nexport default UserCreate;","import { Box, Card, CardContent, Grid, Typography } from '@mui/material';\nimport { useEffect } from 'react';\nimport {\n  DateField,\n  Edit,\n  email,\n  ImageField,\n  ImageInput,\n  PasswordInput,\n  required,\n  SimpleForm,\n  TextField,\n  TextInput,\n  useRecordContext,\n  useRefresh,\n} from 'react-admin';\nimport { useLocation } from 'react-router';\nimport { useImageStore } from '../store/imageStore';\n\nconst UserEdit = () => {\n  const { selectImage, setSelectImage } = useImageStore(); // Use the store\n  const refresh = useRefresh();\n\n  // Clear selectImage when route changes\n  const location = useLocation();\n  useEffect(() => {\n    setSelectImage(null);\n    refresh();\n  }, [location.pathname, setSelectImage]);\n\n  console.log('=> selectImage', selectImage);\n\n  return (\n    <Edit title='Edit User'>\n      <SimpleForm>\n        <Grid container spacing={3}>\n          <Grid\n            size={{\n              xs: 12,\n              md: 8,\n            }}\n          >\n            <Card>\n              <CardContent>\n                <Typography variant='h6' gutterBottom>\n                  Basic Information\n                </Typography>\n\n                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                  <TextInput\n                    source='username'\n                    validate={[required()]}\n                    fullWidth\n                    helperText='Username must be unique'\n                  />\n\n                  <TextInput\n                    source='full_name'\n                    validate={[required()]}\n                    fullWidth\n                    label='Full Name'\n                  />\n\n                  <TextInput\n                    source='email'\n                    validate={[required(), email()]}\n                    fullWidth\n                    helperText='Email must be unique'\n                  />\n\n                  <TextInput\n                    source='phone_number'\n                    fullWidth\n                    label='Phone Number'\n                  />\n\n                  <ImageInput\n                    source='avatar'\n                    label='Avatar'\n                    onChange={(e) => {\n                      setSelectImage(e);\n                    }}\n                  >\n                    <ImageField source='src' title='title' />\n                  </ImageInput>\n\n                  <ImageField\n                    source='avatar'\n                    label='Current Image'\n                    sx={{\n                      display: selectImage !== null ? 'none' : 'block',\n                    }}\n                  />\n                </Box>\n\n                <Typography variant='h6' gutterBottom sx={{ mt: 3 }}>\n                  Change Password\n                </Typography>\n                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                  <PasswordInput\n                    source='oldPassword'\n                    fullWidth\n                    label='Old Password'\n                    helperText='Required to change the password'\n                  />\n                  <PasswordInput\n                    source='password'\n                    fullWidth\n                    helperText='Leave empty to keep current password. Must be at least 8 characters long.'\n                  />\n\n                  <PasswordInput\n                    source='passwordConfirm'\n                    fullWidth\n                    label='Confirm Password'\n                    helperText='Must match the password above'\n                  />\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid\n            size={{\n              xs: 12,\n              md: 4,\n            }}\n          >\n            <Card>\n              <CardContent>\n                <Typography variant='h6' gutterBottom>\n                  User Information\n                </Typography>\n\n                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                  <Box\n                    display='flex'\n                    flexDirection='column'\n                    alignItems='center'\n                  >\n                    <Typography\n                      variant='body2'\n                      color='text.secondary'\n                      sx={{ mb: 1 }}\n                    >\n                      Avatar\n                    </Typography>\n                    <AvatarDisplay />\n                  </Box>\n                  <Box>\n                    <Typography variant='body2' color='text.secondary'>\n                      User ID\n                    </Typography>\n                    <TextField source='id' />\n                  </Box>\n\n                  <Box>\n                    <Typography variant='body2' color='text.secondary'>\n                      Username\n                    </Typography>\n                    <TextField source='username' />\n                  </Box>\n\n                  <Box>\n                    <Typography variant='body2' color='text.secondary'>\n                      Created\n                    </Typography>\n                    <DateField source='created' showTime />\n                  </Box>\n\n                  <Box>\n                    <Typography variant='body2' color='text.secondary'>\n                      Updated\n                    </Typography>\n                    <DateField source='updated' showTime />\n                  </Box>\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nconst AvatarDisplay = () => {\n  const record = useRecordContext();\n  if (!record?.avatar) return null;\n  return (\n    <img\n      src={record.avatar}\n      alt='User Avatar'\n      style={{ width: 80, height: 80, borderRadius: '50%', objectFit: 'cover' }}\n    />\n  );\n};\n\nexport default UserEdit;\n","import * as React from 'react';\nimport {\n    Show,\n    SimpleShowLayout,\n    TextField,\n    EmailField,\n    BooleanField,\n    DateField,\n    TopToolbar,\n    EditButton,\n    DeleteButton,\n} from 'react-admin';\nimport { Box, Typography, Card, CardContent, Grid, Chip } from '@mui/material';\n\nconst UserShowActions = () => (\n    <TopToolbar>\n        <EditButton />\n        <DeleteButton />\n    </TopToolbar>\n);\n\nconst UserShow = () => {\n    return (\n        <Show actions={<UserShowActions />} title=\"User Details\">\n            <SimpleShowLayout>\n                <Grid container spacing={3}>\n                    <Grid size={{ xs: 12, md: 8 }}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant=\"h6\" gutterBottom>\n                                    User Information\n                                </Typography>\n                                \n                                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                                    <Box>\n                                        <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                                            Full Name\n                                        </Typography>\n                                        <TextField source=\"full_name\" variant=\"h6\" />\n                                    </Box>\n                                    \n                                    <Box>\n                                        <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                                            Username\n                                        </Typography>\n                                        <TextField source=\"username\" />\n                                    </Box>\n                                    \n                                    <Box>\n                                        <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                                            Email\n                                        </Typography>\n                                        <EmailField source=\"email\" />\n                                    </Box>\n                                    \n                                    <Box>\n                                        <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                                            Phone Number\n                                        </Typography>\n                                        <TextField source=\"phone_number\" />\n                                    </Box>\n                                </Box>\n                            </CardContent>\n                        </Card>\n                        \n                        {/* <Card sx={{ mt: 2 }}>\n                            <CardContent>\n                                <Typography variant=\"h6\" gutterBottom>\n                                    Account Status\n                                </Typography>\n                                \n                                <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap' }}>\n                                    <BooleanField\n                                        source=\"verified\"\n                                        label=\"Verified\"\n                                    />\n                                    \n                                    <BooleanField\n                                        source=\"emailVisibility\"\n                                        label=\"Email Visibility\"\n                                    />\n                                </Box>\n                            </CardContent>\n                        </Card> */}\n                    </Grid>\n                    \n                    <Grid size={{ xs: 12, md: 4 }}>\n                        <Card>\n                            <CardContent>\n                                <Typography variant=\"h6\" gutterBottom>\n                                    System Information\n                                </Typography>\n                                \n                                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n                                    <Box>\n                                        <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                                            User ID\n                                        </Typography>\n                                        <TextField source=\"id\" />\n                                    </Box>\n                                    \n                                    <Box>\n                                        <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                                            Collection ID\n                                        </Typography>\n                                        <TextField source=\"collectionId\" />\n                                    </Box>\n                                    \n                                    <Box>\n                                        <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                                            Collection Name\n                                        </Typography>\n                                        <TextField source=\"collectionName\" />\n                                    </Box>\n                                    \n                                    <Box>\n                                        <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                                            Created\n                                        </Typography>\n                                        <DateField source=\"created\" showTime />\n                                    </Box>\n                                    \n                                    <Box>\n                                        <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                                            Last Updated\n                                        </Typography>\n                                        <DateField source=\"updated\" showTime />\n                                    </Box>\n                                </Box>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </SimpleShowLayout>\n        </Show>\n    );\n};\n\nexport default UserShow;","import { People } from '@mui/icons-material';\n\nimport UserList from './UserList';\nimport UserCreate from './UserCreate';\nimport UserEdit from './UserEdit';\nimport UserShow from './UserShow';\n\nconst users = {\n    list: UserList,\n    create: UserCreate,\n    edit: UserEdit,\n    show: UserShow,\n    icon: People,\n};\n\nexport default users;","import polyglotI18nProvider from 'ra-i18n-polyglot';\nimport {\n  Admin,\n  CustomRoutes,\n  Resource,\n  localStorageStore,\n  useStore,\n  StoreContextProvider,\n} from 'react-admin';\nimport { Route } from 'react-router';\n\nimport authProvider from './authProvider';\nimport categories from './categories';\nimport { Dashboard } from './dashboard';\nimport dataProviderFactory from './dataProvider';\nimport englishMessages from './i18n/en';\nimport invoices from './invoices';\nimport { Layout } from './layout';\nimport orders from './orders';\nimport products from './products';\nimport reviews from './reviews';\nimport Segments from './segments/Segments';\nimport visitors from './visitors';\nimport customers from './customers';\nimport { themes, ThemeName } from './themes/themes';\nimport LoginPage from './layout/Login';\nimport MuiProvider from './styles/ThemeProvider';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { CurrencyProvider } from './components/CurrencySelector/CurrencyProvider';\nimport blogs from './blogs';\nimport users from './users';\n\nconst i18nProvider = polyglotI18nProvider(\n  (locale) => {\n    if (locale === 'la') {\n      return import('./i18n/la').then((messages) => messages.default);\n    }\n\n    // Always fallback on english\n    return englishMessages;\n  },\n  'en',\n  [\n    { locale: 'en', name: 'English' },\n    { locale: 'la', name: 'Lao' },\n  ]\n);\n\nconst store = localStorageStore(undefined, 'ECommerce');\n\nconst App = () => {\n  const [themeName] = useStore<ThemeName>('themeName', 'soft');\n  const singleTheme = themes.find((theme) => theme.name === themeName)?.single;\n  const lightTheme = themes.find((theme) => theme.name === themeName)?.light;\n  const darkTheme = themes.find((theme) => theme.name === themeName)?.dark;\n  return (\n    <Admin\n      title='Posters Galore Admin'\n      dataProvider={dataProviderFactory(\n        process.env.REACT_APP_DATA_PROVIDER || ''\n      )}\n      store={store}\n      authProvider={authProvider}\n      dashboard={Dashboard}\n      loginPage={LoginPage}\n      layout={Layout}\n      i18nProvider={i18nProvider}\n      disableTelemetry\n      theme={singleTheme}\n      lightTheme={lightTheme}\n      darkTheme={darkTheme}\n      defaultTheme='light'\n      requireAuth\n    >\n      <CustomRoutes>\n        <Route path='/segments' element={<Segments />} />\n      </CustomRoutes>\n      <Resource name='customers' {...customers} />\n      <Resource name='orders' {...orders} />\n      <Resource name='invoices' {...invoices} />\n      <Resource name='products' {...products} />\n      <Resource name='categories' {...categories} />\n      <Resource name='reviews' {...reviews} />\n      <Resource name='blogs' {...blogs} />\n      <Resource name='users' {...users} />\n    </Admin>\n  );\n};\n\n// Create a client\nconst queryClient = new QueryClient();\n\nconst AppWrapper = () => (\n  <StoreContextProvider value={store}>\n    <QueryClientProvider client={queryClient}>\n      <MuiProvider>\n        <CurrencyProvider>\n          <App />\n        </CurrencyProvider>\n      </MuiProvider>\n    </QueryClientProvider>\n  </StoreContextProvider>\n);\n\nexport default AppWrapper;\n","import { createRoot } from 'react-dom/client';\n\nimport App from './App';\n\nconst container = document.getElementById('root');\nif (!container) {\n    throw new Error('No container found');\n}\nconst root = createRoot(container);\n\nroot.render(<App />);\n"],"file":"assets/index-BV2nViqK.js"}