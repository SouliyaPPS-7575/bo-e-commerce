import englishMessages from 'ra-language-english';
import { TranslationMessages } from 'react-admin';

const customEnglishMessages: TranslationMessages = {
  ...englishMessages,
  search: 'Search',
  configuration: 'Configuration',
  language: 'Language',
  day_revenue_history: '30 Day Revenue History',
  no_pending_orders: 'No pending orders',
  reference_id: 'Reference ID',
  customer: 'Customer',
  quantity: 'Quantity',
  amount: 'Amount',
  status: 'Status',
  created: 'Created',
  showing: 'Showing',
  month: 'Month',
  year: 'Year',
  of: 'of',
  orders: 'orders',
  filter_options: 'Filter Options',
  date_range: 'Date Range',
  start_date: 'Start Date',
  end_date: 'End Date',
  fields: {
    basket: {
      date: 'Date',
      reference: 'Reference',
      quantity: 'Quantity',
      sum: 'Sum',
      tax_rate: 'Tax Rate',
      taxes: 'Tax',
      total: 'Total',
      unit_price: 'Unit Price',
      customer: 'Customer',
    },
    address: 'Address',
    date_gte: 'Passed Since',
    date_lte: 'Passed Before',
    nb_items: 'Nb Items',
    total_gte: 'Min amount',
    status: 'Status',
    returned: 'Returned',
    phone: 'Phone',
  },
  theme: {
    name: 'Theme',
    light: 'Light',
    dark: 'Dark',
  },
  dashboard: {
    monthly_revenue: 'Monthly Revenue',
    total_customers: 'Total Customers',
  },
  orders_management: 'Orders Management',
  month_history: '30 Day Revenue History',
  export_excel: 'Export Excel',
  confirm_status_change: 'Confirm Status Change',
  confirm_status_change_message: 'Are you sure you want to change the status to',
  cancel: 'Cancel',
  confirm: 'Confirm',
  verified: 'Verified',
  yes: 'Yes',
  no: 'No',
  shipping_address: 'Shipping Address',
  pending: 'Pending',
  purchased: 'Purchased',
  delivering: 'Delivering',
  completed: 'Completed',
  new_orders: 'New Orders',
  pending_reviews: 'Pending Reviews',
  all_reviews: 'See all reviews',
  new_customers: 'New Customers',
  all_customers: 'See all customers',
  pending_orders: 'Pending Orders',
  customer_details: 'Customer Details',
  name: 'Name',
  email: 'Email',
  phone_number: 'Phone Number',
  reference: 'Reference',
  remark: 'Remark',
  order_information: 'Order Information',
  district: 'District',
  province: 'Province',
  village: 'Village',
  shipping_name: 'Shipping Name',
  districtName: 'District',
  provinceName: 'Province',
  order_items: 'Order Items',
  qty: 'Qty',
  price: 'Price',
  total: 'Total',
  product: 'Product',
  image: 'Image',
  currency: 'Currency',
  no_items_found: 'No items found',
  lak: 'LAK',
  usd: 'USD',
  thb: 'THB',
  order_totals: 'Order Totals',
  current: 'Current',
  no_orders_found: 'No orders found for status:',
  no_products_found: 'No products found',
  edit: 'Edit',
  delete: 'Delete',
  delete_product: 'Delete Product',
  delete_product_confirmation: 'Are you sure you want to delete this product?',
  product_deleted: 'Product deleted',
  product_delete_error: 'Error: Product not deleted',
  filters: 'Filters',
  search_products: 'Search products...',
  loading_categories: 'Loading categories...',
  categories: 'Categories',
  updated: 'Updated',
  product_information: 'Product Information',
  description: 'Description',
  english: 'English',
  lao: 'Lao',
  product_details: 'Product Details',
  timestamps: 'Timestamps',
  product_image: 'Product image',
  order: {
    items:
      'by %{customer_name}, one item |||| by %{customer_name}, %{nb_items} items',
  },
  welcome: {
    title: 'Welcome to the react-admin e-commerce demo',
    subtitle:
      "This is the admin of an imaginary poster shop. Feel free to explore and modify the data - it's local to your computer, and will reset each time you reload.",
    ra_button: 'react-admin site',
    demo_button: 'Source for this demo',
  },
  menu: {
    sales: 'Sales',
    catalog: 'Catalog',
    customers: 'Customers',
  },
  events: {
    review: {
      title: 'Posted review on "%{product}"',
    },
    order: {
      title: 'Ordered 1 poster |||| Ordered %{smart_count} posters',
    },
  },
  resources: {
    customers: {
      name: 'Customer |||| Customers',
      fields: {
        orders: 'Orders',
        first_seen: 'First seen',
        full_name: 'Name',
        groups: 'Segments',
        last_seen: 'Last seen',
        last_seen_gte: 'Visited Since',
        name: 'Name',
        total_spent: 'Total spent',
        password: 'Password',
        confirm_password: 'Confirm password',
        stateAbbr: 'State',
        email: 'Email',
      },
      filters: {
        last_visited: 'Last visited',
        today: 'Today',
        this_week: 'This week',
        last_week: 'Last week',
        this_month: 'This month',
        last_month: 'Last month',
        earlier: 'Earlier',
        has_ordered: 'Has ordered',
        has_newsletter: 'Has newsletter',
        group: 'Segment',
      },
      fieldGroups: {
        identity: 'Identity',
        address: 'Address',
        stats: 'Stats',
        history: 'History',
        password: 'Password',
        change_password: 'Change Password',
      },
      page: {
        delete: 'Delete Customer',
      },
      errors: {
        password_mismatch:
          'The password confirmation is not the same as the password.',
      },
      notifications: {
        created: 'Customer created |||| %{smart_count} customers created',
        updated: 'Customer updated |||| %{smart_count} customers updated',
        deleted: 'Customer deleted |||| %{smart_count} customers deleted',
      },
    },
    orders: {
      name: 'Order |||| Orders',
      amount: '1 order |||| %{smart_count} orders',
      title: 'Order %{reference}',
      invalid_data_format: 'Invalid data format for orders',
      fields: {
        basket: {
          delivery: 'Delivery',
          reference: 'Reference',
          quantity: 'Quantity',
          sum: 'Sum',
          tax_rate: 'Tax Rate',
          taxes: 'Tax',
          total: 'Total',
          unit_price: 'Unit Price',
          customer_id: 'Customer ID',
        },
        address: 'Address',
        date_gte: 'Passed Since',
        date_lte: 'Passed Before',
        nb_items: 'Nb Items',
        total_gte: 'Min amount',
        status: 'Status',
        returned: 'Returned',
        phone: 'Phone',
      },
      section: {
        order: 'Order',
        customer: 'Customer',
        shipping_address: 'Shipping Address',
        items: 'Items',
        total: 'Totals',
      },
      notifications: {
        created: 'Order created |||| %{smart_count} orders created',
        updated: 'Order updated |||| %{smart_count} orders updated',
        deleted: 'Order deleted |||| %{smart_count} orders deleted',
      },
    },
    blogs: {
      name: 'Blog |||| Blogs',
    },
    users: {
      name: 'User admin |||| User admin',
      fields: {
        full_name: 'Full Name',
        username: 'Username',
        email: 'Email',
        phone_number: 'Phone Number',
        verified: 'Verified',
        emailVisibility: 'Email Visibility',
        password: 'Password',
        passwordConfirm: 'Confirm Password',
      },
    },
    currencies: {
      name: 'Currency |||| Currencies',
      fields: {
        ccy: 'Currency Code',
        type: 'Type',
        rate: 'Exchange Rate',
        created: 'Created',
        updated: 'Updated',
      },
      notifications: {
        created: 'Currency created |||| %{smart_count} currencies created',
        updated: 'Currency updated |||| %{smart_count} currencies updated',
        deleted: 'Currency deleted |||| %{smart_count} currencies deleted',
      },
    },
    invoices: {
      name: 'Invoice |||| Invoices',
      fields: {
        date: 'Invoice date',
        customer_id: 'Customer',
        order_id: 'Order',
        date_gte: 'Passed Since',
        date_lte: 'Passed Before',
        total_gte: 'Min amount',
        address: 'Address',
      },
      notifications: {
        created: 'Invoice created |||| %{smart_count} invoices created',
        updated: 'Invoice updated |||| %{smart_count} invoices updated',
        deleted: 'Invoice deleted |||| %{smart_count} invoices deleted',
      },
    },
    products: {
      name: 'Products |||| Products',
      fields: {
        category_id: 'Category',
        height_gte: 'Min height',
        height_lte: 'Max height',
        height: 'Height',
        image: 'Image',
        price: 'Price',
        reference: 'Reference',
        sales: 'Sales',
        stock_lte: 'Low Stock',
        stock: 'Stock',
        thumbnail: 'Thumbnail',
        width_gte: 'Min width',
        width_lte: 'Max width',
        width: 'Width',
      },
      tabs: {
        image: 'Image',
        details: 'Details',
        description: 'Description',
        reviews: 'Reviews',
      },
      filters: {
        categories: 'Categories',
        stock: 'Stock',
        no_stock: 'Out of stock',
        low_stock: '1 - 9 items',
        average_stock: '10 - 49 items',
        enough_stock: '50 items & more',
        sales: 'Sales',
        best_sellers: 'Best sellers',
        average_sellers: 'Average',
        low_sellers: 'Low',
        never_sold: 'Never sold',
      },
      notifications: {
        created: 'Poster created |||| %{smart_count} posters created',
        updated: 'Poster updated |||| %{smart_count} posters updated',
        deleted: 'Poster deleted |||| %{smart_count} posters deleted',
      },
    },
    categories: {
      name: 'Category |||| Categories',
      fields: {
        products: 'Products',
      },
      notifications: {
        created: 'Category created |||| %{smart_count} categories created',
        updated: 'Category updated |||| %{smart_count} categories updated',
        deleted: 'Category deleted |||| %{smart_count} categories deleted',
      },
    },
    reviews: {
      name: 'Review |||| Reviews',
      amount: '1 review |||| %{smart_count} reviews',
      relative_to_poster: 'Review on poster',
      detail: 'Review detail',
      fields: {
        customer_id: 'Customer',
        order_id: 'Order',
        product_id: 'Product',
        date_gte: 'Posted since',
        date_lte: 'Posted before',
        date: 'Date',
        comment: 'Comment',
        rating: 'Rating',
      },
      action: {
        accept: 'Accept',
        reject: 'Reject',
      },
      notifications: {
        created: 'Review created |||| %{smart_count} reviews created',
        updated: 'Review updated |||| %{smart_count} reviews updated',
        deleted: 'Review deleted |||| %{smart_count} reviews deleted',
        approved_success: 'Review approved',
        approved_error: 'Error: Review not approved',
        rejected_success: 'Review rejected',
        rejected_error: 'Error: Review not rejected',
      },
    },
    segments: {
      name: 'Segment |||| Segments',
      fields: {
        customers: 'Customers',
        name: 'Name',
      },
      data: {
        compulsive: 'Compulsive',
        collector: 'Collector',
        ordered_once: 'Ordered once',
        regular: 'Regular',
        returns: 'Returns',
        reviewer: 'Reviewer',
      },
    },
  },
};

export default customEnglishMessages;
